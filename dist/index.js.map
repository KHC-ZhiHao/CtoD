{
  "version": 3,
  "sources": ["../lib/plugins/index.ts", "../lib/core/plugin.ts", "../lib/plugins/retry.ts", "../lib/plugins/print-log.ts", "../lib/plugins/limiter.ts", "../lib/plugins/role.ts", "../lib/templates.ts", "../lib/core/parser.ts", "../lib/broker/chat.ts", "../lib/utils/validate.ts", "../lib/utils/error.ts", "../lib/core/translator.ts", "../lib/ctod.ts", "../lib/service/openai/index.ts", "../lib/service/openai/vision.ts", "../lib/service/openai/chat.ts", "../lib/service/openai/images-generation.ts", "../lib/service/llama3.cpp/index.ts", "../lib/utils/chinese-conv.json", "../lib/utils/chinese-conv.ts", "../lib/service/llama3.cpp/completion.ts", "../lib/service/google/chat.ts", "../lib/service/google/index.ts", "../lib/service/anthropic/chat.ts", "../lib/service/anthropic/index.ts", "../lib/service/x/index.ts", "../lib/service/x/chat.ts", "../lib/service/x/images-generation.ts"],
  "sourcesContent": ["import Retry from './retry'\nimport PrintLog from './print-log'\nimport Limiter from './limiter'\nimport Role from './role'\n\n/**\n * @zh \u4E00\u500B\u57FA\u65BC\u5370\u51FA log \u7684 plugin\u3002\n * @en A plugin based on printing log.\n */\n\nexport const PrintLogPlugin = PrintLog\n\n/**\n * @zh \u7576\u89E3\u6790\u5931\u6557\u6642\uFF0C\u6703\u81EA\u52D5\u91CD\u8A66\u7684\u5C0D\u8A71\u3002\n * @en A conversation that will automatically retry when parsing fails.\n */\n\nexport const RetryPlugin = Retry\n\n/**\n * @zh \u9650\u5236\u4F7F\u7528\u6D41\u91CF\uFF0C\u9019\u500B plugin \u53EF\u4EE5\u6709\u6548\u8B93\u6240\u6709\u5C0D\u8A71\u4E0D\u6703\u518D\u9650\u5236\u5167\u540C\u6642\u767C\u9001\uFF0C\u53EF\u7528\u65BC\u5728\u958B\u767C\u904E\u7A0B\u4E2D\u906D\u9047\u4F3A\u670D\u5668\u56E0\u983B\u7387\u904E\u9AD8\u800C\u963B\u64CB\u8ACB\u6C42\u3002\n * @en Limit the use of traffic. This plugin can effectively prevent all conversations from being sent at the same time within the limit, and can be used when the server blocks requests due to high frequency during development.\n */\n\nexport const LimiterPlugin = Limiter.plugin\n\n/**\n * @zh \u6392\u7A0B\u7CFB\u7D71\u5C07\u5168\u57DF\u8A17\u7BA1\uFF0C\u6709\u4EC0\u9EBC\u5FC5\u8981\u8A2D\u5B9A\u53EF\u4EE5\u4F86\u66F4\u52D5\u5B83\u7684\u72C0\u614B\uFF0C\u4F8B\u5982\uFF1A\u95DC\u9589\u6392\u7A0B\u3002\n * @en The scheduling system will be globally hosted. What is necessary to set can come to change its status, for example: close the schedule.\n */\nexport const LimiterPluginGlobState = Limiter\n\n/**\n * @zh \u8A2D\u5B9A\u89D2\u8272\u626E\u6F14\u3002\n * @en Set role play.\n */\n\nexport const RolePlugin = Role\n", "import { Translator } from './translator'\nimport { ChatBrokerHooks } from '../broker/chat'\nimport { Log, Hook, Event } from 'power-helper'\nimport { ValidateCallback, ValidateCallbackOutputs } from '../utils/validate'\n\ntype BrokerHooks = ChatBrokerHooks<any, any, any, any>\ntype BrokerPluginParams<\n    T extends ValidateCallback<any>,\n    R extends ValidateCallback<any>\n> = {\n    name: string\n    params: T\n    receiveData: R\n    onInstall: (context: {\n        log: Log\n        params: ValidateCallbackOutputs<T>\n        attach: Hook<BrokerHooks>['attach']\n        attachAfter: Hook<BrokerHooks>['attachAfter']\n        translator: Translator<any, any>\n        receive: (callback: (params: {\n            id: string\n            data: ValidateCallbackOutputs<R>\n        }) => void) => void\n    }) => void\n}\n\nexport class ChatBrokerPlugin<\n    T extends ValidateCallback<any>,\n    R extends ValidateCallback<any>\n> {\n    _event = new Event()\n    _params: BrokerPluginParams<T, R>\n    constructor(params: BrokerPluginParams<T, R>) {\n        this._params = params\n    }\n\n    use(params: ValidateCallbackOutputs<T>) {\n        return {\n            instance: this as any,\n            params,\n            send: (data: ValidateCallbackOutputs<R>) => { this._event.emit('receive', data) },\n            receive: (callback: any) => { this._event.on('receive', callback) },\n            __receiveData: null as unknown as ValidateCallbackOutputs<R>\n        }\n    }\n}\n", "import { ChatBrokerPlugin } from '../core/plugin'\n\nexport default new ChatBrokerPlugin({\n    name: 'retry',\n    params: yup => {\n        return {\n            retry: yup.number().required().default(1),\n            printWarn: yup.boolean().required().default(true)\n        }\n    },\n    receiveData: () => {\n        return {}\n    },\n    onInstall({ log, attach, params }) {\n        attach('parseFailed', async({ count, retry, messages, changeMessages }) => {\n            if (count <= params.retry) {\n                if (params.printWarn) {\n                    log.print(`Is Failed, Retry ${count} times.`)\n                }\n                changeMessages(messages)\n                retry()\n            }\n        })\n    }\n})\n", "import { ChatBrokerPlugin } from '../core/plugin'\n\nexport default new ChatBrokerPlugin({\n    name: 'print-log',\n    params: yup => {\n        return {\n            detail: yup.boolean().default(false)\n        }\n    },\n    receiveData: () => {\n        return {}\n    },\n    onInstall({ params, log, attach }) {\n        attach('talkBefore', async({ lastUserMessage, messages }) => {\n            log.print('Send:', { color: 'green' })\n            if (params.detail) {\n                log.print('\\n' + JSON.stringify(messages, null, 4))\n            } else {\n                log.print('\\n' + lastUserMessage)\n            }\n        })\n        attach('talkAfter', async({ parseText }) => {\n            log.print('Receive:', { color: 'cyan' })\n            log.print('\\n' + parseText)\n        })\n        attach('succeeded', async({ output }) => {\n            log.print('Output:', { color: 'yellow' })\n            try {\n                log.print('\\n' + JSON.stringify(output, null, 4))\n            } catch (error) {\n                log.print('\\n' + output)\n            }\n        })\n    }\n})\n", "import { ChatBrokerPlugin } from '../core/plugin'\nimport { Event, flow, Schedule } from 'power-helper'\n\ntype Events = {\n    run: {\n        id: string\n    }\n    waitTimeChange: {\n        waitTime: number\n    }\n}\n\nconst config = {\n    limit: 3,\n    interval: 60000,\n}\n\nconst state = {\n    event: new Event<Events>(),\n    schedule: null as Schedule | null,\n    waitTimes: [] as number[],\n    waitQueue: [] as string[]\n}\n\nexport default {\n    /**\n     * @zh \u4F60\u53EF\u4EE5\u76E3\u807D\u4E00\u4E9B\u4E8B\u4EF6\u884C\u70BA\uFF0C\u4F8B\u5982\u9084\u9700\u8981\u7B49\u5F85\u591A\u5C11\u6642\u9593\u3002\n     * @en You can listen for some event behaviors, such as how long you still need to wait.\n     */\n\n    event: state.event,\n\n    /**\n     * @zh \u9810\u8A2D\u662F\u6BCF\u5206\u9418\u9650\u52363\u6B21\uFF0C\u4F60\u53EF\u4EE5\u5728\u8A2D\u5B9A\u4E2D\u6539\u8B8A\u9650\u5236\u6D41\u91CF\u3002\n     * @en By default, the limit is 3 times per minute, and you can change the limit flow in the settings.\n     */\n\n    config,\n\n    /**\n     * @zh \u7531\u65BC\u6392\u7A0B\u6703\u5728\u80CC\u666F\u6301\u7E8C\u5012\u6578\uFF0C\u5982\u679C\u6709\u95DC\u9589\u7A0B\u5F0F\u7684\u9700\u6C42\uFF0C\u9700\u8981\u624B\u52D5\u9032\u884C\u79FB\u9664\u3002\n     * @en Since the schedule will continue to count down in the background, if there is a need to close the program, you need to manually remove it.\n     */\n\n    closeSchedule: () => {\n        if (state.schedule) {\n            state.schedule.close()\n            state.schedule = null\n        }\n    },\n\n    /**\n     * @zh Plugin \u7684\u63A5\u53E3\n     * @en Plugin interface\n     */\n\n    plugin: new ChatBrokerPlugin({\n        name: 'limiter',\n        params: () => {\n            return {}\n        },\n        receiveData: () => {\n            return {}\n        },\n        onInstall({ attach }) {\n            if (state.schedule == null) {\n                state.schedule = new Schedule()\n                state.schedule.add('calc queue', 1000, async() => {\n                    const now = Date.now()\n                    state.waitTimes = state.waitTimes.filter(time => {\n                        return now - time < config.interval\n                    })\n                    if (state.waitTimes.length !== config.limit) {\n                        let nextId = state.waitQueue.shift()\n                        if (nextId) {\n                            state.waitTimes.push(Date.now())\n                            state.event.emit('run', {\n                                id: nextId\n                            })\n                        }\n                    } else if (state.waitTimes[0]) {\n                        state.event.emit('waitTimeChange', {\n                            waitTime: Math.floor(60 - (now - state.waitTimes[0]) / 1000)\n                        })\n                    }\n                })\n                state.schedule.play()\n            }\n            attach('talkBefore', async() => {\n                const uid = flow.createUuid()\n                state.waitQueue.push(uid)\n                return new Promise(resolve => {\n                    state.event.on('run', ({ id }, { off }) => {\n                        if (id === uid) {\n                            off()\n                            resolve()\n                        }\n                    })\n                })\n            })\n        }\n    })\n}\n", "import { ChatBrokerPlugin } from '../core/plugin'\n\nexport default new ChatBrokerPlugin({\n    name: 'role',\n    params: yup => {\n        return {\n            role: yup.string().required()\n        }\n    },\n    receiveData: () => {\n        return {}\n    },\n    onInstall({ attach, params }) {\n        attach('start', async({ messages, changeMessages }) => {\n            changeMessages([\n                {\n                    role: 'user',\n                    content: `\u4F60\u73FE\u5728\u662F${params.role}\u3002`\n                },\n                {\n                    role: 'assistant',\n                    content: `\u6C92\u554F\u984C\uFF0C\u6211\u73FE\u5728\u662F${params.role}\uFF0C\u6709\u4EC0\u9EBC\u53EF\u4EE5\u5E6B\u4F60\u7684\u55CE\uFF1F`\n                },\n                ...messages\n            ])\n        })\n    }\n})\n", "import Handlebars from 'handlebars'\nimport { record } from 'power-helper'\n\ntype JsonResponseFormat = {\n    desc: string\n    example: any\n}\n\n/**\n * @zh \u5354\u52A9\u4F7F\u7528\u8005\u5C07\u683C\u5F0F\u9700\u6C42\u8F49\u6210\u8AD6\u6558\u8A9E\u53E5\u3002\n * @en Assist the user in converting the formatting requirements into declarative sentences.\n */\n\nexport const requireJsonResponse = (question: string | string[], format: Record<string, JsonResponseFormat>) => {\n    return [\n        ...(Array.isArray(question) ? question : [question]),\n        'Please respond using the following JSON format and minify the JSON without including any explanation: ',\n        '{',\n        Object.entries(format).map(([key, value]) => {\n            return [\n                `/* ${value.desc} */`,\n                `\"${key}\": ${JSON.stringify(value.example)}`,\n            ].join('\\n')\n        }).join(',\\n'),\n        '}'\n    ].join('\\n')\n}\n\n/**\n * @zh \u5354\u52A9\u4F7F\u7528\u8005\u5C07\u683C\u5F0F\u9700\u6C42\u8F49\u6210\u8AD6\u6558\u8A9E\u53E5\uFF0C\u652F\u63F4 Handlebars\u3002\n * @en Assist the user in converting the formatting requirements into declarative sentences, support Handlebars.\n */\n\nexport const requireJsonResponseWithHandlebars = (\n    value: Record<string, any>,\n    question: string | string[],\n    format: Record<string, JsonResponseFormat>\n) => {\n    const handlebars = Handlebars.create()\n\n    handlebars.registerHelper('DATA', function(this: any, value) {\n        return JSON.stringify(value)\n    })\n\n    handlebars.registerHelper('ENV', function(this: any, value) {\n        return this.__envs && value ? this.__envs[value] : ''\n    })\n\n    handlebars.registerHelper('INPUT', function(this: any) {\n        return JSON.stringify(record.omit(this, ['__envs']))\n    })\n\n    handlebars.registerHelper('JOIN', function(this: any, value) {\n        return Array.isArray(value) ? value.join() : JSON.stringify(value)\n    })\n\n    return handlebars.compile(requireJsonResponse(question, format))(value)\n}\n\n/**\n * @zh \u5354\u52A9\u4F7F\u7528\u8005\u5C07\u683C\u5F0F\u9700\u6C42\u8F49\u6210\u8AD6\u6558\u8A9E\u53E5\uFF0C\u4E26\u652F\u63F4 Json Schema\u3002\n * @en Assist the user in converting the formatting requirements into declarative sentences, and support Json Schema.\n */\n\nexport const requireJsonResponseWithJsonSchema = (question: string | string[], format: Record<string, any>) => {\n    return [\n        ...(Array.isArray(question) ? question : [question]),\n        'Please provide JSON data according to the following JSON Schema format:',\n        JSON.stringify(format)\n    ].join('\\n')\n}\n", "import JSON5 from 'json5'\n\ntype TextParserParams = {\n    /**\n     * @zh \u89E3\u8B80\u5668\u540D\u5B57\u3002\n     * @en The name of the parser.\n     */\n    name: string\n    /**\n     * @zh \u89E3\u8B80\u6587\u672C\u3002\n     * @en Read the text.\n     */\n    handler: (text: string) => Promise<any>\n}\n\nexport class TextParser {\n    private params: TextParserParams\n\n    /**\n     * @zh \u76E1\u53EF\u80FD\u5C07\u6587\u5B57\u5167\u7684 json \u89E3\u8B80\u51FA\u4F86\u3002\n     * @en Try to read the json in the text as much as possible.\n     */\n\n    static JsonMessage() {\n        return new TextParser({\n            name: 'JsonMessage',\n            handler: async (text) => {\n                try {\n                    const result = JSON.parse(text)\n                    return result\n                } catch (error) {\n                    const jsonRegex = /{(?:[^{}]|(?:{[^{}]*}))*}/\n                    const matchedText = text.match(jsonRegex)?.[0] || ''\n                    return JSON5.parse(matchedText)\n                }\n            }\n        })\n    }\n\n    constructor(params: TextParserParams) {\n        this.params = params\n    }\n\n    /**\n     * @zh \u89E3\u8B80\u5668\u540D\u5B57\u3002\n     * @en The name of the parser.\n     */\n\n    get name() {\n        return this.params.name\n    }\n\n    /**\n     * @zh \u89E3\u8B80\u6587\u672C\u3002\n     * @en Read the text.\n     */\n\n    async read(text: string) {\n        const result = await this.params.handler(text)\n        return result\n    }\n}\n", "import { TextParser } from '../core/parser'\nimport { ChatBrokerPlugin } from '../core/plugin'\nimport { Event, flow, Hook, Log } from 'power-helper'\nimport { Translator, TranslatorParams } from '../core/translator'\nimport { ValidateCallback, ValidateCallbackOutputs } from '../utils/validate'\nimport { ParserError } from '../utils/error'\n\nexport type Message = {\n    role: 'system' | 'user' | 'assistant' | (string & Record<string, unknown>)\n    name?: string\n    content: string\n}\n\nexport type ChatBrokerHooks<\n    S extends ValidateCallback<any>,\n    O extends ValidateCallback<any>,\n    P extends ChatBrokerPlugin<any, any>,\n    PS extends Record<string, ReturnType<P['use']>>\n> = {\n\n    /**\n     * @zh \u7B2C\u4E00\u6B21\u804A\u5929\u7684\u6642\u5019\u89F8\u767C\n     * @en Triggered when chatting for the first time\n     */\n\n    start: {\n        id: string\n        data: ValidateCallbackOutputs<S>\n        metadata: Map<string, any>\n        plugins: {\n            [K in keyof PS]: {\n                send: (data: PS[K]['__receiveData']) => void\n            }\n        }\n        schema: {\n            input?: S\n            output: O\n        }\n        messages: Message[]\n        setPreMessages: (messages: (Omit<Message, 'content'> & { content: string | string[] })[]) => void\n        changeMessages: (messages: Message[]) => void\n        changeOutputSchema: (output: O) => void\n    }\n\n    /**\n     * @zh \u767C\u9001\u804A\u5929\u8A0A\u606F\u7D66\u6A5F\u5668\u4EBA\u524D\u89F8\u767C\n     * @en Triggered before sending chat message to bot\n     */\n\n    talkBefore: {\n        id: string\n        data: ValidateCallbackOutputs<S>\n        messages: Message[]\n        metadata: Map<string, any>\n        lastUserMessage: string\n    }\n\n    /**\n     * @zh \u7576\u804A\u5929\u6A5F\u5668\u4EBA\u56DE\u50B3\u8CC7\u6599\u7684\u6642\u5019\u89F8\u767C\n     * @en Triggered when the chatbot returns data\n     */\n\n    talkAfter: {\n        id: string\n        data: ValidateCallbackOutputs<S>\n        response: any\n        messages: Message[]\n        parseText: string\n        metadata: Map<string, any>\n        lastUserMessage: string\n        /**\n         * @zh \u5BA3\u544A\u89E3\u6790\u5931\u6557\n         * @en Declare parsing failure\n         */\n        parseFail: (error: any) => void\n        changeParseText: (text: string) => void\n    }\n\n    /**\n     * @zh \u7576\u56DE\u50B3\u8CC7\u6599\u7B26\u5408\u898F\u683C\u6642\u89F8\u767C\n     * @en Triggered when the returned data meets the specifications\n     */\n\n    succeeded: {\n        id: string\n        metadata: Map<string, any>\n        output: ValidateCallbackOutputs<O>\n    }\n\n    /**\n     * @zh \u7576\u56DE\u50B3\u8CC7\u6599\u4E0D\u7B26\u5408\u898F\u683C\uFF0C\u6216\u662F\u89E3\u6790\u932F\u8AA4\u6642\u89F8\u767C\n     * @en Triggered when the returned data does not meet the specifications or parsing errors\n     */\n\n    parseFailed: {\n        id: string\n        error: any\n        retry: () => void\n        count: number\n        response: any\n        metadata: Map<string, any>\n        parserFails: { name: string, error: any }[]\n        messages: Message[]\n        lastUserMessage: string\n        changeMessages: (messages: Message[]) => void\n    }\n\n    /**\n     * @zh \u4E0D\u8AD6\u6210\u529F\u5931\u6557\uFF0C\u57F7\u884C\u7D50\u675F\u7684\u6642\u5019\u6703\u57F7\u884C\u3002\n     * @en It will be executed when the execution is completed, regardless of success or failure.\n     */\n\n    done: {\n        id: string\n        metadata: Map<string, any>\n    }\n}\n\nexport type RequestContext = {\n    id: string\n    count: number\n    isRetry: boolean\n    metadata: Map<string, any>\n    onCancel: (cb: () => void) => void\n    schema: {\n        input: any\n        output: any\n    }\n}\n\nexport type Params<\n    S extends ValidateCallback<any>,\n    O extends ValidateCallback<any>,\n    C extends Record<string, any>,\n    P extends ChatBrokerPlugin<any, any>,\n    PS extends Record<string, ReturnType<P['use']>>\n> = Omit<TranslatorParams<S, O>, 'parsers'> & {\n    name?: string\n    plugins?: PS | (() => PS)\n    request: (messages: Message[], context: RequestContext) => Promise<string>\n    install?: (context: {\n        log: Log\n        attach: Hook<C>['attach']\n        attachAfter: Hook<C>['attachAfter']\n        translator: Translator<S, O>\n    }) => void\n}\n\nexport class ChatBroker<\n    S extends ValidateCallback<any>,\n    O extends ValidateCallback<any>,\n    P extends ChatBrokerPlugin<any, any>,\n    PS extends Record<string, ReturnType<P['use']>>,\n    C extends ChatBrokerHooks<S, O, P, PS> = ChatBrokerHooks<S, O, P, PS>\n> {\n    protected __hookType!: C\n    protected log: Log\n    protected hook = new Hook<C>()\n    protected params: Params<S, O, C, P, PS>\n    protected plugins = {} as PS\n    protected installed = false\n    protected translator: Translator<S, O>\n    protected event = new Event<{\n        cancel: {\n            requestId: string\n        }\n        cancelAll: any\n    }>()\n\n    constructor(params: Params<S, O, C, P, PS>) {\n        this.log = new Log(params.name ?? 'no name')\n        this.params = params\n        this.translator = new Translator({\n            ...params,\n            parsers: [\n                TextParser.JsonMessage()\n            ]\n        })\n    }\n\n    protected _install(): any {\n        if (this.installed === false) {\n            this.installed = true\n            const context = {\n                log: this.log,\n                attach: this.hook.attach.bind(this.hook),\n                attachAfter: this.hook.attachAfter.bind(this.hook),\n                translator: this.translator\n            }\n            if (this.params.plugins) {\n                this.plugins = typeof this.params.plugins === 'function' ? this.params.plugins() : this.params.plugins\n                for (let key in this.plugins) {\n                    this.plugins[key].instance._params.onInstall({\n                        ...context,\n                        params: this.plugins[key].params,\n                        receive: this.plugins[key].receive\n                    })\n                }\n            }\n            this.params.install?.(context)\n        }\n    }\n\n    async cancel(requestId?: string) {\n        if (requestId) {\n            this.event.emit('cancel', {\n                requestId\n            })\n        } else {\n            this.event.emit('cancelAll', {})\n        }\n    }\n\n    requestWithId<T extends Translator<S, O>>(data: T['__schemeType']): {\n        id: string\n        request: Promise<T['__outputType']>\n    } {\n        this._install()\n        let id = flow.createUuid()\n        let waitCancel = null as (() => void) | null\n        let isCancel = false\n        let isSending = false\n\n        // =================\n        //\n        // event\n        //\n\n        let listeners = [\n            this.event.on('cancel', ({ requestId }) => {\n                if (requestId === id) {\n                    cancelTrigger()\n                }\n            }),\n            this.event.on('cancelAll', () => {\n                cancelTrigger()\n            })\n        ]\n        let eventOff = () => listeners.forEach(e => e.off())\n        let cancelTrigger = () => {\n            if (isCancel === false) {\n                if (isSending && waitCancel) {\n                    waitCancel()\n                }\n                isCancel = true\n                eventOff()\n            }\n        }\n        let onCancel = (cb: () => void) => {\n            waitCancel = cb\n        }\n\n        // =================\n        //\n        // main\n        //\n\n        let request = async() => {\n            let schema = this.translator.getValidate()\n            let output: any = null\n            let plugins = {} as any\n            let metadata = new Map()\n            let question = await this.translator.compile(data, {\n                schema\n            })\n            let preMessages: Message[] = []\n            let messages: Message[] = []\n            if (question.prompt) {\n                messages.push({\n                    role: 'user',\n                    content: question.prompt\n                })\n            }\n            for (let key in this.plugins) {\n                plugins[key] = {\n                    send: (data: any) => this.plugins[key].send({\n                        id,\n                        data\n                    })\n                }\n            }\n            await this.hook.notify('start', {\n                id,\n                data,\n                schema,\n                plugins,\n                messages,\n                metadata,\n                setPreMessages: ms => {\n                    preMessages = ms.map(e => {\n                        return {\n                            ...e,\n                            content: Array.isArray(e.content) ? e.content.join('\\n') : e.content\n                        }\n                    })\n                },\n                changeMessages: ms => {\n                    messages = ms\n                },\n                changeOutputSchema: output => {\n                    this.translator.changeOutputSchema(output)\n                    schema = this.translator.getValidate()\n                }\n            })\n            messages = [\n                ...preMessages,\n                ...messages\n            ]\n            await flow.asyncWhile(async ({ count, doBreak }) => {\n                if (count >= 99) {\n                    return doBreak()\n                }\n                let response = ''\n                let parseText = ''\n                let retryFlag = false\n                let lastUserMessage = messages.filter(e => e.role === 'user').slice(-1)[0]?.content || ''\n                try {\n                    await this.hook.notify('talkBefore', {\n                        id,\n                        data,\n                        messages,\n                        metadata,\n                        lastUserMessage\n                    })\n                    const sender = this.params.request(messages, {\n                        id,\n                        count,\n                        schema,\n                        onCancel,\n                        metadata,\n                        isRetry: retryFlag\n                    })\n                    if (isCancel) {\n                        if (waitCancel) {\n                            waitCancel()\n                        }\n                    } else {\n                        try {\n                            isSending = true\n                            response = await sender\n                            parseText = response\n                        } finally {\n                            isSending = false\n                        }\n                    }\n                    if (isCancel === false) {\n                        await this.hook.notify('talkAfter', {\n                            id,\n                            data,\n                            response,\n                            messages,\n                            parseText,\n                            metadata,\n                            lastUserMessage,\n                            parseFail: (error) => {\n                                throw new ParserError(error, [])\n                            },\n                            changeParseText: text => {\n                                parseText = text\n                            }\n                        })\n                        output = (await this.translator.parse(parseText)).output\n                        await this.hook.notify('succeeded', {\n                            id,\n                            output,\n                            metadata\n                        })\n                    }\n                    await this.hook.notify('done', {\n                        id,\n                        metadata\n                    })\n                    doBreak()\n                } catch (error: any) {\n                    // \u5982\u679C\u89E3\u6790\u932F\u8AA4\uFF0C\u53EF\u4EE5\u9078\u64C7\u662F\u5426\u91CD\u65B0\u89E3\u8B80\n                    if (error instanceof ParserError) {\n                        await this.hook.notify('parseFailed', {\n                            id,\n                            error: error.error,\n                            count,\n                            response,\n                            messages,\n                            metadata,\n                            lastUserMessage,\n                            parserFails: error.parserFails,\n                            retry: () => {\n                                retryFlag = true\n                            },\n                            changeMessages: ms => {\n                                messages = ms\n                            }\n                        })\n                        if (retryFlag === false) {\n                            await this.hook.notify('done', {\n                                id,\n                                metadata\n                            })\n                            throw error\n                        }\n                    } else {\n                        await this.hook.notify('done', {\n                            id,\n                            metadata\n                        })\n                        throw error\n                    }\n                }\n            })\n            return output\n        }\n        const send = async() => {\n            try {\n                const result = await request()\n                return result\n            } finally {\n                eventOff()\n            }\n        }\n        return {\n            id,\n            request: send()\n        }\n    }\n\n    /**\n     * @zh \u5C07\u8ACB\u6C42\u767C\u51FA\u81F3\u804A\u5929\u6A5F\u5668\u4EBA\u3002\n     * @en Send request to chatbot.\n     */\n\n    async request<T extends Translator<S, O>>(data: T['__schemeType']): Promise<T['__outputType']> {\n        const { request } = this.requestWithId(data)\n        const output = await request\n        return output\n    }\n}\n", "import * as Yup from 'yup'\nimport { convertSchema } from '@sodaru/yup-to-json-schema'\nimport { Schema } from 'yup'\n\nexport type ValidateCallback<T extends Record<string, Schema>> = (_yup: typeof Yup) => {\n    [K in keyof T]: T[K]\n}\n\nexport type ValidateCallbackOutputs<\n    T extends ValidateCallback<any>,\n    R = ReturnType<T>\n> = {\n    [K in keyof R]: R[K] extends { __outputType: any } ? R[K]['__outputType'] : R[K]\n}\n\nexport function definedValidateSchema<T extends ValidateCallback<any>>(cb: T): T {\n    return cb\n}\n\nexport function validate<\n    T extends ValidateCallback<any>,\n    R = ReturnType<T>\n>(target: any, schemaCallback: T) {\n    return Yup.object(schemaCallback(Yup)).required().validateSync(target || {}) as {\n        [K in keyof R]: R[K] extends { __outputType: any } ? R[K]['__outputType'] : R[K]\n    }\n}\n\nexport const defineYupSchema = <T extends Record<string, Schema>>(cb: ValidateCallback<T>): T => {\n    return cb(Yup)\n}\n\nexport const validateToJsonSchema = <T extends ValidateCallback<any>>(cb: T) => {\n    const removeAllDefault = (schema: any) => {\n        if (schema.default) {\n            delete schema.default\n        }\n        if (schema.properties) {\n            for (let key in schema.properties) {\n                if (schema.properties[key].default) {\n                    delete schema.properties[key].default\n                }\n                removeAllDefault(schema.properties[key])\n            }\n        }\n        if (schema.items) {\n            removeAllDefault(schema.items)\n        }\n    }\n    const addAllAdditionalProperties = (jsonSchema: any) => {\n        if (jsonSchema.type === 'object') {\n            jsonSchema.additionalProperties = false\n            for (const key in jsonSchema.properties) {\n                addAllAdditionalProperties(jsonSchema.properties[key])\n            }\n        } else if (jsonSchema.type === 'array') {\n            addAllAdditionalProperties(jsonSchema.items)\n        }\n    }\n    const jsonSchema = convertSchema(Yup.object(cb(Yup)))\n    removeAllDefault(jsonSchema)\n    addAllAdditionalProperties(jsonSchema)\n    return jsonSchema\n}\n", "type ParserFail = {\n    name: string\n    error: any\n}\n\nexport class ParserError {\n    isParserError = true\n    parserFails: ParserFail[] = []\n    error: any\n    constructor(error: any, parserFails: ParserFail[]) {\n        this.error = error\n        this.parserFails = parserFails\n    }\n}\n", "import { TextParser } from './parser'\nimport { validate, ValidateCallback, ValidateCallbackOutputs } from '../utils/validate'\nimport { ParserError } from '../utils/error'\n\nexport type TranslatorParams<\n    S extends ValidateCallback<any>,\n    O extends ValidateCallback<any>\n> = {\n    /**\n     * @zh \u8F38\u5165\u7684\u8CC7\u6599\u683C\u5F0F\u3002\n     * @en The input data format.\n     */\n    input?: S\n    /**\n     * @zh \u8F38\u51FA\u7684\u8CC7\u6599\u683C\u5F0F\u3002\n     * @en The output data format.\n     */\n    output: O\n    /**\n     * @zh \u8A3B\u518A\u89E3\u8B80\u6587\u5B57\u7684\u89E3\u6790\u5668\u3002\n     * @en Register the parser to interpret the text.\n     */\n    parsers: TextParser[]\n    /**\n     * @zh \u7D44\u5408\u8F38\u5165\u8CC7\u6599\u6210\u70BA\u63D0\u793A\u6587\u5B57\u3002\n     * @en Combine the input data into a prompt.\n     */\n    question?: (data: ValidateCallbackOutputs<S>, context: {\n        schema: {\n            input?: S\n            output: O\n        }\n    }) => Promise<string | string[]>\n}\n\nexport class Translator<\n    S extends ValidateCallback<any>,\n    O extends ValidateCallback<any>\n> {\n    private params: TranslatorParams<S, O>\n\n    constructor(params: TranslatorParams<S, O>) {\n        this.params = params\n    }\n\n    get __schemeType(): ValidateCallbackOutputs<S> {\n        return null as any\n    }\n\n    get __outputType(): ValidateCallbackOutputs<O> {\n        return null as any\n    }\n\n    /**\n     * @zh \u7D44\u5408\u8F38\u5165\u8CC7\u6599\u6210\u70BA\u63D0\u793A\u6587\u5B57\u3002\n     * @en Combine the input data into a prompt.\n     */\n\n    async compile(data: ValidateCallbackOutputs<S>, context: {\n        schema: {\n            input?: S\n            output: O\n        }\n    }) {\n        const scheme = this.params.input ? validate(data, this.params.input) : data\n        const prompt = this.params.question ? await this.params.question(scheme, context) : ''\n        return {\n            scheme,\n            prompt: Array.isArray(prompt) ? prompt.join('\\n') : prompt\n        }\n    }\n\n    getValidate() {\n        return {\n            input: this.params.input,\n            output: this.params.output\n        }\n    }\n\n    changeOutputSchema(schema: O) {\n        this.params.output = schema\n    }\n\n    /**\n     * @zh \u5C07\u6587\u5B57\u8F49\u63DB\u6210\u5E8F\u5217\u5316\u8CC7\u6599\u3002\n     * @en Convert text to serialized data.\n     */\n\n    async parse(text: string) {\n        let result: any = undefined\n        let parserName = ''\n        let parserFails: { name: string, error: any }[] = []\n        for (let parse of this.params.parsers) {\n            try {\n                result = await parse.read(text)\n                parserName = parse.name\n            } catch (error) {\n                result = undefined\n                parserFails.push({\n                    name: parse.name,\n                    error\n                })\n            }\n        }\n        try {\n            let output = validate(result, this.params.output)\n            return {\n                output,\n                parserName,\n                parserFails\n            }\n        } catch (error) {\n            throw new ParserError(error, parserFails)\n        }\n    }\n}\n", "import { ChatBroker, Message, Params as ChatBrokerParams, ChatBrokerHooks, RequestContext } from './broker/chat'\nimport { ChatBrokerPlugin } from './core/plugin'\nimport { Schema } from 'yup'\nimport * as Yup from 'yup'\n\ntype IO = any\n\nexport class CtoD<\n    P extends ChatBrokerPlugin<IO, IO>,\n    PS extends Record<string, ReturnType<P['use']>>\n> {\n    params\n    constructor(params: {\n        request: (messages: Message[], context: RequestContext) => Promise<string>\n        plugins?: () => PS\n    }) {\n        this.params = params\n    }\n\n    createBrokerBuilder<I extends Record<string, any>>(params?: {\n        install?: ChatBrokerParams<() => I, IO, ChatBrokerHooks<() => I, IO, P, PS>, P, PS>['install']\n    }) {\n        return {\n            create: <O extends Record<string, Schema>>(install: (context: {\n                id: string\n                yup: typeof Yup\n                data: I\n                plugins: {\n                    [K in keyof PS]: {\n                        send: (data: PS[K]['__receiveData']) => void\n                    }\n                }\n                setMessages: (messages: (Omit<Message, 'content'> & { content: string | string[] })[]) => void\n                metadata: Map<string, any>\n            }) => Promise<O>) => {\n                return new ChatBroker<\n                    () => I,\n                    () => O,\n                    P,\n                    PS,\n                    ChatBrokerHooks<() => I, () => O, P, PS>\n                >({\n                            output: () => ({} as any),\n                            install: (context) => {\n                                params?.install?.(context)\n                                context.attach('start', async({ id, plugins, data, metadata, changeMessages, changeOutputSchema }) => {\n                                    const schema = await install({\n                                        id,\n                                        data: data as any,\n                                        plugins,\n                                        yup: Yup,\n                                        setMessages: (messages) => {\n                                            changeMessages(messages.map(e => {\n                                                return {\n                                                    role: e.role,\n                                                    content: Array.isArray(e.content) ? e.content.join('\\n') : e.content\n                                                }\n                                            }))\n                                        },\n                                        metadata\n                                    })\n                                    changeOutputSchema(() => schema)\n                                })\n                            },\n                            plugins: this.params.plugins ? () => this.params.plugins!() : undefined,\n                            request: this.params.request\n                        })\n            }\n        }\n    }\n}\n", "import axios from 'axios'\nimport { OpenAIVision } from './vision'\nimport { OpenAIChat, Config } from './chat'\nimport { OpenAIImagesGeneration } from './images-generation'\nimport { validateToJsonSchema } from '../../utils/validate'\n\nexport class OpenAICtodService {\n    _axios = axios.create()\n    _apiKey = ''\n    _baseUrl = 'https://api.openai.com'\n\n    static createChatRequest(\n        apiKey: string | (() => Promise<string>),\n        config: Partial<Config> | (() => Promise<Partial<Config>>) = {},\n        options?: {\n            axios?: any\n            baseUrl?: string\n        }\n    ) {\n        return async(messages: any[], { onCancel }: any) => {\n            const openai = new OpenAICtodService(typeof apiKey === 'string' ? apiKey : await apiKey())\n            const chat = openai.createChat()\n            const abortController = new AbortController()\n            if (options) {\n                if (options.axios) {\n                    openai.setAxios(options.axios)\n                }\n                if (options.baseUrl) {\n                    openai.setBaseUrl(options.baseUrl)\n                }\n            }\n            chat.setConfig(typeof config === 'function' ? await config() : config)\n            onCancel(() => abortController.abort())\n            const { text } = await chat.talk(messages, {\n                abortController\n            })\n            return text\n        }\n    }\n\n    static createChatRequestWithJsonSchema(params: {\n        axios?: any\n        apiKey: string | (() => Promise<string>)\n        config?: Partial<Pick<Config, 'model' | 'temperature'>> | (() => Promise<Partial<Pick<Config, 'model' | 'temperature'>>>)\n    }) {\n        return async(messages: any[], { schema, onCancel }: any) => {\n            const openai = new OpenAICtodService(typeof params.apiKey === 'string' ? params.apiKey : await params.apiKey())\n            const chat = openai.createChat()\n            const abortController = new AbortController()\n            if (params.config) {\n                chat.setConfig(typeof params.config === 'function' ? await params.config() : params.config)\n            }\n            if (params.axios) {\n                openai.setAxios(params.axios)\n            }\n            onCancel(() => abortController.abort())\n            const jsonSchema = validateToJsonSchema(schema.output)\n            const { text } = await chat.talk(messages, {\n                abortController,\n                jsonSchema: {\n                    name: 'data',\n                    strict: true,\n                    schema: jsonSchema\n                }\n            })\n            return text\n        }\n    }\n\n    constructor(apiKey = '') {\n        this._apiKey = apiKey\n    }\n\n    /**\n     * @zh \u5982\u679C\u4F60\u6709\u9700\u8981\u7279\u5225\u8A2D\u5B9A axios\uFF0C\u8ACB\u4F7F\u7528\u9019\u65B9\u6CD5\u3002\n     * @en If you need to set axios, please use this method.\n     */\n\n    setAxios(axios: any) {\n        this._axios = axios\n    }\n\n    /**\n     * @zh \u5982\u679C\u4F60\u6709\u9700\u8981\u7279\u5225\u8A2D\u5B9A baseUrl\uFF0C\u8ACB\u4F7F\u7528\u9019\u65B9\u6CD5\u3002\n     * @en If you need to set baseUrl, please use this method.\n     */\n\n    setBaseUrl(baseUrl: string) {\n        this._baseUrl = baseUrl\n    }\n\n    /**\n     * @zh \u8A2D\u5B9A api key\u3002\n     * @en Set api key.\n     */\n\n    setConfiguration(apiKey: string) {\n        this._apiKey = apiKey\n    }\n\n    createChat() {\n        return new OpenAIChat(this)\n    }\n\n    createVision() {\n        return new OpenAIVision(this)\n    }\n\n    createImagesGeneration() {\n        return new OpenAIImagesGeneration(this)\n    }\n}\n", "import { OpenAICtodService } from './index'\nimport { PromiseResponseType } from '../../types'\n\ntype ImageContent = {\n    type: 'image_url' | 'text'\n    text?: string\n    image_url?: {\n        url: string\n        detail?: string\n    }\n}\n\nexport type VisionMessage = {\n    role: 'system' | 'user' | 'assistant'\n    name?: string\n    content: string | ImageContent[]\n}\n\ntype ApiResponse = {\n    id: string\n    object: string\n    created: number\n    model: string\n    usage: {\n        prompt_tokens: number\n        completion_tokens: number\n        total_tokens: number\n    }\n    choices: Array<{\n        message: {\n            role: string\n            content: string\n        }\n        finish_details: {\n            type: string\n        }\n        index: number\n    }>\n}\n\nexport type Config = {\n    /**\n     * @zh \u9078\u64C7\u904B\u884C\u7684\u6A21\u578B\u3002\n     * @en How many chat completion choices to generate for each input message.\n     */\n    model: 'gpt-4-vision-preview'\n    /**\n     * @zh \u5192\u96AA\u6307\u6578\uFF0C\u6578\u503C\u7531 0 ~ 2 \u4E4B\u9593\u3002\n     * @en What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.\n     */\n    temperature: number\n    /**\n     * @zh \u6BCF\u6B21\u5C0D\u8A71\u6700\u591A\u7522\u751F\u5E7E\u500B tokens\u3002\n     * @en How many tokens to complete to.\n     */\n    maxTokens?: number\n}\n\nexport class OpenAIVision {\n    openai: OpenAICtodService\n    config: Config = {\n        model: 'gpt-4-vision-preview',\n        maxTokens: undefined,\n        temperature: 1\n    }\n\n    constructor(openai: OpenAICtodService) {\n        this.openai = openai\n    }\n\n    /**\n     * @zh \u6539\u8B8A\u5C0D\u8A71\u7684\u4E00\u4E9B\u8A2D\u5B9A\n     * @en Change some settings of the conversation\n     */\n\n    setConfig(options: Partial<Config>) {\n        Object.assign(this.config, options)\n    }\n\n    /**\n     * @zh \u8FA8\u8B58\u5716\u7247\n     * @en Recognize images\n     */\n\n    async view(messages: VisionMessage[]) {\n        const result = await this.openai._axios.post<ApiResponse>(`${this.openai._baseUrl}/v1/chat/completions`, {\n            model: this.config.model,\n            n: 1,\n            messages,\n            max_tokens: this.config.maxTokens,\n            temperature: this.config.temperature\n        }, {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${this.openai._apiKey}`\n            }\n        })\n        const choices = result.data.choices || []\n        const message = choices[0]?.message || {\n            role: 'assistant',\n            content: ''\n        }\n        return {\n            id: result?.data.id as string,\n            text: message.content as string,\n            apiResponse: result.data\n        }\n    }\n}\n\nexport type OpenAIChatVisionResponse = PromiseResponseType<OpenAIVision['view']>\n", "import { json } from 'power-helper'\nimport { OpenAICtodService } from './index'\nimport { PromiseResponseType } from '../../types'\n\nexport type ChatGPTMessage = {\n    role: 'system' | 'user' | 'assistant'\n    name?: string\n    content: string\n}\n\ntype ApiResponse = {\n    id: string\n    object: string\n    created: number\n    choices: Array<{\n        index: number\n        finish_reason: string\n        message: {\n            role: 'system' | 'user' | 'assistant'\n            name?: string\n            content: string\n        }\n    }>\n    usage: {\n        prompt_tokens: number\n        completion_tokens: number\n        total_tokens: number\n    }\n}\n\nexport type Config = {\n    /**\n     * @zh \u4E00\u6B21\u56DE\u61C9\u6578\u91CF\n     * @en How many chat completion choices to generate for each input message.\n     */\n    n: number\n    /**\n     * @zh \u9078\u64C7\u904B\u884C\u7684\u6A21\u578B'\n     * @en The model to use for this chat completion.\n     */\n    model: string\n    /**\n     * @zh \u5192\u96AA\u6307\u6578\uFF0C\u6578\u503C\u7531 0 ~ 2 \u4E4B\u9593\uFF0C\u8D8A\u4F4E\u56DE\u61C9\u8D8A\u7A69\u5B9A\u3002\n     * @en What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.\n     */\n    temperature: number\n    /**\n     * @zh \u662F\u5426\u5F37\u5236\u8981\u56DE\u50B3 JSON \u683C\u5F0F\u7684\u8CC7\u6599\n     * @en Whether to force the return of JSON format data\n     */\n    forceJsonFormat: boolean\n    /**\n     * @zh \u6BCF\u6B21\u5C0D\u8A71\u6700\u591A\u7522\u751F\u5E7E\u500B tokens\u3002\n     * @en How many tokens to complete to.\n     */\n    maxTokens?: number\n}\n\nexport class OpenAIChat {\n    openai: OpenAICtodService\n    config: Config = {\n        n: 1,\n        model: 'gpt-4o',\n        temperature: 1,\n        maxTokens: undefined,\n        forceJsonFormat: true\n    }\n\n    constructor(openai: OpenAICtodService) {\n        this.openai = openai\n    }\n\n    /**\n     * @zh \u6539\u8B8A\u5C0D\u8A71\u7684\u4E00\u4E9B\u8A2D\u5B9A\n     * @en Change some settings of the conversation\n     */\n\n    setConfig(options: Partial<Config>) {\n        Object.assign(this.config, options)\n    }\n\n    /**\n     * @zh \u6AA2\u8996\u5167\u5BB9\u662F\u5426\u7B26\u5408 OpenAI \u7684\u5BE9\u67E5\n     * @en View content for OpenAI moderation\n     */\n\n    async moderations(input: string) {\n        const result = await this.openai._axios.post<any>(`${this.openai._baseUrl}/v1/moderations`, {\n            input: input\n        }, {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${this.openai._apiKey}`\n            }\n        })\n        return {\n            isSafe: result.data.results?.[0]?.flagged === false,\n            result: result.data\n        }\n    }\n\n    /**\n     * @zh \u9032\u884C\u5C0D\u8A71\n     * @en Talk to the AI\n     */\n\n    async talk(messages: ChatGPTMessage[] = [], options?: {\n        /** \u8981 forceJsonFormat \u70BA true \u624D\u6703\u751F\u6548 */\n        jsonSchema?: any\n        abortController?: AbortController\n    }) {\n        const newMessages = json.jpjs(messages)\n        const isSupportJson = [\n            'gpt-4-turbo-preview',\n            'gpt-4-turbo',\n            'gpt-4o',\n            'gpt-4o-mini',\n            'gpt-3.5-turbo-1106'\n        ].includes(this.config.model)\n        let response_format: any = undefined\n        if (isSupportJson && this.config.forceJsonFormat) {\n            response_format = {\n                type: 'json_object'\n            }\n        }\n        if (isSupportJson && this.config.forceJsonFormat && options?.jsonSchema) {\n            response_format = {\n                type: 'json_schema',\n                json_schema: options.jsonSchema\n            }\n        }\n        const result = await this.openai._axios.post<ApiResponse>(`${this.openai._baseUrl}/v1/chat/completions`, {\n            model: this.config.model,\n            n: this.config.n,\n            messages: newMessages,\n            response_format,\n            temperature: this.config.temperature\n        }, {\n            signal: options?.abortController?.signal,\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${this.openai._apiKey}`\n            }\n        })\n        const choices = result.data.choices || []\n        const message = choices[0]?.message || {\n            role: 'assistant',\n            content: ''\n        }\n        newMessages.push(message)\n        return {\n            id: result?.data.id as string,\n            text: message.content as string,\n            newMessages,\n            isDone: choices[0]?.finish_reason === 'stop',\n            apiResponse: result.data\n        }\n    }\n\n    talkStream(params: {\n        messages: any[]\n        onMessage: (_message: string) => void\n        onEnd: () => void\n        onWarn: (_warn: any) => void\n        onError: (_error: any) => void\n    }) {\n        const controller = new AbortController()\n        fetch(`${this.openai._baseUrl}/v1/chat/completions`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${this.openai._apiKey}`\n            },\n            body: JSON.stringify({\n                model: this.config.model,\n                stream: true,\n                messages: params.messages\n            }),\n            signal: controller.signal\n        }).then(async response => {\n            const reader = response.body?.pipeThrough(new TextDecoderStream()).getReader()\n            if (!reader) {\n                throw new Error('Can not get reader')\n            }\n\n            while (true) {\n                const { value, done } = await reader.read()\n                if (done) {\n                    break\n                }\n                const items = value.split('\\n')\n                for (let item of items) {\n                    if (item.length === 0) {\n                        continue\n                    }\n                    if (item.startsWith(':')) {\n                        continue\n                    }\n                    if (item === 'data: [DONE]') {\n                        params.onEnd()\n                        break\n                    }\n                    try {\n                        const result = JSON.parse(item.substring(6))\n                        const content = result.choices[0].delta.content\n                        params.onMessage(content)\n                    } catch (error) {\n                        params.onWarn(error)\n                    }\n                }\n            }\n        }).catch(error => {\n            if (error.name === 'AbortError') {\n                params.onEnd()\n            } else {\n                params.onError(error)\n            }\n        })\n        return {\n            cancel: () => controller.abort()\n        }\n    }\n\n    /**\n     * @zh \u958B\u555F\u6301\u7E8C\u6027\u5C0D\u8A71\n     */\n\n    async keepTalk(prompt: string | string[], oldMessages: ChatGPTMessage[] = []) {\n        const result = await this.talk([\n            ...oldMessages,\n            {\n                role: 'user',\n                content: Array.isArray(prompt) ? prompt.join('\\n') : prompt\n            }\n        ])\n        return {\n            result,\n            nextTalk: (prompt: string | string[]) => this.keepTalk(prompt, result.newMessages)\n        }\n    }\n}\n\nexport type OpenAIChatTalkResponse = PromiseResponseType<OpenAIChat['talk']>\n", "import { OpenAICtodService } from './index'\n\ntype ApiResponse = {\n    created: string\n    data: {\n        b64_json: string\n    }[]\n}\n\ntype Config = {\n    /**\n     * @zh \u6A21\u578B\uFF0C\u652F\u63F4 dall-e-2 \u548C dall-e-3\n     * @en Model, support dall-e-2 and dall-e-3\n     */\n    model: 'dall-e-2' | 'dall-e-3'\n    /**\n     * @zh \u89E3\u6790\u5EA6\uFF0C\u4F8B\u5982 1024x1024\n     * @en Resolution, for example 1024x1024\n     */\n    size: `${number}x${number}`\n}\n\nexport class OpenAIImagesGeneration {\n    private openai: OpenAICtodService\n    private config: Config = {\n        model: 'dall-e-2',\n        size: '1024x1024'\n    }\n\n    constructor(openai: OpenAICtodService) {\n        this.openai = openai\n    }\n\n    /**\n     * @zh \u6539\u8B8A\u5C0D\u8A71\u7684\u4E00\u4E9B\u8A2D\u5B9A\n     * @en Change some settings of the conversation\n     */\n\n    setConfig(options: Partial<Config>) {\n        Object.assign(this.config, options)\n    }\n\n    /**\n     * @zh \u7522\u751F\u5716\u7247\n     * @en Generate image\n     */\n\n    async create(prompt: string) {\n        const result = await this.openai._axios.post<ApiResponse>(`${this.openai._baseUrl}/v1/images/generations`, {\n            prompt,\n            n: 1,\n            size: this.config.size,\n            model: this.config.model,\n            response_format: 'b64_json'\n        }, {\n            timeout: 1000 * 60 * 5,\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${this.openai._apiKey}`\n            }\n        })\n        return result.data\n    }\n}\n", "import axios, { AxiosInstance } from 'axios'\nimport { sify } from '../../utils/chinese-conv'\nimport { validateToJsonSchema } from '../../utils/validate'\nimport { Llama3CppCompletion, Config } from './completion'\n\nexport class Llama3CppCtodService {\n    _axios = axios.create()\n\n    static createChatRequestWithJsonSchema(params: {\n        config: Partial<Config> | (() => Promise<Partial<Config>>)\n        talkOptions?: any\n    }) {\n        return async(messages: any[], { schema, onCancel }: any) => {\n            const ll3cpp = new Llama3CppCtodService()\n            const chat = ll3cpp.createCompletion()\n            const config = typeof params.config === 'function' ? await params.config() : params.config\n            chat.setConfig(config)\n            let formatSchema = validateToJsonSchema(schema.output)\n            if (chat.config.autoConvertTraditionalChinese) {\n                formatSchema = JSON.parse(sify(JSON.stringify(formatSchema)))\n            }\n            const { run, cancel } = chat.talk({\n                options: params.talkOptions,\n                messages: messages,\n                response_format: {\n                    type: 'json_object',\n                    schema: formatSchema\n                }\n            })\n            onCancel(cancel)\n            const { message } = await run()\n            return message\n        }\n    }\n\n    /**\n     * @zh \u5982\u679C\u4F60\u6709\u9700\u8981\u7279\u5225\u8A2D\u5B9A axios\uFF0C\u8ACB\u4F7F\u7528\u9019\u65B9\u6CD5\u3002\n     * @en If you need to set axios, please use this method.\n     */\n\n    setAxios(axios: AxiosInstance) {\n        this._axios = axios\n    }\n\n    /**\n     * @zh \u5EFA\u7ACB \u88DC\u5F37/ \u5C0D\u8A71\u7269\u4EF6\u3002\n     * @en Create completion object.\n     */\n\n    createCompletion() {\n        return new Llama3CppCompletion(this)\n    }\n}\n", "{\n  \"\u346E\": \"\\ud86d\",\n  \"\u346F\": \"\u3454\",\n  \"\u3473\": \"\u3447\",\n  \"\u3476\": \"\u3439\",\n  \"\u3493\": \"\\ud840\",\n  \"\u34C4\": \"\\ud86a\",\n  \"\u34E8\": \"\u523E\",\n  \"\u350B\": \"\\ud869\",\n  \"\u35AE\": \"\\ud86a\",\n  \"\u35F2\": \"\\ud843\",\n  \"\u35FF\": \"\\ud86a\",\n  \"\u3609\": \"\\ud843\",\n  \"\u3613\": \"\\ud86a\",\n  \"\u3614\": \"\\ud86e\",\n  \"\u361A\": \"\u360E\",\n  \"\u36DD\": \"\\ud86d\",\n  \"\u3704\": \"\u36AF\",\n  \"\u370F\": \"\u36E3\",\n  \"\u3710\": \"\\ud86d\",\n  \"\u3717\": \"\\ud845\",\n  \"\u3722\": \"\\ud845\",\n  \"\u3737\": \"\\ud845\",\n  \"\u379E\": \"\\ud86a\",\n  \"\u37FA\": \"\\ud86a\",\n  \"\u380F\": \"\u37C6\",\n  \"\u3823\": \"\\ud86f\",\n  \"\u3897\": \"\\ud86a\",\n  \"\u389D\": \"\\ud848\",\n  \"\u396E\": \"\u3918\",\n  \"\u398E\": \"\\ud849\",\n  \"\u399B\": \"\\ud849\",\n  \"\u399E\": \"\\ud86a\",\n  \"\u3A3B\": \"\\ud86a\",\n  \"\u3A4B\": \"\\ud86a\",\n  \"\u3A5C\": \"\u3A2B\",\n  \"\u3A73\": \"\u39D0\",\n  \"\u3A75\": \"\u64DC\",\n  \"\u3A8E\": \"\\ud86a\",\n  \"\u3BE4\": \"\\ud84d\",\n  \"\u3C19\": \"\\ud84d\",\n  \"\u3D57\": \"\\ud84f\",\n  \"\u3D7E\": \"\\ud86b\",\n  \"\u3D86\": \"\\ud86d\",\n  \"\u3DCD\": \"\\ud850\",\n  \"\u3DFF\": \"\\ud850\",\n  \"\u3E07\": \"\\ud850\",\n  \"\u3E7D\": \"\\ud86d\",\n  \"\u3E8F\": \"\\ud852\",\n  \"\u3E9C\": \"\\ud86b\",\n  \"\u3EF6\": \"\\ud86b\",\n  \"\u3FD6\": \"\\ud86b\",\n  \"\u3FD7\": \"\\ud853\",\n  \"\u3FE7\": \"\\ud853\",\n  \"\u4009\": \"\\ud854\",\n  \"\u4039\": \"\\ud854\",\n  \"\u406A\": \"\\ud854\",\n  \"\u407B\": \"\u4025\",\n  \"\u408E\": \"\\ud854\",\n  \"\u40EE\": \"\u9FCE\",\n  \"\u4150\": \"\\ud86c\",\n  \"\u4173\": \"\\ud86c\",\n  \"\u4189\": \"\\ud86c\",\n  \"\u4251\": \"\\ud86c\",\n  \"\u4259\": \"\\ud856\",\n  \"\u426C\": \"\\ud86c\",\n  \"\u4272\": \"\\ud856\",\n  \"\u4276\": \"\\ud86c\",\n  \"\u42AD\": \"\\ud857\",\n  \"\u42B7\": \"\u4336\",\n  \"\u42BA\": \"\\ud86c\",\n  \"\u42C3\": \"\\ud86c\",\n  \"\u42D4\": \"\\ud86c\",\n  \"\u42D9\": \"\u433A\",\n  \"\u42DA\": \"\u433B\",\n  \"\u42E6\": \"\\ud86c\",\n  \"\u42F9\": \"\u433F\",\n  \"\u42FB\": \"\u433E\",\n  \"\u42FC\": \"\\ud86c\",\n  \"\u42FF\": \"\\ud858\",\n  \"\u4308\": \"\\ud858\",\n  \"\u430B\": \"\\ud858\",\n  \"\u4316\": \"\\ud858\",\n  \"\u431D\": \"\\ud858\",\n  \"\u431F\": \"\\ud858\",\n  \"\u4325\": \"\\ud858\",\n  \"\u4330\": \"\\ud858\",\n  \"\u4364\": \"\\ud86c\",\n  \"\u4366\": \"\u4360\",\n  \"\u437D\": \"\\ud858\",\n  \"\u4399\": \"\\ud86c\",\n  \"\u43B1\": \"\u43AC\",\n  \"\u44E3\": \"\\ud871\",\n  \"\u4564\": \"\\ud86d\",\n  \"\u4573\": \"\\ud85b\",\n  \"\u4585\": \"\\ud86d\",\n  \"\u45C5\": \"\\ud86c\",\n  \"\u45FF\": \"\\ud85c\",\n  \"\u4654\": \"\\ud86c\",\n  \"\u4661\": \"\u464C\",\n  \"\u4671\": \"\\ud85d\",\n  \"\u46A9\": \"\\ud86c\",\n  \"\u46C4\": \"\\ud86c\",\n  \"\u46F3\": \"\\ud86c\",\n  \"\u4700\": \"\u4727\",\n  \"\u4716\": \"\\ud86d\",\n  \"\u476D\": \"\\ud86c\",\n  \"\u477B\": \"\\ud85f\",\n  \"\u477C\": \"\u478D\",\n  \"\u4788\": \"\\ud85f\",\n  \"\u478B\": \"\\ud86c\",\n  \"\u4793\": \"\\ud86c\",\n  \"\u47C3\": \"\\ud86c\",\n  \"\u47C6\": \"\\ud86c\",\n  \"\u47D0\": \"\\ud86c\",\n  \"\u4806\": \"\\ud86c\",\n  \"\u4831\": \"\\ud860\",\n  \"\u4850\": \"\\ud86d\",\n  \"\u4869\": \"\\ud86d\",\n  \"\u4875\": \"\\ud86d\",\n  \"\u48A8\": \"\\ud861\",\n  \"\u4924\": \"\\ud86d\",\n  \"\u4944\": \"\\ud86e\",\n  \"\u4947\": \"\u4982\",\n  \"\u4951\": \"\u9FCF\",\n  \"\u4955\": \"\\ud872\",\n  \"\u4957\": \"\\ud86d\",\n  \"\u4969\": \"\\ud863\",\n  \"\u496F\": \"\\ud86d\",\n  \"\u4971\": \"\u497E\",\n  \"\u4998\": \"\\ud863\",\n  \"\u499B\": \"\u49B6\",\n  \"\u499F\": \"\u49B7\",\n  \"\u49AF\": \"\\ud86d\",\n  \"\u49B3\": \"\\ud863\",\n  \"\u49E2\": \"\\ud863\",\n  \"\u4A8A\": \"\\ud86d\",\n  \"\u4A8F\": \"\\ud864\",\n  \"\u4A97\": \"\\ud865\",\n  \"\u4A98\": \"\\ud864\",\n  \"\u4AB4\": \"\\ud86d\",\n  \"\u4ABE\": \"\\ud86d\",\n  \"\u4AC0\": \"\\ud86d\",\n  \"\u4AC2\": \"\\ud86d\",\n  \"\u4ADF\": \"\\ud86d\",\n  \"\u4AF4\": \"\\ud865\",\n  \"\u4AF6\": \"\\ud86d\",\n  \"\u4AFB\": \"\\ud86d\",\n  \"\u4AFE\": \"\\ud86e\",\n  \"\u4B13\": \"\\ud86d\",\n  \"\u4B18\": \"\\ud865\",\n  \"\u4B1D\": \"\\ud865\",\n  \"\u4B1E\": \"\\ud865\",\n  \"\u4B27\": \"\\ud86d\",\n  \"\u4B40\": \"\\ud866\",\n  \"\u4B43\": \"\\ud866\",\n  \"\u4B51\": \"\\ud86d\",\n  \"\u4B54\": \"\\ud86d\",\n  \"\u4B7F\": \"\\ud866\",\n  \"\u4B84\": \"\\ud86e\",\n  \"\u4B9D\": \"\\ud866\",\n  \"\u4B9E\": \"\\ud866\",\n  \"\u4BA0\": \"\\ud866\",\n  \"\u4BAB\": \"\\ud866\",\n  \"\u4BB0\": \"\\ud86d\",\n  \"\u4BB3\": \"\\ud866\",\n  \"\u4BBE\": \"\\ud866\",\n  \"\u4BC0\": \"\u4BC5\",\n  \"\u4BE4\": \"\\ud866\",\n  \"\u4C3E\": \"\u9C83\",\n  \"\u4C40\": \"\\ud86d\",\n  \"\u4C41\": \"\\ud86d\",\n  \"\u4C59\": \"\\ud867\",\n  \"\u4C67\": \"\\ud86d\",\n  \"\u4C6C\": \"\\ud867\",\n  \"\u4C70\": \"\\ud867\",\n  \"\u4C77\": \"\u4CA3\",\n  \"\u4C78\": \"\\ud86e\",\n  \"\u4C7D\": \"\u4C9D\",\n  \"\u4C81\": \"\u9CDA\",\n  \"\u4C85\": \"\\ud86d\",\n  \"\u4C96\": \"\\ud867\",\n  \"\u4C98\": \"\u9CE4\",\n  \"\u4CB0\": \"\\ud868\",\n  \"\u4CDC\": \"\\ud86d\",\n  \"\u4CE2\": \"\\ud86d\",\n  \"\u4CE4\": \"\\ud86d\",\n  \"\u4CE7\": \"\\ud86d\",\n  \"\u4CEB\": \"\\ud86d\",\n  \"\u4D09\": \"\u9E6E\",\n  \"\u4D0B\": \"\\ud86d\",\n  \"\u4D2C\": \"\\ud868\",\n  \"\u4D31\": \"\\ud86d\",\n  \"\u4D34\": \"\\ud868\",\n  \"\u4D3D\": \"\\ud86d\",\n  \"\u4D73\": \"\\ud869\",\n  \"\u4D74\": \"\\ud86d\",\n  \"\u4D95\": \"\\ud86d\",\n  \"\u4DB2\": \"\\ud86d\",\n  \"\u4E1F\": \"\u4E22\",\n  \"\u4E26\": \"\u5E76\",\n  \"\u4E7E\": \"\u5E72\",\n  \"\u4E82\": \"\u4E71\",\n  \"\u4E99\": \"\u4E98\",\n  \"\u4E9E\": \"\u4E9A\",\n  \"\u4F47\": \"\u4F2B\",\n  \"\u4F48\": \"\u5E03\",\n  \"\u4F54\": \"\u5360\",\n  \"\u4F75\": \"\u5E76\",\n  \"\u4F86\": \"\u6765\",\n  \"\u4F96\": \"\u4ED1\",\n  \"\u4FB6\": \"\u4FA3\",\n  \"\u4FB7\": \"\u5C40\",\n  \"\u4FC1\": \"\u4FE3\",\n  \"\u4FC2\": \"\u7CFB\",\n  \"\u4FD3\": \"\\ud840\",\n  \"\u4FD4\": \"\u4F23\",\n  \"\u4FE0\": \"\u4FA0\",\n  \"\u4FE5\": \"\u4F21\",\n  \"\u4FEC\": \"\u79C1\",\n  \"\u5000\": \"\u4F25\",\n  \"\u5006\": \"\u4FE9\",\n  \"\u5008\": \"\u4FEB\",\n  \"\u5009\": \"\u4ED3\",\n  \"\u500B\": \"\u4E2A\",\n  \"\u5011\": \"\u4EEC\",\n  \"\u5016\": \"\u5E78\",\n  \"\u502B\": \"\u4F26\",\n  \"\u5032\": \"\u3448\",\n  \"\u5049\": \"\u4F1F\",\n  \"\u5051\": \"\u343D\",\n  \"\u5074\": \"\u4FA7\",\n  \"\u5075\": \"\u4FA6\",\n  \"\u507D\": \"\u4F2A\",\n  \"\u508C\": \"\u3437\",\n  \"\u5091\": \"\u6770\",\n  \"\u5096\": \"\u4F27\",\n  \"\u5098\": \"\u4F1E\",\n  \"\u5099\": \"\u5907\",\n  \"\u50A2\": \"\u5BB6\",\n  \"\u50AD\": \"\u4F63\",\n  \"\u50AF\": \"\u506C\",\n  \"\u50B3\": \"\u4F20\",\n  \"\u50B4\": \"\u4F1B\",\n  \"\u50B5\": \"\u503A\",\n  \"\u50B7\": \"\u4F24\",\n  \"\u50BE\": \"\u503E\",\n  \"\u50C2\": \"\u507B\",\n  \"\u50C5\": \"\u4EC5\",\n  \"\u50C9\": \"\u4F65\",\n  \"\u50D1\": \"\u4FA8\",\n  \"\u50D5\": \"\u4EC6\",\n  \"\u50DE\": \"\u4F2A\",\n  \"\u50E4\": \"\\ud86e\",\n  \"\u50E5\": \"\u4FA5\",\n  \"\u50E8\": \"\u507E\",\n  \"\u50F1\": \"\u96C7\",\n  \"\u50F9\": \"\u4EF7\",\n  \"\u5100\": \"\u4EEA\",\n  \"\u5101\": \"\u4FCA\",\n  \"\u5102\": \"\u4FAC\",\n  \"\u5104\": \"\u4EBF\",\n  \"\u5108\": \"\u4FA9\",\n  \"\u5109\": \"\u4FED\",\n  \"\u510E\": \"\u50A4\",\n  \"\u5110\": \"\u50A7\",\n  \"\u5114\": \"\u4FE6\",\n  \"\u5115\": \"\u4FAA\",\n  \"\u5118\": \"\u5C3D\",\n  \"\u511F\": \"\u507F\",\n  \"\u5123\": \"\\ud840\",\n  \"\u512A\": \"\u4F18\",\n  \"\u512D\": \"\\ud840\",\n  \"\u5132\": \"\u50A8\",\n  \"\u5137\": \"\u4FEA\",\n  \"\u5138\": \"\u3469\",\n  \"\u513A\": \"\u50A9\",\n  \"\u513B\": \"\u50A5\",\n  \"\u513C\": \"\u4FE8\",\n  \"\u5147\": \"\u51F6\",\n  \"\u514C\": \"\u5151\",\n  \"\u5152\": \"\u513F\",\n  \"\u5157\": \"\u5156\",\n  \"\u5167\": \"\u5185\",\n  \"\u5169\": \"\u4E24\",\n  \"\u518A\": \"\u518C\",\n  \"\u5191\": \"\u80C4\",\n  \"\u51AA\": \"\u5E42\",\n  \"\u51C8\": \"\u51C0\",\n  \"\u51CD\": \"\u51BB\",\n  \"\u51D9\": \"\\ud869\",\n  \"\u51DC\": \"\u51DB\",\n  \"\u51F1\": \"\u51EF\",\n  \"\u5225\": \"\u522B\",\n  \"\u522A\": \"\u5220\",\n  \"\u5244\": \"\u522D\",\n  \"\u5247\": \"\u5219\",\n  \"\u524B\": \"\u514B\",\n  \"\u524E\": \"\u5239\",\n  \"\u5257\": \"\u522C\",\n  \"\u525B\": \"\u521A\",\n  \"\u525D\": \"\u5265\",\n  \"\u526E\": \"\u5250\",\n  \"\u5274\": \"\u5240\",\n  \"\u5275\": \"\u521B\",\n  \"\u5277\": \"\u94F2\",\n  \"\u527E\": \"\\ud841\",\n  \"\u5283\": \"\u5212\",\n  \"\u5287\": \"\u5267\",\n  \"\u5289\": \"\u5218\",\n  \"\u528A\": \"\u523D\",\n  \"\u528C\": \"\u523F\",\n  \"\u528D\": \"\u5251\",\n  \"\u528F\": \"\u34E5\",\n  \"\u5291\": \"\u5242\",\n  \"\u529A\": \"\u3509\",\n  \"\u52C1\": \"\u52B2\",\n  \"\u52D1\": \"\\ud842\",\n  \"\u52D5\": \"\u52A8\",\n  \"\u52D9\": \"\u52A1\",\n  \"\u52DB\": \"\u52CB\",\n  \"\u52DD\": \"\u80DC\",\n  \"\u52DE\": \"\u52B3\",\n  \"\u52E2\": \"\u52BF\",\n  \"\u52E3\": \"\\ud869\",\n  \"\u52E9\": \"\u52DA\",\n  \"\u52F1\": \"\u52A2\",\n  \"\u52F3\": \"\u52CB\",\n  \"\u52F5\": \"\u52B1\",\n  \"\u52F8\": \"\u529D\",\n  \"\u52FB\": \"\u5300\",\n  \"\u532D\": \"\u5326\",\n  \"\u532F\": \"\u6C47\",\n  \"\u5331\": \"\u532E\",\n  \"\u5340\": \"\u533A\",\n  \"\u5354\": \"\u534F\",\n  \"\u5379\": \"\u6064\",\n  \"\u537B\": \"\u5374\",\n  \"\u537D\": \"\u5373\",\n  \"\u5399\": \"\u538D\",\n  \"\u53A0\": \"\u5395\",\n  \"\u53A4\": \"\u5386\",\n  \"\u53AD\": \"\u538C\",\n  \"\u53B2\": \"\u5389\",\n  \"\u53B4\": \"\u53A3\",\n  \"\u53C3\": \"\u53C2\",\n  \"\u53C4\": \"\u53C1\",\n  \"\u53E2\": \"\u4E1B\",\n  \"\u5412\": \"\u54A4\",\n  \"\u5433\": \"\u5434\",\n  \"\u5436\": \"\u5450\",\n  \"\u5442\": \"\u5415\",\n  \"\u54BC\": \"\u5459\",\n  \"\u54E1\": \"\u5458\",\n  \"\u54EF\": \"\\ud842\",\n  \"\u5504\": \"\u5457\",\n  \"\u5513\": \"\\ud86a\",\n  \"\u5538\": \"\u5FF5\",\n  \"\u554F\": \"\u95EE\",\n  \"\u5553\": \"\u542F\",\n  \"\u555E\": \"\u54D1\",\n  \"\u555F\": \"\u542F\",\n  \"\u5562\": \"\u5521\",\n  \"\u558E\": \"\u359E\",\n  \"\u559A\": \"\u5524\",\n  \"\u55AA\": \"\u4E27\",\n  \"\u55AB\": \"\u5403\",\n  \"\u55AC\": \"\u4E54\",\n  \"\u55AE\": \"\u5355\",\n  \"\u55B2\": \"\u54DF\",\n  \"\u55C6\": \"\u545B\",\n  \"\u55C7\": \"\u556C\",\n  \"\u55CA\": \"\u551D\",\n  \"\u55CE\": \"\u5417\",\n  \"\u55DA\": \"\u545C\",\n  \"\u55E9\": \"\u5522\",\n  \"\u55F0\": \"\\ud842\",\n  \"\u55F6\": \"\u54D4\",\n  \"\u55F9\": \"\\ud86a\",\n  \"\u5606\": \"\u53F9\",\n  \"\u560D\": \"\u55BD\",\n  \"\u5613\": \"\u556F\",\n  \"\u5614\": \"\u5455\",\n  \"\u5616\": \"\u5567\",\n  \"\u5617\": \"\u5C1D\",\n  \"\u561C\": \"\u551B\",\n  \"\u5629\": \"\u54D7\",\n  \"\u562A\": \"\\ud86a\",\n  \"\u562E\": \"\u5520\",\n  \"\u562F\": \"\u5578\",\n  \"\u5630\": \"\u53FD\",\n  \"\u5633\": \"\\ud86a\",\n  \"\u5635\": \"\u54D3\",\n  \"\u5638\": \"\u5452\",\n  \"\u563A\": \"\\ud86a\",\n  \"\u563D\": \"\u5574\",\n  \"\u5641\": \"\u6076\",\n  \"\u5645\": \"\\ud842\",\n  \"\u5653\": \"\u5618\",\n  \"\u565A\": \"\u358A\",\n  \"\u565D\": \"\u549D\",\n  \"\u565E\": \"\\ud86a\",\n  \"\u5660\": \"\u54D2\",\n  \"\u5665\": \"\u54DD\",\n  \"\u5666\": \"\u54D5\",\n  \"\u566F\": \"\u55F3\",\n  \"\u5672\": \"\u54D9\",\n  \"\u5674\": \"\u55B7\",\n  \"\u5678\": \"\u5428\",\n  \"\u5679\": \"\u5F53\",\n  \"\u5680\": \"\u549B\",\n  \"\u5687\": \"\u5413\",\n  \"\u568C\": \"\u54DC\",\n  \"\u5690\": \"\u5C1D\",\n  \"\u5695\": \"\u565C\",\n  \"\u5699\": \"\u556E\",\n  \"\u569B\": \"\\ud86a\",\n  \"\u56A5\": \"\u54BD\",\n  \"\u56A6\": \"\u5456\",\n  \"\u56A7\": \"\\ud843\",\n  \"\u56A8\": \"\u5499\",\n  \"\u56AE\": \"\u5411\",\n  \"\u56B2\": \"\u4EB8\",\n  \"\u56B3\": \"\u55BE\",\n  \"\u56B4\": \"\u4E25\",\n  \"\u56B6\": \"\u5624\",\n  \"\u56BD\": \"\\ud86a\",\n  \"\u56C0\": \"\u556D\",\n  \"\u56C1\": \"\u55EB\",\n  \"\u56C2\": \"\u56A3\",\n  \"\u56C3\": \"\\ud843\",\n  \"\u56C5\": \"\u5181\",\n  \"\u56C8\": \"\u5453\",\n  \"\u56C9\": \"\u5570\",\n  \"\u56CC\": \"\u82CF\",\n  \"\u56D1\": \"\u5631\",\n  \"\u56D2\": \"\\ud86a\",\n  \"\u56EA\": \"\u56F1\",\n  \"\u5707\": \"\u56F5\",\n  \"\u570B\": \"\u56FD\",\n  \"\u570D\": \"\u56F4\",\n  \"\u5712\": \"\u56ED\",\n  \"\u5713\": \"\u5706\",\n  \"\u5716\": \"\u56FE\",\n  \"\u5718\": \"\u56E2\",\n  \"\u571E\": \"\\ud86a\",\n  \"\u57BB\": \"\u575D\",\n  \"\u57E1\": \"\u57AD\",\n  \"\u57E8\": \"\\ud86e\",\n  \"\u57EC\": \"\\ud86a\",\n  \"\u57F0\": \"\u91C7\",\n  \"\u57F7\": \"\u6267\",\n  \"\u5805\": \"\u575A\",\n  \"\u580A\": \"\u57A9\",\n  \"\u5816\": \"\u57B4\",\n  \"\u581A\": \"\\ud86a\",\n  \"\u581D\": \"\u57DA\",\n  \"\u582F\": \"\u5C27\",\n  \"\u5831\": \"\u62A5\",\n  \"\u5834\": \"\u573A\",\n  \"\u584A\": \"\u5757\",\n  \"\u584B\": \"\u8314\",\n  \"\u584F\": \"\u57B2\",\n  \"\u5852\": \"\u57D8\",\n  \"\u5857\": \"\u6D82\",\n  \"\u585A\": \"\u51A2\",\n  \"\u5862\": \"\u575E\",\n  \"\u5864\": \"\u57D9\",\n  \"\u5875\": \"\u5C18\",\n  \"\u5878\": \"\\ud86e\",\n  \"\u5879\": \"\u5811\",\n  \"\u587F\": \"\\ud86a\",\n  \"\u588A\": \"\u57AB\",\n  \"\u589C\": \"\u5760\",\n  \"\u58A0\": \"\\ud86e\",\n  \"\u58AE\": \"\u5815\",\n  \"\u58B0\": \"\u575B\",\n  \"\u58B2\": \"\\ud86a\",\n  \"\u58B3\": \"\u575F\",\n  \"\u58B6\": \"\u57AF\",\n  \"\u58BB\": \"\u5899\",\n  \"\u58BE\": \"\u57A6\",\n  \"\u58C7\": \"\u575B\",\n  \"\u58C8\": \"\\ud845\",\n  \"\u58CB\": \"\u57B1\",\n  \"\u58CE\": \"\u57D9\",\n  \"\u58D3\": \"\u538B\",\n  \"\u58D7\": \"\\ud844\",\n  \"\u58D8\": \"\u5792\",\n  \"\u58D9\": \"\u5739\",\n  \"\u58DA\": \"\u5786\",\n  \"\u58DC\": \"\u575B\",\n  \"\u58DE\": \"\u574F\",\n  \"\u58DF\": \"\u5784\",\n  \"\u58E0\": \"\u5785\",\n  \"\u58E2\": \"\u575C\",\n  \"\u58E3\": \"\\ud86a\",\n  \"\u58E9\": \"\u575D\",\n  \"\u58EA\": \"\u5846\",\n  \"\u58EF\": \"\u58EE\",\n  \"\u58FA\": \"\u58F6\",\n  \"\u58FC\": \"\u58F8\",\n  \"\u58FD\": \"\u5BFF\",\n  \"\u5920\": \"\u591F\",\n  \"\u5922\": \"\u68A6\",\n  \"\u5925\": \"\u4F19\",\n  \"\u593E\": \"\u5939\",\n  \"\u5950\": \"\u5942\",\n  \"\u5967\": \"\u5965\",\n  \"\u5969\": \"\u5941\",\n  \"\u596A\": \"\u593A\",\n  \"\u596C\": \"\u5956\",\n  \"\u596E\": \"\u594B\",\n  \"\u597C\": \"\u59F9\",\n  \"\u599D\": \"\u5986\",\n  \"\u59CD\": \"\u59D7\",\n  \"\u59E6\": \"\u5978\",\n  \"\u5A19\": \"\\ud86f\",\n  \"\u5A1B\": \"\u5A31\",\n  \"\u5A41\": \"\u5A04\",\n  \"\u5A61\": \"\\ud86d\",\n  \"\u5A66\": \"\u5987\",\n  \"\u5A6D\": \"\u5A05\",\n  \"\u5A88\": \"\\ud86d\",\n  \"\u5AA7\": \"\u5A32\",\n  \"\u5AAF\": \"\u59AB\",\n  \"\u5AB0\": \"\u36C0\",\n  \"\u5ABC\": \"\u5AAA\",\n  \"\u5ABD\": \"\u5988\",\n  \"\u5ACB\": \"\u8885\",\n  \"\u5AD7\": \"\u59AA\",\n  \"\u5AF5\": \"\u59A9\",\n  \"\u5AFA\": \"\u5A34\",\n  \"\u5AFB\": \"\u5A34\",\n  \"\u5AFF\": \"\u5A73\",\n  \"\u5B00\": \"\u59AB\",\n  \"\u5B03\": \"\u5AAD\",\n  \"\u5B07\": \"\\ud86d\",\n  \"\u5B08\": \"\u5A06\",\n  \"\u5B0B\": \"\u5A75\",\n  \"\u5B0C\": \"\u5A07\",\n  \"\u5B19\": \"\u5AF1\",\n  \"\u5B21\": \"\u5AD2\",\n  \"\u5B23\": \"\\ud86a\",\n  \"\u5B24\": \"\u5B37\",\n  \"\u5B26\": \"\\ud86d\",\n  \"\u5B2A\": \"\u5AD4\",\n  \"\u5B30\": \"\u5A74\",\n  \"\u5B38\": \"\u5A76\",\n  \"\u5B3B\": \"\\ud86a\",\n  \"\u5B43\": \"\u5A18\",\n  \"\u5B44\": \"\\ud86d\",\n  \"\u5B46\": \"\\ud86d\",\n  \"\u5B47\": \"\\ud86a\",\n  \"\u5B4B\": \"\u36E4\",\n  \"\u5B4C\": \"\u5A08\",\n  \"\u5B4E\": \"\\ud846\",\n  \"\u5B6B\": \"\u5B59\",\n  \"\u5B78\": \"\u5B66\",\n  \"\u5B7B\": \"\\ud846\",\n  \"\u5B7E\": \"\\ud86a\",\n  \"\u5B7F\": \"\u5B6A\",\n  \"\u5BAE\": \"\u5BAB\",\n  \"\u5BC0\": \"\u91C7\",\n  \"\u5BE0\": \"\\ud86a\",\n  \"\u5BE2\": \"\u5BDD\",\n  \"\u5BE6\": \"\u5B9E\",\n  \"\u5BE7\": \"\u5B81\",\n  \"\u5BE9\": \"\u5BA1\",\n  \"\u5BEB\": \"\u5199\",\n  \"\u5BEC\": \"\u5BBD\",\n  \"\u5BF5\": \"\u5BA0\",\n  \"\u5BF6\": \"\u5B9D\",\n  \"\u5C07\": \"\u5C06\",\n  \"\u5C08\": \"\u4E13\",\n  \"\u5C0B\": \"\u5BFB\",\n  \"\u5C0D\": \"\u5BF9\",\n  \"\u5C0E\": \"\u5BFC\",\n  \"\u5C37\": \"\u5C34\",\n  \"\u5C46\": \"\u5C4A\",\n  \"\u5C4D\": \"\u5C38\",\n  \"\u5C53\": \"\u5C43\",\n  \"\u5C5C\": \"\u5C49\",\n  \"\u5C62\": \"\u5C61\",\n  \"\u5C64\": \"\u5C42\",\n  \"\u5C68\": \"\u5C66\",\n  \"\u5C69\": \"\\ud86a\",\n  \"\u5C6C\": \"\u5C5E\",\n  \"\u5CA1\": \"\u5188\",\n  \"\u5CEF\": \"\u5CF0\",\n  \"\u5CF4\": \"\u5C98\",\n  \"\u5CF6\": \"\u5C9B\",\n  \"\u5CFD\": \"\u5CE1\",\n  \"\u5D0D\": \"\u5D03\",\n  \"\u5D11\": \"\u6606\",\n  \"\u5D17\": \"\u5C97\",\n  \"\u5D19\": \"\u4ED1\",\n  \"\u5D22\": \"\u5CE5\",\n  \"\u5D2C\": \"\u5CBD\",\n  \"\u5D50\": \"\u5C9A\",\n  \"\u5D57\": \"\u5C81\",\n  \"\u5D7C\": \"\\ud847\",\n  \"\u5D7D\": \"\\ud86f\",\n  \"\u5D7E\": \"\u37E5\",\n  \"\u5D81\": \"\u5D5D\",\n  \"\u5D84\": \"\u5D2D\",\n  \"\u5D87\": \"\u5C96\",\n  \"\u5D88\": \"\\ud847\",\n  \"\u5D94\": \"\u5D5A\",\n  \"\u5D97\": \"\u5D02\",\n  \"\u5D98\": \"\\ud847\",\n  \"\u5DA0\": \"\u5CE4\",\n  \"\u5DA2\": \"\u5CE3\",\n  \"\u5DA7\": \"\u5CC4\",\n  \"\u5DA8\": \"\u5CC3\",\n  \"\u5DAE\": \"\u5D04\",\n  \"\u5DB8\": \"\u5D58\",\n  \"\u5DB9\": \"\\ud86d\",\n  \"\u5DBA\": \"\u5CAD\",\n  \"\u5DBC\": \"\u5C7F\",\n  \"\u5DBD\": \"\u5CB3\",\n  \"\u5DCA\": \"\\ud86a\",\n  \"\u5DCB\": \"\u5CBF\",\n  \"\u5DD2\": \"\u5CE6\",\n  \"\u5DD4\": \"\u5DC5\",\n  \"\u5DD6\": \"\u5CA9\",\n  \"\u5DD7\": \"\\ud86a\",\n  \"\u5DD8\": \"\\ud86a\",\n  \"\u5DF0\": \"\u5DEF\",\n  \"\u5DF9\": \"\u537A\",\n  \"\u5E25\": \"\u5E05\",\n  \"\u5E2B\": \"\u5E08\",\n  \"\u5E33\": \"\u5E10\",\n  \"\u5E36\": \"\u5E26\",\n  \"\u5E40\": \"\u5E27\",\n  \"\u5E43\": \"\u5E0F\",\n  \"\u5E53\": \"\u384E\",\n  \"\u5E57\": \"\u5E3C\",\n  \"\u5E58\": \"\u5E3B\",\n  \"\u5E5D\": \"\\ud86a\",\n  \"\u5E5F\": \"\u5E1C\",\n  \"\u5E63\": \"\u5E01\",\n  \"\u5E69\": \"\\ud86a\",\n  \"\u5E6B\": \"\u5E2E\",\n  \"\u5E6C\": \"\u5E31\",\n  \"\u5E79\": \"\u5E72\",\n  \"\u5E7E\": \"\u51E0\",\n  \"\u5EAB\": \"\u5E93\",\n  \"\u5EC1\": \"\u5395\",\n  \"\u5EC2\": \"\u53A2\",\n  \"\u5EC4\": \"\u53A9\",\n  \"\u5EC8\": \"\u53A6\",\n  \"\u5ECE\": \"\u5EBC\",\n  \"\u5ED5\": \"\u836B\",\n  \"\u5EDA\": \"\u53A8\",\n  \"\u5EDD\": \"\u53AE\",\n  \"\u5EDE\": \"\\ud86f\",\n  \"\u5EDF\": \"\u5E99\",\n  \"\u5EE0\": \"\u5382\",\n  \"\u5EE1\": \"\u5E91\",\n  \"\u5EE2\": \"\u5E9F\",\n  \"\u5EE3\": \"\u5E7F\",\n  \"\u5EE7\": \"\\ud86a\",\n  \"\u5EE9\": \"\u5EEA\",\n  \"\u5EEC\": \"\u5E90\",\n  \"\u5EF3\": \"\u5385\",\n  \"\u5F12\": \"\u5F11\",\n  \"\u5F14\": \"\u540A\",\n  \"\u5F33\": \"\u5F2A\",\n  \"\u5F35\": \"\u5F20\",\n  \"\u5F37\": \"\u5F3A\",\n  \"\u5F43\": \"\\ud86a\",\n  \"\u5F44\": \"\\ud86f\",\n  \"\u5F46\": \"\u522B\",\n  \"\u5F48\": \"\u5F39\",\n  \"\u5F4C\": \"\u5F25\",\n  \"\u5F4E\": \"\u5F2F\",\n  \"\u5F54\": \"\u5F55\",\n  \"\u5F59\": \"\u6C47\",\n  \"\u5F60\": \"\u5F5F\",\n  \"\u5F65\": \"\u5F66\",\n  \"\u5F6B\": \"\u96D5\",\n  \"\u5F72\": \"\u5F68\",\n  \"\u5F77\": \"\u5F77\",\n  \"\u5F7F\": \"\u4F5B\",\n  \"\u5F8C\": \"\u540E\",\n  \"\u5F91\": \"\u5F84\",\n  \"\u5F9E\": \"\u4ECE\",\n  \"\u5FA0\": \"\u5F95\",\n  \"\u5FA9\": \"\u590D\",\n  \"\u5FB5\": \"\u5F81\",\n  \"\u5FB9\": \"\u5F7B\",\n  \"\u5FBF\": \"\\ud86a\",\n  \"\u6046\": \"\u6052\",\n  \"\u6065\": \"\u803B\",\n  \"\u6085\": \"\u60A6\",\n  \"\u609E\": \"\u60AE\",\n  \"\u60B5\": \"\u6005\",\n  \"\u60B6\": \"\u95F7\",\n  \"\u60BD\": \"\u51C4\",\n  \"\u60E1\": \"\u6076\",\n  \"\u60F1\": \"\u607C\",\n  \"\u60F2\": \"\u607D\",\n  \"\u60FB\": \"\u607B\",\n  \"\u611B\": \"\u7231\",\n  \"\u611C\": \"\u60EC\",\n  \"\u6128\": \"\u60AB\",\n  \"\u6134\": \"\u6006\",\n  \"\u6137\": \"\u607A\",\n  \"\u613B\": \"\\ud849\",\n  \"\u613E\": \"\u5FFE\",\n  \"\u6144\": \"\u6817\",\n  \"\u614B\": \"\u6001\",\n  \"\u614D\": \"\u6120\",\n  \"\u6158\": \"\u60E8\",\n  \"\u615A\": \"\u60ED\",\n  \"\u615F\": \"\u6078\",\n  \"\u6163\": \"\u60EF\",\n  \"\u6164\": \"\u60AB\",\n  \"\u616A\": \"\u6004\",\n  \"\u616B\": \"\u6002\",\n  \"\u616E\": \"\u8651\",\n  \"\u6173\": \"\u60AD\",\n  \"\u6176\": \"\u5E86\",\n  \"\u617A\": \"\u396A\",\n  \"\u617C\": \"\u621A\",\n  \"\u617E\": \"\u6B32\",\n  \"\u6182\": \"\u5FE7\",\n  \"\u618A\": \"\u60EB\",\n  \"\u6190\": \"\u601C\",\n  \"\u6191\": \"\u51ED\",\n  \"\u6192\": \"\u6126\",\n  \"\u6196\": \"\u616D\",\n  \"\u619A\": \"\u60EE\",\n  \"\u61A2\": \"\\ud849\",\n  \"\u61A4\": \"\u6124\",\n  \"\u61AB\": \"\u60AF\",\n  \"\u61AE\": \"\u6003\",\n  \"\u61B2\": \"\u5BAA\",\n  \"\u61B6\": \"\u5FC6\",\n  \"\u61B8\": \"\\ud86a\",\n  \"\u61B9\": \"\\ud849\",\n  \"\u61C0\": \"\\ud849\",\n  \"\u61C7\": \"\u6073\",\n  \"\u61C9\": \"\u5E94\",\n  \"\u61CC\": \"\u603F\",\n  \"\u61CD\": \"\u61D4\",\n  \"\u61CE\": \"\\ud84a\",\n  \"\u61DE\": \"\u8499\",\n  \"\u61DF\": \"\u603C\",\n  \"\u61E3\": \"\u61D1\",\n  \"\u61E4\": \"\u393D\",\n  \"\u61E8\": \"\u6079\",\n  \"\u61F2\": \"\u60E9\",\n  \"\u61F6\": \"\u61D2\",\n  \"\u61F7\": \"\u6000\",\n  \"\u61F8\": \"\u60AC\",\n  \"\u61FA\": \"\u5FCF\",\n  \"\u61FC\": \"\u60E7\",\n  \"\u61FE\": \"\u6151\",\n  \"\u6200\": \"\u604B\",\n  \"\u6207\": \"\u6206\",\n  \"\u6214\": \"\u620B\",\n  \"\u6227\": \"\u6217\",\n  \"\u6229\": \"\u622C\",\n  \"\u6230\": \"\u6218\",\n  \"\u6231\": \"\u622F\",\n  \"\u6232\": \"\u620F\",\n  \"\u6236\": \"\u6237\",\n  \"\u62CB\": \"\u629B\",\n  \"\u6329\": \"\u635D\",\n  \"\u6331\": \"\u6332\",\n  \"\u633E\": \"\u631F\",\n  \"\u6368\": \"\u820D\",\n  \"\u636B\": \"\u626A\",\n  \"\u6371\": \"\u6328\",\n  \"\u6372\": \"\u5377\",\n  \"\u6383\": \"\u626B\",\n  \"\u6384\": \"\u62A1\",\n  \"\u6386\": \"\u39CF\",\n  \"\u6397\": \"\u631C\",\n  \"\u6399\": \"\u6323\",\n  \"\u639A\": \"\\ud86a\",\n  \"\u639B\": \"\u6302\",\n  \"\u63A1\": \"\u91C7\",\n  \"\u63C0\": \"\u62E3\",\n  \"\u63DA\": \"\u626C\",\n  \"\u63DB\": \"\u6362\",\n  \"\u63EE\": \"\u6325\",\n  \"\u63EF\": \"\u6404\",\n  \"\u640D\": \"\u635F\",\n  \"\u6416\": \"\u6447\",\n  \"\u6417\": \"\u6363\",\n  \"\u6435\": \"\u63FE\",\n  \"\u6436\": \"\u62A2\",\n  \"\u644B\": \"\\ud84a\",\n  \"\u6450\": \"\\ud86a\",\n  \"\u6451\": \"\u63B4\",\n  \"\u645C\": \"\u63BC\",\n  \"\u645F\": \"\u6402\",\n  \"\u646F\": \"\u631A\",\n  \"\u6473\": \"\u62A0\",\n  \"\u6476\": \"\u629F\",\n  \"\u647A\": \"\u6298\",\n  \"\u647B\": \"\u63BA\",\n  \"\u6488\": \"\u635E\",\n  \"\u648A\": \"\\ud86a\",\n  \"\u648F\": \"\u6326\",\n  \"\u6490\": \"\u6491\",\n  \"\u6493\": \"\u6320\",\n  \"\u649D\": \"\u39D1\",\n  \"\u649F\": \"\u6322\",\n  \"\u64A3\": \"\u63B8\",\n  \"\u64A5\": \"\u62E8\",\n  \"\u64A7\": \"\\ud86a\",\n  \"\u64AB\": \"\u629A\",\n  \"\u64B2\": \"\u6251\",\n  \"\u64B3\": \"\u63FF\",\n  \"\u64BB\": \"\u631E\",\n  \"\u64BE\": \"\u631D\",\n  \"\u64BF\": \"\u6361\",\n  \"\u64C1\": \"\u62E5\",\n  \"\u64C4\": \"\u63B3\",\n  \"\u64C7\": \"\u62E9\",\n  \"\u64CA\": \"\u51FB\",\n  \"\u64CB\": \"\u6321\",\n  \"\u64D3\": \"\u39DF\",\n  \"\u64D4\": \"\u62C5\",\n  \"\u64DA\": \"\u636E\",\n  \"\u64DF\": \"\\ud86a\",\n  \"\u64E0\": \"\u6324\",\n  \"\u64E3\": \"\u6363\",\n  \"\u64EB\": \"\\ud84a\",\n  \"\u64EC\": \"\u62DF\",\n  \"\u64EF\": \"\u6448\",\n  \"\u64F0\": \"\u62E7\",\n  \"\u64F1\": \"\u6401\",\n  \"\u64F2\": \"\u63B7\",\n  \"\u64F4\": \"\u6269\",\n  \"\u64F7\": \"\u64B7\",\n  \"\u64FA\": \"\u6446\",\n  \"\u64FB\": \"\u64DE\",\n  \"\u64FC\": \"\u64B8\",\n  \"\u64FD\": \"\u39F0\",\n  \"\u64FE\": \"\u6270\",\n  \"\u6504\": \"\u6445\",\n  \"\u6506\": \"\u64B5\",\n  \"\u650B\": \"\\ud86a\",\n  \"\u650F\": \"\u62E2\",\n  \"\u6514\": \"\u62E6\",\n  \"\u6516\": \"\u6484\",\n  \"\u6519\": \"\u6400\",\n  \"\u651B\": \"\u64BA\",\n  \"\u651C\": \"\u643A\",\n  \"\u651D\": \"\u6444\",\n  \"\u6522\": \"\u6512\",\n  \"\u6523\": \"\u631B\",\n  \"\u6524\": \"\u644A\",\n  \"\u652A\": \"\u6405\",\n  \"\u652C\": \"\u63FD\",\n  \"\u654E\": \"\u6559\",\n  \"\u6553\": \"\u655A\",\n  \"\u6557\": \"\u8D25\",\n  \"\u6558\": \"\u53D9\",\n  \"\u6575\": \"\u654C\",\n  \"\u6578\": \"\u6570\",\n  \"\u6582\": \"\u655B\",\n  \"\u6583\": \"\u6BD9\",\n  \"\u6585\": \"\\ud84b\",\n  \"\u6586\": \"\u6569\",\n  \"\u6595\": \"\u6593\",\n  \"\u65AC\": \"\u65A9\",\n  \"\u65B7\": \"\u65AD\",\n  \"\u65B8\": \"\\ud84c\",\n  \"\u65BC\": \"\u4E8E\",\n  \"\u65C2\": \"\u65D7\",\n  \"\u65E3\": \"\u65E2\",\n  \"\u6607\": \"\u5347\",\n  \"\u6642\": \"\u65F6\",\n  \"\u6649\": \"\u664B\",\n  \"\u665B\": \"\\ud870\",\n  \"\u665D\": \"\u663C\",\n  \"\u6688\": \"\u6655\",\n  \"\u6689\": \"\u6656\",\n  \"\u6690\": \"\\ud870\",\n  \"\u6698\": \"\u65F8\",\n  \"\u66A2\": \"\u7545\",\n  \"\u66AB\": \"\u6682\",\n  \"\u66C4\": \"\u6654\",\n  \"\u66C6\": \"\u5386\",\n  \"\u66C7\": \"\u6619\",\n  \"\u66C9\": \"\u6653\",\n  \"\u66CA\": \"\\ud86b\",\n  \"\u66CF\": \"\u5411\",\n  \"\u66D6\": \"\u66A7\",\n  \"\u66E0\": \"\u65F7\",\n  \"\u66E5\": \"\\ud84c\",\n  \"\u66E8\": \"\u663D\",\n  \"\u66EC\": \"\u6652\",\n  \"\u66F8\": \"\u4E66\",\n  \"\u6703\": \"\u4F1A\",\n  \"\u6725\": \"\\ud859\",\n  \"\u6727\": \"\u80E7\",\n  \"\u672E\": \"\u672F\",\n  \"\u6771\": \"\u4E1C\",\n  \"\u67B4\": \"\u62D0\",\n  \"\u67F5\": \"\u6805\",\n  \"\u67FA\": \"\u62D0\",\n  \"\u67FB\": \"\u67E5\",\n  \"\u6871\": \"\\ud84d\",\n  \"\u687F\": \"\u6746\",\n  \"\u6894\": \"\u6800\",\n  \"\u6896\": \"\\ud86b\",\n  \"\u6898\": \"\u67A7\",\n  \"\u689C\": \"\\ud870\",\n  \"\u689D\": \"\u6761\",\n  \"\u689F\": \"\u67AD\",\n  \"\u68B2\": \"\u68C1\",\n  \"\u68C4\": \"\u5F03\",\n  \"\u68CA\": \"\u68CB\",\n  \"\u68D6\": \"\u67A8\",\n  \"\u68D7\": \"\u67A3\",\n  \"\u68DF\": \"\u680B\",\n  \"\u68E1\": \"\u3B4E\",\n  \"\u68E7\": \"\u6808\",\n  \"\u68F2\": \"\u6816\",\n  \"\u68F6\": \"\u68BE\",\n  \"\u690F\": \"\u6860\",\n  \"\u6932\": \"\u3B4F\",\n  \"\u6947\": \"\\ud84d\",\n  \"\u694A\": \"\u6768\",\n  \"\u6953\": \"\u67AB\",\n  \"\u6968\": \"\u6862\",\n  \"\u696D\": \"\u4E1A\",\n  \"\u6975\": \"\u6781\",\n  \"\u6998\": \"\u77E9\",\n  \"\u69A6\": \"\u5E72\",\n  \"\u69AA\": \"\u6769\",\n  \"\u69AE\": \"\u8363\",\n  \"\u69B2\": \"\u6985\",\n  \"\u69BF\": \"\u6864\",\n  \"\u69CB\": \"\u6784\",\n  \"\u69CD\": \"\u67AA\",\n  \"\u69D3\": \"\u6760\",\n  \"\u69E4\": \"\u68BF\",\n  \"\u69E7\": \"\u6920\",\n  \"\u69E8\": \"\u6901\",\n  \"\u69EB\": \"\\ud84c\",\n  \"\u69EE\": \"\u692E\",\n  \"\u69F3\": \"\u6868\",\n  \"\u69F6\": \"\u6922\",\n  \"\u69FC\": \"\u691D\",\n  \"\u6A01\": \"\u6869\",\n  \"\u6A02\": \"\u4E50\",\n  \"\u6A05\": \"\u679E\",\n  \"\u6A11\": \"\u6881\",\n  \"\u6A13\": \"\u697C\",\n  \"\u6A19\": \"\u6807\",\n  \"\u6A1E\": \"\u67A2\",\n  \"\u6A20\": \"\\ud84d\",\n  \"\u6A22\": \"\u3B64\",\n  \"\u6A23\": \"\u6837\",\n  \"\u6A24\": \"\\ud84d\",\n  \"\u6A27\": \"\u699D\",\n  \"\u6A2B\": \"\u3B74\",\n  \"\u6A33\": \"\u686A\",\n  \"\u6A38\": \"\u6734\",\n  \"\u6A39\": \"\u6811\",\n  \"\u6A3A\": \"\u6866\",\n  \"\u6A3F\": \"\u692B\",\n  \"\u6A48\": \"\u6861\",\n  \"\u6A4B\": \"\u6865\",\n  \"\u6A5F\": \"\u673A\",\n  \"\u6A62\": \"\u692D\",\n  \"\u6A6B\": \"\u6A2A\",\n  \"\u6A6F\": \"\\ud84d\",\n  \"\u6A81\": \"\u6AA9\",\n  \"\u6A89\": \"\u67FD\",\n  \"\u6A94\": \"\u6863\",\n  \"\u6A9C\": \"\u6867\",\n  \"\u6A9F\": \"\u69DA\",\n  \"\u6AA2\": \"\u68C0\",\n  \"\u6AA3\": \"\u6A2F\",\n  \"\u6AAD\": \"\\ud84d\",\n  \"\u6AAE\": \"\u68BC\",\n  \"\u6AAF\": \"\u53F0\",\n  \"\u6AB3\": \"\u69DF\",\n  \"\u6AB5\": \"\\ud86b\",\n  \"\u6AB8\": \"\u67E0\",\n  \"\u6ABB\": \"\u69DB\",\n  \"\u6AC3\": \"\u67DC\",\n  \"\u6AC5\": \"\\ud86b\",\n  \"\u6ACD\": \"\\ud870\",\n  \"\u6AD3\": \"\u6A79\",\n  \"\u6ADA\": \"\u6988\",\n  \"\u6ADB\": \"\u6809\",\n  \"\u6ADD\": \"\u691F\",\n  \"\u6ADE\": \"\u6A7C\",\n  \"\u6ADF\": \"\u680E\",\n  \"\u6AE0\": \"\\ud86b\",\n  \"\u6AE5\": \"\u6A71\",\n  \"\u6AE7\": \"\u69E0\",\n  \"\u6AE8\": \"\u680C\",\n  \"\u6AEA\": \"\u67A5\",\n  \"\u6AEB\": \"\u6A65\",\n  \"\u6AEC\": \"\u6987\",\n  \"\u6AF1\": \"\u8616\",\n  \"\u6AF3\": \"\u680A\",\n  \"\u6AF8\": \"\u6989\",\n  \"\u6AFB\": \"\u6A31\",\n  \"\u6B04\": \"\u680F\",\n  \"\u6B05\": \"\u6989\",\n  \"\u6B07\": \"\\ud86b\",\n  \"\u6B0A\": \"\u6743\",\n  \"\u6B0D\": \"\\ud84d\",\n  \"\u6B0F\": \"\u6924\",\n  \"\u6B10\": \"\\ud86b\",\n  \"\u6B11\": \"\\ud86b\",\n  \"\u6B12\": \"\u683E\",\n  \"\u6B13\": \"\\ud84d\",\n  \"\u6B16\": \"\u6984\",\n  \"\u6B18\": \"\\ud84d\",\n  \"\u6B1E\": \"\u68C2\",\n  \"\u6B3D\": \"\u94A6\",\n  \"\u6B4E\": \"\u53F9\",\n  \"\u6B50\": \"\u6B27\",\n  \"\u6B5F\": \"\u6B24\",\n  \"\u6B61\": \"\u6B22\",\n  \"\u6B72\": \"\u5C81\",\n  \"\u6B77\": \"\u5386\",\n  \"\u6B78\": \"\u5F52\",\n  \"\u6B7F\": \"\u6B81\",\n  \"\u6B98\": \"\u6B8B\",\n  \"\u6B9E\": \"\u6B92\",\n  \"\u6BA2\": \"\\ud84e\",\n  \"\u6BA4\": \"\u6B87\",\n  \"\u6BA8\": \"\u3C6E\",\n  \"\u6BAB\": \"\u6B9A\",\n  \"\u6BAD\": \"\u50F5\",\n  \"\u6BAE\": \"\u6B93\",\n  \"\u6BAF\": \"\u6BA1\",\n  \"\u6BB0\": \"\u3C69\",\n  \"\u6BB2\": \"\u6B7C\",\n  \"\u6BBA\": \"\u6740\",\n  \"\u6BBB\": \"\u58F3\",\n  \"\u6BBC\": \"\u58F3\",\n  \"\u6BC0\": \"\u6BC1\",\n  \"\u6BC6\": \"\u6BB4\",\n  \"\u6BCA\": \"\\ud86b\",\n  \"\u6BFF\": \"\u6BF5\",\n  \"\u6C02\": \"\u7266\",\n  \"\u6C08\": \"\u6BE1\",\n  \"\u6C0C\": \"\u6C07\",\n  \"\u6C23\": \"\u6C14\",\n  \"\u6C2B\": \"\u6C22\",\n  \"\u6C2C\": \"\u6C29\",\n  \"\u6C2D\": \"\\ud84f\",\n  \"\u6C33\": \"\u6C32\",\n  \"\u6C3E\": \"\u6CDB\",\n  \"\u6C4E\": \"\u6CDB\",\n  \"\u6C59\": \"\u6C61\",\n  \"\u6C7A\": \"\u51B3\",\n  \"\u6C92\": \"\u6CA1\",\n  \"\u6C96\": \"\u51B2\",\n  \"\u6CC1\": \"\u51B5\",\n  \"\u6CDD\": \"\u6EAF\",\n  \"\u6D29\": \"\u6CC4\",\n  \"\u6D36\": \"\u6C79\",\n  \"\u6D79\": \"\u6D43\",\n  \"\u6D7F\": \"\\ud870\",\n  \"\u6D87\": \"\u6CFE\",\n  \"\u6D97\": \"\u6D9A\",\n  \"\u6DBC\": \"\u51C9\",\n  \"\u6DD2\": \"\u51C4\",\n  \"\u6DDA\": \"\u6CEA\",\n  \"\u6DE5\": \"\u6E0C\",\n  \"\u6DE8\": \"\u51C0\",\n  \"\u6DE9\": \"\u51CC\",\n  \"\u6DEA\": \"\u6CA6\",\n  \"\u6DF5\": \"\u6E0A\",\n  \"\u6DF6\": \"\u6D9E\",\n  \"\u6DFA\": \"\u6D45\",\n  \"\u6E19\": \"\u6DA3\",\n  \"\u6E1B\": \"\u51CF\",\n  \"\u6E22\": \"\u6CA8\",\n  \"\u6E26\": \"\u6DA1\",\n  \"\u6E2C\": \"\u6D4B\",\n  \"\u6E3E\": \"\u6D51\",\n  \"\u6E4A\": \"\u51D1\",\n  \"\u6E4B\": \"\\ud84f\",\n  \"\u6E5E\": \"\u6D48\",\n  \"\u6E67\": \"\u6D8C\",\n  \"\u6E6F\": \"\u6C64\",\n  \"\u6E88\": \"\u6CA9\",\n  \"\u6E96\": \"\u51C6\",\n  \"\u6E9D\": \"\u6C9F\",\n  \"\u6EA1\": \"\\ud86b\",\n  \"\u6EAB\": \"\u6E29\",\n  \"\u6EAE\": \"\u6D49\",\n  \"\u6EB3\": \"\u6DA2\",\n  \"\u6EBC\": \"\u6E7F\",\n  \"\u6EC4\": \"\u6CA7\",\n  \"\u6EC5\": \"\u706D\",\n  \"\u6ECC\": \"\u6DA4\",\n  \"\u6ECE\": \"\u8365\",\n  \"\u6ED9\": \"\u6C47\",\n  \"\u6EEC\": \"\u6CAA\",\n  \"\u6EEF\": \"\u6EDE\",\n  \"\u6EF2\": \"\u6E17\",\n  \"\u6EF7\": \"\u5364\",\n  \"\u6EF8\": \"\u6D52\",\n  \"\u6EFB\": \"\u6D50\",\n  \"\u6EFE\": \"\u6EDA\",\n  \"\u6EFF\": \"\u6EE1\",\n  \"\u6F01\": \"\u6E14\",\n  \"\u6F0A\": \"\u6E87\",\n  \"\u6F0D\": \"\\ud870\",\n  \"\u6F1A\": \"\u6CA4\",\n  \"\u6F22\": \"\u6C49\",\n  \"\u6F23\": \"\u6D9F\",\n  \"\u6F2C\": \"\u6E0D\",\n  \"\u6F32\": \"\u6DA8\",\n  \"\u6F35\": \"\u6E86\",\n  \"\u6F38\": \"\u6E10\",\n  \"\u6F3F\": \"\u6D46\",\n  \"\u6F41\": \"\u988D\",\n  \"\u6F51\": \"\u6CFC\",\n  \"\u6F54\": \"\u6D01\",\n  \"\u6F55\": \"\\ud84f\",\n  \"\u6F59\": \"\u6CA9\",\n  \"\u6F5A\": \"\u3D0B\",\n  \"\u6F5B\": \"\u6F5C\",\n  \"\u6F63\": \"\\ud86d\",\n  \"\u6F64\": \"\u6DA6\",\n  \"\u6F6F\": \"\u6D54\",\n  \"\u6F70\": \"\u6E83\",\n  \"\u6F77\": \"\u6ED7\",\n  \"\u6F7F\": \"\u6DA0\",\n  \"\u6F80\": \"\u6DA9\",\n  \"\u6F85\": \"\\ud84f\",\n  \"\u6F86\": \"\u6D47\",\n  \"\u6F87\": \"\u6D9D\",\n  \"\u6F90\": \"\u6C84\",\n  \"\u6F97\": \"\u6DA7\",\n  \"\u6FA0\": \"\u6E11\",\n  \"\u6FA4\": \"\u6CFD\",\n  \"\u6FA6\": \"\u6EEA\",\n  \"\u6FA9\": \"\u6CF6\",\n  \"\u6FAB\": \"\\ud870\",\n  \"\u6FAC\": \"\\ud86d\",\n  \"\u6FAE\": \"\u6D4D\",\n  \"\u6FB1\": \"\u6DC0\",\n  \"\u6FBE\": \"\u3CE0\",\n  \"\u6FC1\": \"\u6D4A\",\n  \"\u6FC3\": \"\u6D53\",\n  \"\u6FC4\": \"\u3CE1\",\n  \"\u6FC6\": \"\\ud84f\",\n  \"\u6FD5\": \"\u6E7F\",\n  \"\u6FD8\": \"\u6CDE\",\n  \"\u6FDA\": \"\u6E81\",\n  \"\u6FDB\": \"\u8499\",\n  \"\u6FDC\": \"\u6D55\",\n  \"\u6FDF\": \"\u6D4E\",\n  \"\u6FE4\": \"\u6D9B\",\n  \"\u6FE7\": \"\u3CD4\",\n  \"\u6FEB\": \"\u6EE5\",\n  \"\u6FF0\": \"\u6F4D\",\n  \"\u6FF1\": \"\u6EE8\",\n  \"\u6FFA\": \"\u6E85\",\n  \"\u6FFC\": \"\u6CFA\",\n  \"\u6FFE\": \"\u6EE4\",\n  \"\u6FFF\": \"\\ud86b\",\n  \"\u7002\": \"\u6F9B\",\n  \"\u7003\": \"\\ud84f\",\n  \"\u7005\": \"\u6EE2\",\n  \"\u7006\": \"\u6E0E\",\n  \"\u7007\": \"\u3CBF\",\n  \"\u7009\": \"\u6CFB\",\n  \"\u700B\": \"\u6C88\",\n  \"\u700F\": \"\u6D4F\",\n  \"\u7015\": \"\u6FD2\",\n  \"\u7018\": \"\u6CF8\",\n  \"\u701D\": \"\u6CA5\",\n  \"\u701F\": \"\u6F47\",\n  \"\u7020\": \"\u6F46\",\n  \"\u7026\": \"\u6F74\",\n  \"\u7027\": \"\u6CF7\",\n  \"\u7028\": \"\u6FD1\",\n  \"\u7030\": \"\u5F25\",\n  \"\u7032\": \"\u6F4B\",\n  \"\u703E\": \"\u6F9C\",\n  \"\u7043\": \"\u6CA3\",\n  \"\u7044\": \"\u6EE0\",\n  \"\u704D\": \"\\ud86d\",\n  \"\u7051\": \"\u6D12\",\n  \"\u7052\": \"\\ud86b\",\n  \"\u7055\": \"\u6F13\",\n  \"\u7058\": \"\u6EE9\",\n  \"\u7059\": \"\\ud84f\",\n  \"\u705D\": \"\u704F\",\n  \"\u7061\": \"\u3CD5\",\n  \"\u7063\": \"\u6E7E\",\n  \"\u7064\": \"\u6EE6\",\n  \"\u7067\": \"\u6EDF\",\n  \"\u7069\": \"\u6EDF\",\n  \"\u707D\": \"\u707E\",\n  \"\u70BA\": \"\u4E3A\",\n  \"\u70CF\": \"\u4E4C\",\n  \"\u70F4\": \"\u70C3\",\n  \"\u7121\": \"\u65E0\",\n  \"\u7147\": \"\\ud86b\",\n  \"\u7149\": \"\u70BC\",\n  \"\u7152\": \"\u709C\",\n  \"\u7159\": \"\u70DF\",\n  \"\u7162\": \"\u8315\",\n  \"\u7165\": \"\u7115\",\n  \"\u7169\": \"\u70E6\",\n  \"\u716C\": \"\u7080\",\n  \"\u7171\": \"\u3DBD\",\n  \"\u7182\": \"\\ud86b\",\n  \"\u7185\": \"\u7174\",\n  \"\u7189\": \"\\ud850\",\n  \"\u718C\": \"\\ud850\",\n  \"\u7192\": \"\u8367\",\n  \"\u7193\": \"\\ud850\",\n  \"\u7197\": \"\u709D\",\n  \"\u719A\": \"\\ud850\",\n  \"\u71A1\": \"\\ud850\",\n  \"\u71B0\": \"\\ud870\",\n  \"\u71B1\": \"\u70ED\",\n  \"\u71B2\": \"\u988E\",\n  \"\u71BE\": \"\u70BD\",\n  \"\u71C0\": \"\\ud870\",\n  \"\u71C1\": \"\u70E8\",\n  \"\u71C8\": \"\u706F\",\n  \"\u71C9\": \"\u7096\",\n  \"\u71D2\": \"\u70E7\",\n  \"\u71D6\": \"\\ud870\",\n  \"\u71D9\": \"\u70EB\",\n  \"\u71DC\": \"\u7116\",\n  \"\u71DF\": \"\u8425\",\n  \"\u71E6\": \"\u707F\",\n  \"\u71EC\": \"\u6BC1\",\n  \"\u71ED\": \"\u70DB\",\n  \"\u71F4\": \"\u70E9\",\n  \"\u71F6\": \"\u3DB6\",\n  \"\u71FB\": \"\u718F\",\n  \"\u71FC\": \"\u70EC\",\n  \"\u71FE\": \"\u7118\",\n  \"\u7203\": \"\\ud86d\",\n  \"\u7204\": \"\\ud850\",\n  \"\u7207\": \"\\ud85b\",\n  \"\u720D\": \"\u70C1\",\n  \"\u7210\": \"\u7089\",\n  \"\u7216\": \"\\ud850\",\n  \"\u721B\": \"\u70C2\",\n  \"\u7225\": \"\\ud86b\",\n  \"\u7227\": \"\\ud86d\",\n  \"\u722D\": \"\u4E89\",\n  \"\u7232\": \"\u4E3A\",\n  \"\u723A\": \"\u7237\",\n  \"\u723E\": \"\u5C14\",\n  \"\u7240\": \"\u5E8A\",\n  \"\u7246\": \"\u5899\",\n  \"\u7258\": \"\u724D\",\n  \"\u7274\": \"\u7274\",\n  \"\u727D\": \"\u7275\",\n  \"\u7296\": \"\u8366\",\n  \"\u729B\": \"\u7266\",\n  \"\u729E\": \"\\ud86b\",\n  \"\u72A2\": \"\u728A\",\n  \"\u72A7\": \"\u727A\",\n  \"\u72C0\": \"\u72B6\",\n  \"\u72F9\": \"\u72ED\",\n  \"\u72FD\": \"\u72C8\",\n  \"\u730C\": \"\\ud86b\",\n  \"\u7319\": \"\u72F0\",\n  \"\u7336\": \"\u72B9\",\n  \"\u733B\": \"\u72F2\",\n  \"\u7341\": \"\u72B8\",\n  \"\u7343\": \"\u5446\",\n  \"\u7344\": \"\u72F1\",\n  \"\u7345\": \"\u72EE\",\n  \"\u734A\": \"\\ud86b\",\n  \"\u734E\": \"\u5956\",\n  \"\u7368\": \"\u72EC\",\n  \"\u7369\": \"\\ud851\",\n  \"\u736A\": \"\u72EF\",\n  \"\u736B\": \"\u7303\",\n  \"\u736E\": \"\u72DD\",\n  \"\u7370\": \"\u72DE\",\n  \"\u7371\": \"\u3E8D\",\n  \"\u7372\": \"\u83B7\",\n  \"\u7375\": \"\u730E\",\n  \"\u7377\": \"\u72B7\",\n  \"\u7378\": \"\u517D\",\n  \"\u737A\": \"\u736D\",\n  \"\u737B\": \"\u732E\",\n  \"\u737C\": \"\u7315\",\n  \"\u7380\": \"\u7321\",\n  \"\u7381\": \"\\ud851\",\n  \"\u73FC\": \"\\ud86d\",\n  \"\u73FE\": \"\u73B0\",\n  \"\u7431\": \"\u96D5\",\n  \"\u743A\": \"\u73D0\",\n  \"\u743F\": \"\u73F2\",\n  \"\u744B\": \"\u73AE\",\n  \"\u7452\": \"\u739A\",\n  \"\u7463\": \"\u7410\",\n  \"\u7464\": \"\u7476\",\n  \"\u7469\": \"\u83B9\",\n  \"\u746A\": \"\u739B\",\n  \"\u7472\": \"\u73B1\",\n  \"\u747B\": \"\\ud86b\",\n  \"\u747D\": \"\\ud86b\",\n  \"\u7489\": \"\u740F\",\n  \"\u748A\": \"\\ud86d\",\n  \"\u7495\": \"\\ud870\",\n  \"\u7497\": \"\\ud870\",\n  \"\u749D\": \"\\ud86b\",\n  \"\u74A1\": \"\u740E\",\n  \"\u74A3\": \"\u7391\",\n  \"\u74A6\": \"\u7477\",\n  \"\u74AB\": \"\u73F0\",\n  \"\u74AF\": \"\u3EC5\",\n  \"\u74B0\": \"\u73AF\",\n  \"\u74B5\": \"\u7399\",\n  \"\u74B8\": \"\u7478\",\n  \"\u74BC\": \"\\ud86d\",\n  \"\u74BD\": \"\u73BA\",\n  \"\u74BE\": \"\\ud86d\",\n  \"\u74BF\": \"\u7487\",\n  \"\u74C4\": \"\\ud86b\",\n  \"\u74C5\": \"\\ud870\",\n  \"\u74CA\": \"\u743C\",\n  \"\u74CF\": \"\u73D1\",\n  \"\u74D4\": \"\u748E\",\n  \"\u74D5\": \"\\ud852\",\n  \"\u74DA\": \"\u74D2\",\n  \"\u74DB\": \"\\ud852\",\n  \"\u750C\": \"\u74EF\",\n  \"\u7515\": \"\u74EE\",\n  \"\u7522\": \"\u4EA7\",\n  \"\u7523\": \"\u4EA7\",\n  \"\u7526\": \"\u82CF\",\n  \"\u752F\": \"\u5B81\",\n  \"\u755D\": \"\u4EA9\",\n  \"\u7562\": \"\u6BD5\",\n  \"\u756B\": \"\u753B\",\n  \"\u7570\": \"\u5F02\",\n  \"\u7575\": \"\u753B\",\n  \"\u7576\": \"\u5F53\",\n  \"\u757C\": \"\\ud86b\",\n  \"\u7587\": \"\u7574\",\n  \"\u758A\": \"\u53E0\",\n  \"\u75D9\": \"\u75C9\",\n  \"\u75E0\": \"\u9178\",\n  \"\u75EE\": \"\\ud86b\",\n  \"\u75FE\": \"\u75B4\",\n  \"\u7602\": \"\u75D6\",\n  \"\u760B\": \"\u75AF\",\n  \"\u760D\": \"\u75A1\",\n  \"\u7613\": \"\u75EA\",\n  \"\u761E\": \"\u7617\",\n  \"\u7621\": \"\u75AE\",\n  \"\u7627\": \"\u759F\",\n  \"\u762E\": \"\u7606\",\n  \"\u7631\": \"\\ud86b\",\n  \"\u7632\": \"\u75AD\",\n  \"\u763A\": \"\u7618\",\n  \"\u763B\": \"\u7618\",\n  \"\u7642\": \"\u7597\",\n  \"\u7646\": \"\u75E8\",\n  \"\u7647\": \"\u75EB\",\n  \"\u7649\": \"\u7605\",\n  \"\u7650\": \"\\ud853\",\n  \"\u7652\": \"\u6108\",\n  \"\u7658\": \"\u75A0\",\n  \"\u765F\": \"\u762A\",\n  \"\u7661\": \"\u75F4\",\n  \"\u7662\": \"\u75D2\",\n  \"\u7664\": \"\u7596\",\n  \"\u7665\": \"\u75C7\",\n  \"\u7667\": \"\u75AC\",\n  \"\u7669\": \"\u765E\",\n  \"\u766C\": \"\u7663\",\n  \"\u766D\": \"\u763F\",\n  \"\u766E\": \"\u763E\",\n  \"\u7670\": \"\u75C8\",\n  \"\u7671\": \"\u762B\",\n  \"\u7672\": \"\u766B\",\n  \"\u767C\": \"\u53D1\",\n  \"\u7681\": \"\u7682\",\n  \"\u769A\": \"\u7691\",\n  \"\u769F\": \"\\ud853\",\n  \"\u76B0\": \"\u75B1\",\n  \"\u76B8\": \"\u76B2\",\n  \"\u76BA\": \"\u76B1\",\n  \"\u76C3\": \"\u676F\",\n  \"\u76DC\": \"\u76D7\",\n  \"\u76DE\": \"\u76CF\",\n  \"\u76E1\": \"\u5C3D\",\n  \"\u76E3\": \"\u76D1\",\n  \"\u76E4\": \"\u76D8\",\n  \"\u76E7\": \"\u5362\",\n  \"\u76E8\": \"\\ud86b\",\n  \"\u76EA\": \"\u8361\",\n  \"\u771D\": \"\\ud86b\",\n  \"\u771E\": \"\u771F\",\n  \"\u7725\": \"\u7726\",\n  \"\u773E\": \"\u4F17\",\n  \"\u774D\": \"\\ud86b\",\n  \"\u774F\": \"\u56F0\",\n  \"\u775C\": \"\u7741\",\n  \"\u775E\": \"\u7750\",\n  \"\u7798\": \"\u770D\",\n  \"\u779C\": \"\u4056\",\n  \"\u779E\": \"\u7792\",\n  \"\u77A4\": \"\\ud854\",\n  \"\u77AD\": \"\u77AD\",\n  \"\u77B6\": \"\u7786\",\n  \"\u77BC\": \"\u7751\",\n  \"\u77C7\": \"\u8499\",\n  \"\u77C9\": \"\\ud86b\",\n  \"\u77D1\": \"\\ud86b\",\n  \"\u77D3\": \"\u772C\",\n  \"\u77DA\": \"\u77A9\",\n  \"\u77EF\": \"\u77EB\",\n  \"\u7843\": \"\u6731\",\n  \"\u785C\": \"\u7841\",\n  \"\u7864\": \"\u7856\",\n  \"\u7868\": \"\u7817\",\n  \"\u786F\": \"\u781A\",\n  \"\u7895\": \"\u57FC\",\n  \"\u7899\": \"\\ud855\",\n  \"\u78A9\": \"\u7855\",\n  \"\u78AD\": \"\u7800\",\n  \"\u78B8\": \"\u781C\",\n  \"\u78BA\": \"\u786E\",\n  \"\u78BC\": \"\u7801\",\n  \"\u78BD\": \"\u40B5\",\n  \"\u78D1\": \"\u7859\",\n  \"\u78DA\": \"\u7816\",\n  \"\u78E0\": \"\u7875\",\n  \"\u78E3\": \"\u789C\",\n  \"\u78E7\": \"\u789B\",\n  \"\u78EF\": \"\u77F6\",\n  \"\u78FD\": \"\u7857\",\n  \"\u78FE\": \"\u40C5\",\n  \"\u7904\": \"\u785A\",\n  \"\u7906\": \"\u7877\",\n  \"\u790E\": \"\u7840\",\n  \"\u7910\": \"\\ud871\",\n  \"\u7912\": \"\\ud855\",\n  \"\u7919\": \"\u788D\",\n  \"\u7926\": \"\u77FF\",\n  \"\u792A\": \"\u783A\",\n  \"\u792B\": \"\u783E\",\n  \"\u792C\": \"\u77FE\",\n  \"\u792E\": \"\\ud86b\",\n  \"\u7931\": \"\u783B\",\n  \"\u7947\": \"\u7947\",\n  \"\u7955\": \"\u79D8\",\n  \"\u797F\": \"\u7984\",\n  \"\u798D\": \"\u7978\",\n  \"\u798E\": \"\u796F\",\n  \"\u7995\": \"\u794E\",\n  \"\u79A1\": \"\u7943\",\n  \"\u79A6\": \"\u5FA1\",\n  \"\u79AA\": \"\u7985\",\n  \"\u79AE\": \"\u793C\",\n  \"\u79B0\": \"\u7962\",\n  \"\u79B1\": \"\u7977\",\n  \"\u79BF\": \"\u79C3\",\n  \"\u79C8\": \"\u7C7C\",\n  \"\u7A05\": \"\u7A0E\",\n  \"\u7A08\": \"\u79C6\",\n  \"\u7A0F\": \"\u4149\",\n  \"\u7A1C\": \"\u68F1\",\n  \"\u7A1F\": \"\u7980\",\n  \"\u7A2E\": \"\u79CD\",\n  \"\u7A31\": \"\u79F0\",\n  \"\u7A40\": \"\u8C37\",\n  \"\u7A47\": \"\u415F\",\n  \"\u7A4C\": \"\u7A23\",\n  \"\u7A4D\": \"\u79EF\",\n  \"\u7A4E\": \"\u9896\",\n  \"\u7A60\": \"\u79FE\",\n  \"\u7A61\": \"\u7A51\",\n  \"\u7A62\": \"\u79FD\",\n  \"\u7A69\": \"\u7A33\",\n  \"\u7A6B\": \"\u83B7\",\n  \"\u7A6D\": \"\u7A5E\",\n  \"\u7AA9\": \"\u7A9D\",\n  \"\u7AAA\": \"\u6D3C\",\n  \"\u7AAE\": \"\u7A77\",\n  \"\u7AAF\": \"\u7A91\",\n  \"\u7AB5\": \"\u7A8E\",\n  \"\u7AB6\": \"\u7AAD\",\n  \"\u7ABA\": \"\u7AA5\",\n  \"\u7AC4\": \"\u7A9C\",\n  \"\u7AC5\": \"\u7A8D\",\n  \"\u7AC7\": \"\u7AA6\",\n  \"\u7AC8\": \"\u7076\",\n  \"\u7ACA\": \"\u7A83\",\n  \"\u7ADA\": \"\\ud856\",\n  \"\u7AEA\": \"\u7AD6\",\n  \"\u7AF1\": \"\\ud86c\",\n  \"\u7AF6\": \"\u7ADE\",\n  \"\u7B46\": \"\u7B14\",\n  \"\u7B4D\": \"\u7B0B\",\n  \"\u7B67\": \"\u7B15\",\n  \"\u7B74\": \"\u41F2\",\n  \"\u7B87\": \"\u4E2A\",\n  \"\u7B8B\": \"\u7B3A\",\n  \"\u7B8F\": \"\u7B5D\",\n  \"\u7BC0\": \"\u8282\",\n  \"\u7BC4\": \"\u8303\",\n  \"\u7BC9\": \"\u7B51\",\n  \"\u7BCB\": \"\u7BA7\",\n  \"\u7BD4\": \"\u7B7C\",\n  \"\u7BD8\": \"\\ud856\",\n  \"\u7BE0\": \"\u7B7F\",\n  \"\u7BE2\": \"\\ud871\",\n  \"\u7BE4\": \"\u7B03\",\n  \"\u7BE9\": \"\u7B5B\",\n  \"\u7BF3\": \"\u7B5A\",\n  \"\u7BF8\": \"\\ud856\",\n  \"\u7C00\": \"\u7BA6\",\n  \"\u7C02\": \"\\ud86c\",\n  \"\u7C0D\": \"\u7BD3\",\n  \"\u7C11\": \"\u84D1\",\n  \"\u7C1E\": \"\u7BAA\",\n  \"\u7C21\": \"\u7B80\",\n  \"\u7C22\": \"\\ud86c\",\n  \"\u7C23\": \"\u7BD1\",\n  \"\u7C2B\": \"\u7BAB\",\n  \"\u7C39\": \"\u7B5C\",\n  \"\u7C3D\": \"\u7B7E\",\n  \"\u7C3E\": \"\u5E18\",\n  \"\u7C43\": \"\u7BEE\",\n  \"\u7C45\": \"\\ud856\",\n  \"\u7C4B\": \"\\ud856\",\n  \"\u7C4C\": \"\u7B79\",\n  \"\u7C54\": \"\u4264\",\n  \"\u7C59\": \"\u7B93\",\n  \"\u7C5B\": \"\u7BEF\",\n  \"\u7C5C\": \"\u7BA8\",\n  \"\u7C5F\": \"\u7C41\",\n  \"\u7C60\": \"\u7B3C\",\n  \"\u7C64\": \"\u7B7E\",\n  \"\u7C69\": \"\u7B3E\",\n  \"\u7C6A\": \"\u7C16\",\n  \"\u7C6C\": \"\u7BF1\",\n  \"\u7C6E\": \"\u7BA9\",\n  \"\u7C72\": \"\u5401\",\n  \"\u7CB5\": \"\u7CA4\",\n  \"\u7CC9\": \"\u7CBD\",\n  \"\u7CDD\": \"\u7CC1\",\n  \"\u7CDE\": \"\u7CAA\",\n  \"\u7CE7\": \"\u7CAE\",\n  \"\u7CF0\": \"\u56E2\",\n  \"\u7CF2\": \"\u7C9D\",\n  \"\u7CF4\": \"\u7C74\",\n  \"\u7CF6\": \"\u7C9C\",\n  \"\u7CF9\": \"\u7E9F\",\n  \"\u7CFA\": \"\\ud86c\",\n  \"\u7CFE\": \"\u7EA0\",\n  \"\u7D00\": \"\u7EAA\",\n  \"\u7D02\": \"\u7EA3\",\n  \"\u7D03\": \"\\ud871\",\n  \"\u7D04\": \"\u7EA6\",\n  \"\u7D05\": \"\u7EA2\",\n  \"\u7D06\": \"\u7EA1\",\n  \"\u7D07\": \"\u7EA5\",\n  \"\u7D08\": \"\u7EA8\",\n  \"\u7D09\": \"\u7EAB\",\n  \"\u7D0B\": \"\u7EB9\",\n  \"\u7D0D\": \"\u7EB3\",\n  \"\u7D10\": \"\u7EBD\",\n  \"\u7D13\": \"\u7EBE\",\n  \"\u7D14\": \"\u7EAF\",\n  \"\u7D15\": \"\u7EB0\",\n  \"\u7D16\": \"\u7EBC\",\n  \"\u7D17\": \"\u7EB1\",\n  \"\u7D18\": \"\u7EAE\",\n  \"\u7D19\": \"\u7EB8\",\n  \"\u7D1A\": \"\u7EA7\",\n  \"\u7D1B\": \"\u7EB7\",\n  \"\u7D1C\": \"\u7EAD\",\n  \"\u7D1D\": \"\u7EB4\",\n  \"\u7D1E\": \"\\ud871\",\n  \"\u7D1F\": \"\\ud86c\",\n  \"\u7D21\": \"\u7EBA\",\n  \"\u7D2C\": \"\u4337\",\n  \"\u7D2E\": \"\u624E\",\n  \"\u7D30\": \"\u7EC6\",\n  \"\u7D31\": \"\u7EC2\",\n  \"\u7D32\": \"\u7EC1\",\n  \"\u7D33\": \"\u7EC5\",\n  \"\u7D35\": \"\u7EBB\",\n  \"\u7D39\": \"\u7ECD\",\n  \"\u7D3A\": \"\u7EC0\",\n  \"\u7D3C\": \"\u7ECB\",\n  \"\u7D3F\": \"\u7ED0\",\n  \"\u7D40\": \"\u7ECC\",\n  \"\u7D41\": \"\\ud86c\",\n  \"\u7D42\": \"\u7EC8\",\n  \"\u7D43\": \"\u5F26\",\n  \"\u7D44\": \"\u7EC4\",\n  \"\u7D45\": \"\u4339\",\n  \"\u7D46\": \"\u7ECA\",\n  \"\u7D4D\": \"\\ud86d\",\n  \"\u7D4E\": \"\u7ED7\",\n  \"\u7D50\": \"\u7ED3\",\n  \"\u7D55\": \"\u7EDD\",\n  \"\u7D59\": \"\\ud86c\",\n  \"\u7D5B\": \"\u7EE6\",\n  \"\u7D5D\": \"\u7ED4\",\n  \"\u7D5E\": \"\u7EDE\",\n  \"\u7D61\": \"\u7EDC\",\n  \"\u7D62\": \"\u7EDA\",\n  \"\u7D65\": \"\\ud86c\",\n  \"\u7D66\": \"\u7ED9\",\n  \"\u7D67\": \"\\ud86c\",\n  \"\u7D68\": \"\u7ED2\",\n  \"\u7D6A\": \"\\ud871\",\n  \"\u7D70\": \"\u7ED6\",\n  \"\u7D71\": \"\u7EDF\",\n  \"\u7D72\": \"\u4E1D\",\n  \"\u7D73\": \"\u7EDB\",\n  \"\u7D76\": \"\u7EDD\",\n  \"\u7D79\": \"\u7EE2\",\n  \"\u7D7A\": \"\\ud86c\",\n  \"\u7D80\": \"\\ud858\",\n  \"\u7D81\": \"\u7ED1\",\n  \"\u7D83\": \"\u7EE1\",\n  \"\u7D84\": \"\\ud871\",\n  \"\u7D86\": \"\u7EE0\",\n  \"\u7D87\": \"\\ud858\",\n  \"\u7D88\": \"\u7EE8\",\n  \"\u7D89\": \"\u7EE3\",\n  \"\u7D8B\": \"\\ud86d\",\n  \"\u7D8C\": \"\u7EE4\",\n  \"\u7D8E\": \"\\ud871\",\n  \"\u7D8F\": \"\u7EE5\",\n  \"\u7D90\": \"\u433C\",\n  \"\u7D91\": \"\u6346\",\n  \"\u7D93\": \"\u7ECF\",\n  \"\u7D96\": \"\\ud86c\",\n  \"\u7D9C\": \"\u7EFC\",\n  \"\u7D9D\": \"\\ud871\",\n  \"\u7D9E\": \"\u7F0D\",\n  \"\u7D9F\": \"\\ud86c\",\n  \"\u7DA0\": \"\u7EFF\",\n  \"\u7DA1\": \"\\ud86d\",\n  \"\u7DA2\": \"\u7EF8\",\n  \"\u7DA3\": \"\u7EFB\",\n  \"\u7DA7\": \"\\ud871\",\n  \"\u7DAA\": \"\\ud871\",\n  \"\u7DAB\": \"\u7EBF\",\n  \"\u7DAC\": \"\u7EF6\",\n  \"\u7DAD\": \"\u7EF4\",\n  \"\u7DAF\": \"\u7EF9\",\n  \"\u7DB0\": \"\u7EFE\",\n  \"\u7DB1\": \"\u7EB2\",\n  \"\u7DB2\": \"\u7F51\",\n  \"\u7DB3\": \"\u7EF7\",\n  \"\u7DB4\": \"\u7F00\",\n  \"\u7DB5\": \"\u5F69\",\n  \"\u7DB8\": \"\u7EB6\",\n  \"\u7DB9\": \"\u7EFA\",\n  \"\u7DBA\": \"\u7EEE\",\n  \"\u7DBB\": \"\u7EFD\",\n  \"\u7DBD\": \"\u7EF0\",\n  \"\u7DBE\": \"\u7EEB\",\n  \"\u7DBF\": \"\u7EF5\",\n  \"\u7DC4\": \"\u7EF2\",\n  \"\u7DC7\": \"\u7F01\",\n  \"\u7DCA\": \"\u7D27\",\n  \"\u7DCB\": \"\u7EEF\",\n  \"\u7DCD\": \"\\ud858\",\n  \"\u7DD1\": \"\u7EFF\",\n  \"\u7DD2\": \"\u7EEA\",\n  \"\u7DD3\": \"\u7EEC\",\n  \"\u7DD4\": \"\u7EF1\",\n  \"\u7DD7\": \"\u7F03\",\n  \"\u7DD8\": \"\u7F04\",\n  \"\u7DD9\": \"\u7F02\",\n  \"\u7DDA\": \"\u7EBF\",\n  \"\u7DDD\": \"\u7F09\",\n  \"\u7DDE\": \"\u7F0E\",\n  \"\u7DDF\": \"\\ud86d\",\n  \"\u7DE0\": \"\u7F14\",\n  \"\u7DE1\": \"\u7F17\",\n  \"\u7DE3\": \"\u7F18\",\n  \"\u7DE4\": \"\\ud86c\",\n  \"\u7DE6\": \"\u7F0C\",\n  \"\u7DE8\": \"\u7F16\",\n  \"\u7DE9\": \"\u7F13\",\n  \"\u7DEC\": \"\u7F05\",\n  \"\u7DEE\": \"\\ud86c\",\n  \"\u7DEF\": \"\u7EAC\",\n  \"\u7DF0\": \"\\ud858\",\n  \"\u7DF1\": \"\u7F11\",\n  \"\u7DF2\": \"\u7F08\",\n  \"\u7DF4\": \"\u7EC3\",\n  \"\u7DF6\": \"\u7F0F\",\n  \"\u7DF7\": \"\\ud858\",\n  \"\u7DF8\": \"\\ud858\",\n  \"\u7DF9\": \"\u7F07\",\n  \"\u7DFB\": \"\u81F4\",\n  \"\u7DFC\": \"\u7F0A\",\n  \"\u7E08\": \"\u8426\",\n  \"\u7E09\": \"\u7F19\",\n  \"\u7E0A\": \"\u7F22\",\n  \"\u7E0B\": \"\u7F12\",\n  \"\u7E0D\": \"\\ud86c\",\n  \"\u7E0E\": \"\\ud858\",\n  \"\u7E10\": \"\u7EC9\",\n  \"\u7E11\": \"\u7F23\",\n  \"\u7E15\": \"\u7F0A\",\n  \"\u7E17\": \"\u7F1E\",\n  \"\u7E1B\": \"\u7F1A\",\n  \"\u7E1D\": \"\u7F1C\",\n  \"\u7E1E\": \"\u7F1F\",\n  \"\u7E1F\": \"\u7F1B\",\n  \"\u7E23\": \"\u53BF\",\n  \"\u7E27\": \"\u7EE6\",\n  \"\u7E2B\": \"\u7F1D\",\n  \"\u7E2C\": \"\\ud858\",\n  \"\u7E2D\": \"\u7F21\",\n  \"\u7E2E\": \"\u7F29\",\n  \"\u7E2F\": \"\\ud871\",\n  \"\u7E30\": \"\\ud86c\",\n  \"\u7E31\": \"\u7EB5\",\n  \"\u7E32\": \"\u7F27\",\n  \"\u7E33\": \"\u4338\",\n  \"\u7E34\": \"\u7EA4\",\n  \"\u7E35\": \"\u7F26\",\n  \"\u7E36\": \"\u7D77\",\n  \"\u7E37\": \"\u7F15\",\n  \"\u7E38\": \"\\ud86c\",\n  \"\u7E39\": \"\u7F25\",\n  \"\u7E3A\": \"\\ud858\",\n  \"\u7E3D\": \"\u603B\",\n  \"\u7E3E\": \"\u7EE9\",\n  \"\u7E42\": \"\\ud86c\",\n  \"\u7E43\": \"\u7EF7\",\n  \"\u7E45\": \"\u7F2B\",\n  \"\u7E46\": \"\u7F2A\",\n  \"\u7E48\": \"\\ud86c\",\n  \"\u7E4F\": \"\\ud858\",\n  \"\u7E50\": \"\\ud882\",\n  \"\u7E52\": \"\u7F2F\",\n  \"\u7E53\": \"\\ud858\",\n  \"\u7E54\": \"\u7EC7\",\n  \"\u7E55\": \"\u7F2E\",\n  \"\u7E5A\": \"\u7F2D\",\n  \"\u7E5E\": \"\u7ED5\",\n  \"\u7E5F\": \"\\ud858\",\n  \"\u7E61\": \"\u7EE3\",\n  \"\u7E62\": \"\u7F0B\",\n  \"\u7E68\": \"\\ud86c\",\n  \"\u7E69\": \"\u7EF3\",\n  \"\u7E6A\": \"\u7ED8\",\n  \"\u7E6B\": \"\u7CFB\",\n  \"\u7E6C\": \"\\ud86c\",\n  \"\u7E6D\": \"\u8327\",\n  \"\u7E6E\": \"\u7F30\",\n  \"\u7E6F\": \"\u7F33\",\n  \"\u7E70\": \"\u7F32\",\n  \"\u7E73\": \"\u7F34\",\n  \"\u7E76\": \"\\ud86c\",\n  \"\u7E77\": \"\\ud86c\",\n  \"\u7E78\": \"\u4341\",\n  \"\u7E79\": \"\u7ECE\",\n  \"\u7E7B\": \"\\ud858\",\n  \"\u7E7C\": \"\u7EE7\",\n  \"\u7E7D\": \"\u7F24\",\n  \"\u7E7E\": \"\u7F31\",\n  \"\u7E7F\": \"\u4340\",\n  \"\u7E81\": \"\\ud86c\",\n  \"\u7E86\": \"\\ud871\",\n  \"\u7E87\": \"\u98A3\",\n  \"\u7E88\": \"\u7F2C\",\n  \"\u7E8A\": \"\u7EA9\",\n  \"\u7E8C\": \"\u7EED\",\n  \"\u7E8D\": \"\u7D2F\",\n  \"\u7E8F\": \"\u7F20\",\n  \"\u7E93\": \"\u7F28\",\n  \"\u7E94\": \"\u624D\",\n  \"\u7E95\": \"\\ud871\",\n  \"\u7E96\": \"\u7EA4\",\n  \"\u7E97\": \"\\ud86c\",\n  \"\u7E98\": \"\u7F35\",\n  \"\u7E9A\": \"\\ud86c\",\n  \"\u7E9C\": \"\u7F06\",\n  \"\u7F3D\": \"\u94B5\",\n  \"\u7F43\": \"\u44E8\",\n  \"\u7F48\": \"\u575B\",\n  \"\u7F4C\": \"\u7F42\",\n  \"\u7F4E\": \"\u575B\",\n  \"\u7F70\": \"\u7F5A\",\n  \"\u7F75\": \"\u9A82\",\n  \"\u7F77\": \"\u7F62\",\n  \"\u7F85\": \"\u7F57\",\n  \"\u7F86\": \"\u7F74\",\n  \"\u7F88\": \"\u7F81\",\n  \"\u7F8B\": \"\u8288\",\n  \"\u7FA3\": \"\u7FA4\",\n  \"\u7FA5\": \"\u7F9F\",\n  \"\u7FA8\": \"\u7FA1\",\n  \"\u7FA9\": \"\u4E49\",\n  \"\u7FB5\": \"\\ud86c\",\n  \"\u7FB6\": \"\u81BB\",\n  \"\u7FD2\": \"\u4E60\",\n  \"\u7FEB\": \"\u73A9\",\n  \"\u7FEC\": \"\u7FDA\",\n  \"\u7FF9\": \"\u7FD8\",\n  \"\u7FFD\": \"\u7FD9\",\n  \"\u802C\": \"\u8027\",\n  \"\u802E\": \"\u8022\",\n  \"\u8056\": \"\u5723\",\n  \"\u805E\": \"\u95FB\",\n  \"\u806F\": \"\u8054\",\n  \"\u8070\": \"\u806A\",\n  \"\u8072\": \"\u58F0\",\n  \"\u8073\": \"\u8038\",\n  \"\u8075\": \"\u8069\",\n  \"\u8076\": \"\u8042\",\n  \"\u8077\": \"\u804C\",\n  \"\u8079\": \"\u804D\",\n  \"\u807B\": \"\\ud86c\",\n  \"\u807D\": \"\u542C\",\n  \"\u807E\": \"\u804B\",\n  \"\u8085\": \"\u8083\",\n  \"\u8105\": \"\u80C1\",\n  \"\u8108\": \"\u8109\",\n  \"\u811B\": \"\u80EB\",\n  \"\u8123\": \"\u5507\",\n  \"\u8125\": \"\\ud84c\",\n  \"\u8129\": \"\u4FEE\",\n  \"\u812B\": \"\u8131\",\n  \"\u8139\": \"\u80C0\",\n  \"\u814E\": \"\u80BE\",\n  \"\u8156\": \"\u80E8\",\n  \"\u8161\": \"\u8136\",\n  \"\u8166\": \"\u8111\",\n  \"\u816A\": \"\\ud84c\",\n  \"\u816B\": \"\u80BF\",\n  \"\u8173\": \"\u811A\",\n  \"\u8178\": \"\u80A0\",\n  \"\u8183\": \"\u817D\",\n  \"\u8195\": \"\u8158\",\n  \"\u819A\": \"\u80A4\",\n  \"\u819E\": \"\u43DD\",\n  \"\u81A0\": \"\u80F6\",\n  \"\u81A2\": \"\\ud859\",\n  \"\u81A9\": \"\u817B\",\n  \"\u81B9\": \"\\ud86b\",\n  \"\u81BD\": \"\u80C6\",\n  \"\u81BE\": \"\u810D\",\n  \"\u81BF\": \"\u8113\",\n  \"\u81C9\": \"\u8138\",\n  \"\u81CD\": \"\u8110\",\n  \"\u81CF\": \"\u8191\",\n  \"\u81D7\": \"\\ud84c\",\n  \"\u81D8\": \"\u814A\",\n  \"\u81DA\": \"\u80EA\",\n  \"\u81DF\": \"\u810F\",\n  \"\u81E0\": \"\u8114\",\n  \"\u81E2\": \"\u81DC\",\n  \"\u81E5\": \"\u5367\",\n  \"\u81E8\": \"\u4E34\",\n  \"\u81FA\": \"\u53F0\",\n  \"\u8207\": \"\u4E0E\",\n  \"\u8208\": \"\u5174\",\n  \"\u8209\": \"\u4E3E\",\n  \"\u820A\": \"\u65E7\",\n  \"\u8218\": \"\u9986\",\n  \"\u8259\": \"\u8231\",\n  \"\u8263\": \"\\ud86c\",\n  \"\u8264\": \"\u8223\",\n  \"\u8266\": \"\u8230\",\n  \"\u826B\": \"\u823B\",\n  \"\u8271\": \"\u8270\",\n  \"\u8277\": \"\u8273\",\n  \"\u82BB\": \"\u520D\",\n  \"\u82E7\": \"\u82CE\",\n  \"\u8332\": \"\u5179\",\n  \"\u834A\": \"\u8346\",\n  \"\u838A\": \"\u5E84\",\n  \"\u8396\": \"\u830E\",\n  \"\u83A2\": \"\u835A\",\n  \"\u83A7\": \"\u82CB\",\n  \"\u83D5\": \"\\ud883\",\n  \"\u83EF\": \"\u534E\",\n  \"\u83F4\": \"\u5EB5\",\n  \"\u83F8\": \"\u70DF\",\n  \"\u8407\": \"\u82CC\",\n  \"\u840A\": \"\u83B1\",\n  \"\u842C\": \"\u4E07\",\n  \"\u8434\": \"\u835D\",\n  \"\u8435\": \"\u83B4\",\n  \"\u8449\": \"\u53F6\",\n  \"\u8452\": \"\u836D\",\n  \"\u845D\": \"\\ud86c\",\n  \"\u8464\": \"\u836E\",\n  \"\u8466\": \"\u82C7\",\n  \"\u846F\": \"\u836F\",\n  \"\u8477\": \"\u8364\",\n  \"\u848D\": \"\\ud86c\",\n  \"\u8490\": \"\u641C\",\n  \"\u8493\": \"\u83BC\",\n  \"\u8494\": \"\u83B3\",\n  \"\u8495\": \"\u8480\",\n  \"\u849E\": \"\u8385\",\n  \"\u84AD\": \"\\ud86c\",\n  \"\u84BC\": \"\u82CD\",\n  \"\u84C0\": \"\u836A\",\n  \"\u84C6\": \"\u5E2D\",\n  \"\u84CB\": \"\u76D6\",\n  \"\u84E7\": \"\\ud85b\",\n  \"\u84EE\": \"\u83B2\",\n  \"\u84EF\": \"\u82C1\",\n  \"\u84F4\": \"\u83BC\",\n  \"\u84FD\": \"\u835C\",\n  \"\u8504\": \"\\ud871\",\n  \"\u8514\": \"\u535C\",\n  \"\u8518\": \"\u53C2\",\n  \"\u851E\": \"\u848C\",\n  \"\u8523\": \"\u848B\",\n  \"\u8525\": \"\u8471\",\n  \"\u8526\": \"\u8311\",\n  \"\u852D\": \"\u836B\",\n  \"\u852F\": \"\\ud86c\",\n  \"\u853F\": \"\\ud86c\",\n  \"\u8541\": \"\u8368\",\n  \"\u8546\": \"\u8487\",\n  \"\u854E\": \"\u835E\",\n  \"\u8552\": \"\u836C\",\n  \"\u8553\": \"\u82B8\",\n  \"\u8555\": \"\u83B8\",\n  \"\u8558\": \"\u835B\",\n  \"\u855D\": \"\\ud86c\",\n  \"\u8562\": \"\u8489\",\n  \"\u8569\": \"\u8361\",\n  \"\u856A\": \"\u829C\",\n  \"\u856D\": \"\u8427\",\n  \"\u8573\": \"\\ud86c\",\n  \"\u8577\": \"\u84E3\",\n  \"\u857D\": \"\\ud86c\",\n  \"\u8580\": \"\u8570\",\n  \"\u8586\": \"\\ud86c\",\n  \"\u8588\": \"\u835F\",\n  \"\u858A\": \"\u84DF\",\n  \"\u858C\": \"\u8297\",\n  \"\u8591\": \"\u59DC\",\n  \"\u8594\": \"\u8537\",\n  \"\u8598\": \"\u8359\",\n  \"\u859F\": \"\u83B6\",\n  \"\u85A6\": \"\u8350\",\n  \"\u85A9\": \"\u8428\",\n  \"\u85B3\": \"\u44D5\",\n  \"\u85B4\": \"\u82E7\",\n  \"\u85B5\": \"\u44D3\",\n  \"\u85B9\": \"\u82D4\",\n  \"\u85BA\": \"\u8360\",\n  \"\u85C9\": \"\u85C9\",\n  \"\u85CD\": \"\u84DD\",\n  \"\u85CE\": \"\u8369\",\n  \"\u85DD\": \"\u827A\",\n  \"\u85E5\": \"\u836F\",\n  \"\u85EA\": \"\u85AE\",\n  \"\u85ED\": \"\u44D6\",\n  \"\u85F4\": \"\u8574\",\n  \"\u85F6\": \"\u82C8\",\n  \"\u85F7\": \"\\ud86c\",\n  \"\u85F9\": \"\u853C\",\n  \"\u85FA\": \"\u853A\",\n  \"\u8600\": \"\u841A\",\n  \"\u8604\": \"\u8572\",\n  \"\u8606\": \"\u82A6\",\n  \"\u8607\": \"\u82CF\",\n  \"\u860A\": \"\u8574\",\n  \"\u860B\": \"\u82F9\",\n  \"\u861A\": \"\u85D3\",\n  \"\u861E\": \"\u8539\",\n  \"\u861F\": \"\\ud85b\",\n  \"\u8622\": \"\u830F\",\n  \"\u862D\": \"\u5170\",\n  \"\u863A\": \"\u84E0\",\n  \"\u863F\": \"\u841D\",\n  \"\u8646\": \"\u8502\",\n  \"\u8649\": \"\\ud871\",\n  \"\u8655\": \"\u5904\",\n  \"\u865B\": \"\u865A\",\n  \"\u865C\": \"\u864F\",\n  \"\u865F\": \"\u53F7\",\n  \"\u8667\": \"\u4E8F\",\n  \"\u866F\": \"\u866C\",\n  \"\u86FA\": \"\u86F1\",\n  \"\u86FB\": \"\u8715\",\n  \"\u8706\": \"\u86AC\",\n  \"\u8740\": \"\\ud871\",\n  \"\u8755\": \"\u8680\",\n  \"\u875F\": \"\u732C\",\n  \"\u8766\": \"\u867E\",\n  \"\u8768\": \"\u8671\",\n  \"\u8778\": \"\u8717\",\n  \"\u8784\": \"\u86F3\",\n  \"\u879E\": \"\u8682\",\n  \"\u87A2\": \"\u8424\",\n  \"\u87AE\": \"\u45D6\",\n  \"\u87BB\": \"\u877C\",\n  \"\u87BF\": \"\u8780\",\n  \"\u87C2\": \"\\ud86c\",\n  \"\u87C4\": \"\u86F0\",\n  \"\u87C8\": \"\u8748\",\n  \"\u87CE\": \"\u87A8\",\n  \"\u87D8\": \"\\ud86c\",\n  \"\u87DC\": \"\\ud86c\",\n  \"\u87E3\": \"\u866E\",\n  \"\u87EC\": \"\u8749\",\n  \"\u87EF\": \"\u86F2\",\n  \"\u87F2\": \"\u866B\",\n  \"\u87F3\": \"\\ud86c\",\n  \"\u87F6\": \"\u86CF\",\n  \"\u87FB\": \"\u8681\",\n  \"\u8800\": \"\\ud85c\",\n  \"\u8801\": \"\u8683\",\n  \"\u8805\": \"\u8747\",\n  \"\u8806\": \"\u867F\",\n  \"\u880D\": \"\u874E\",\n  \"\u8810\": \"\u86F4\",\n  \"\u8811\": \"\u877E\",\n  \"\u8814\": \"\u869D\",\n  \"\u8819\": \"\\ud85c\",\n  \"\u881F\": \"\u8721\",\n  \"\u8823\": \"\u86CE\",\n  \"\u8826\": \"\\ud86c\",\n  \"\u8828\": \"\u87CF\",\n  \"\u8831\": \"\u86CA\",\n  \"\u8836\": \"\u8695\",\n  \"\u883B\": \"\u86EE\",\n  \"\u883E\": \"\\ud85d\",\n  \"\u8846\": \"\u4F17\",\n  \"\u884A\": \"\u8511\",\n  \"\u8853\": \"\u672F\",\n  \"\u8855\": \"\u540C\",\n  \"\u885A\": \"\u80E1\",\n  \"\u885B\": \"\u536B\",\n  \"\u885D\": \"\u51B2\",\n  \"\u8879\": \"\u8879\",\n  \"\u889E\": \"\u886E\",\n  \"\u88CA\": \"\u8885\",\n  \"\u88CF\": \"\u91CC\",\n  \"\u88DC\": \"\u8865\",\n  \"\u88DD\": \"\u88C5\",\n  \"\u88E1\": \"\u91CC\",\n  \"\u88FD\": \"\u5236\",\n  \"\u8907\": \"\u590D\",\n  \"\u890C\": \"\u88C8\",\n  \"\u8918\": \"\u8886\",\n  \"\u8932\": \"\u88E4\",\n  \"\u8933\": \"\u88E2\",\n  \"\u8938\": \"\u891B\",\n  \"\u893B\": \"\u4EB5\",\n  \"\u8940\": \"\\ud86c\",\n  \"\u8947\": \"\u88E5\",\n  \"\u8949\": \"\u88E5\",\n  \"\u894F\": \"\u88AF\",\n  \"\u8953\": \"\\ud86c\",\n  \"\u8956\": \"\u8884\",\n  \"\u8957\": \"\\ud86c\",\n  \"\u8958\": \"\\ud86c\",\n  \"\u895D\": \"\u88E3\",\n  \"\u8960\": \"\u88C6\",\n  \"\u8964\": \"\u8934\",\n  \"\u896A\": \"\u889C\",\n  \"\u896C\": \"\u6446\",\n  \"\u896F\": \"\u886C\",\n  \"\u8970\": \"\\ud85d\",\n  \"\u8972\": \"\u88AD\",\n  \"\u8974\": \"\u8955\",\n  \"\u8975\": \"\\ud86c\",\n  \"\u8986\": \"\u8986\",\n  \"\u8988\": \"\u6838\",\n  \"\u898B\": \"\u89C1\",\n  \"\u898E\": \"\u89C3\",\n  \"\u898F\": \"\u89C4\",\n  \"\u8993\": \"\u89C5\",\n  \"\u8996\": \"\u89C6\",\n  \"\u8998\": \"\u89C7\",\n  \"\u899B\": \"\\ud86c\",\n  \"\u89A1\": \"\u89CB\",\n  \"\u89A5\": \"\u89CD\",\n  \"\u89A6\": \"\u89CE\",\n  \"\u89AA\": \"\u4EB2\",\n  \"\u89AC\": \"\u89CA\",\n  \"\u89AF\": \"\u89CF\",\n  \"\u89B2\": \"\u89D0\",\n  \"\u89B7\": \"\u89D1\",\n  \"\u89B9\": \"\\ud86c\",\n  \"\u89BA\": \"\u89C9\",\n  \"\u89BC\": \"\\ud86c\",\n  \"\u89BD\": \"\u89C8\",\n  \"\u89BF\": \"\u89CC\",\n  \"\u89C0\": \"\u89C2\",\n  \"\u89F4\": \"\u89DE\",\n  \"\u89F6\": \"\u89EF\",\n  \"\u89F8\": \"\u89E6\",\n  \"\u8A01\": \"\u8BA0\",\n  \"\u8A02\": \"\u8BA2\",\n  \"\u8A03\": \"\u8BA3\",\n  \"\u8A08\": \"\u8BA1\",\n  \"\u8A0A\": \"\u8BAF\",\n  \"\u8A0C\": \"\u8BA7\",\n  \"\u8A0E\": \"\u8BA8\",\n  \"\u8A0F\": \"\\ud872\",\n  \"\u8A10\": \"\u8BA6\",\n  \"\u8A11\": \"\\ud86c\",\n  \"\u8A12\": \"\u8BB1\",\n  \"\u8A13\": \"\u8BAD\",\n  \"\u8A15\": \"\u8BAA\",\n  \"\u8A16\": \"\u8BAB\",\n  \"\u8A17\": \"\u6258\",\n  \"\u8A18\": \"\u8BB0\",\n  \"\u8A1B\": \"\u8BB9\",\n  \"\u8A1C\": \"\\ud86c\",\n  \"\u8A1D\": \"\u8BB6\",\n  \"\u8A1E\": \"\\ud86c\",\n  \"\u8A1F\": \"\u8BBC\",\n  \"\u8A22\": \"\u4723\",\n  \"\u8A23\": \"\u8BC0\",\n  \"\u8A25\": \"\u8BB7\",\n  \"\u8A28\": \"\\ud86d\",\n  \"\u8A29\": \"\u8BBB\",\n  \"\u8A2A\": \"\u8BBF\",\n  \"\u8A2D\": \"\u8BBE\",\n  \"\u8A31\": \"\u8BB8\",\n  \"\u8A34\": \"\u8BC9\",\n  \"\u8A36\": \"\u8BC3\",\n  \"\u8A3A\": \"\u8BCA\",\n  \"\u8A3B\": \"\u6CE8\",\n  \"\u8A3C\": \"\u8BC1\",\n  \"\u8A40\": \"\\ud85e\",\n  \"\u8A41\": \"\u8BC2\",\n  \"\u8A46\": \"\u8BCB\",\n  \"\u8A4A\": \"\\ud86d\",\n  \"\u8A4E\": \"\u8BB5\",\n  \"\u8A50\": \"\u8BC8\",\n  \"\u8A51\": \"\\ud86c\",\n  \"\u8A52\": \"\u8BD2\",\n  \"\u8A53\": \"\\ud86c\",\n  \"\u8A54\": \"\u8BCF\",\n  \"\u8A55\": \"\u8BC4\",\n  \"\u8A56\": \"\u8BD0\",\n  \"\u8A57\": \"\u8BC7\",\n  \"\u8A58\": \"\u8BCE\",\n  \"\u8A5B\": \"\u8BC5\",\n  \"\u8A5D\": \"\\ud872\",\n  \"\u8A5E\": \"\u8BCD\",\n  \"\u8A60\": \"\u548F\",\n  \"\u8A61\": \"\u8BE9\",\n  \"\u8A62\": \"\u8BE2\",\n  \"\u8A63\": \"\u8BE3\",\n  \"\u8A66\": \"\u8BD5\",\n  \"\u8A69\": \"\u8BD7\",\n  \"\u8A6A\": \"\\ud872\",\n  \"\u8A6B\": \"\u8BE7\",\n  \"\u8A6C\": \"\u8BDF\",\n  \"\u8A6D\": \"\u8BE1\",\n  \"\u8A6E\": \"\u8BE0\",\n  \"\u8A70\": \"\u8BD8\",\n  \"\u8A71\": \"\u8BDD\",\n  \"\u8A72\": \"\u8BE5\",\n  \"\u8A73\": \"\u8BE6\",\n  \"\u8A75\": \"\u8BDC\",\n  \"\u8A77\": \"\\ud86c\",\n  \"\u8A7C\": \"\u8BD9\",\n  \"\u8A7F\": \"\u8BD6\",\n  \"\u8A82\": \"\\ud86c\",\n  \"\u8A84\": \"\u8BD4\",\n  \"\u8A85\": \"\u8BDB\",\n  \"\u8A86\": \"\u8BD3\",\n  \"\u8A87\": \"\u5938\",\n  \"\u8A8B\": \"\\ud86c\",\n  \"\u8A8C\": \"\u5FD7\",\n  \"\u8A8D\": \"\u8BA4\",\n  \"\u8A91\": \"\u8BF3\",\n  \"\u8A92\": \"\u8BF6\",\n  \"\u8A95\": \"\u8BDE\",\n  \"\u8A98\": \"\u8BF1\",\n  \"\u8A9A\": \"\u8BEE\",\n  \"\u8A9E\": \"\u8BED\",\n  \"\u8AA0\": \"\u8BDA\",\n  \"\u8AA1\": \"\u8BEB\",\n  \"\u8AA3\": \"\u8BEC\",\n  \"\u8AA4\": \"\u8BEF\",\n  \"\u8AA5\": \"\u8BF0\",\n  \"\u8AA6\": \"\u8BF5\",\n  \"\u8AA8\": \"\u8BF2\",\n  \"\u8AAA\": \"\u8BF4\",\n  \"\u8AAB\": \"\\ud86c\",\n  \"\u8AAC\": \"\u8BF4\",\n  \"\u8AB0\": \"\u8C01\",\n  \"\u8AB2\": \"\u8BFE\",\n  \"\u8AB3\": \"\\ud86c\",\n  \"\u8AB4\": \"\\ud86d\",\n  \"\u8AB6\": \"\u8C07\",\n  \"\u8AB7\": \"\\ud86c\",\n  \"\u8AB9\": \"\u8BFD\",\n  \"\u8ABA\": \"\\ud86c\",\n  \"\u8ABC\": \"\u8C0A\",\n  \"\u8ABE\": \"\u8A1A\",\n  \"\u8ABF\": \"\u8C03\",\n  \"\u8AC2\": \"\u8C04\",\n  \"\u8AC4\": \"\u8C06\",\n  \"\u8AC7\": \"\u8C08\",\n  \"\u8AC9\": \"\u8BFF\",\n  \"\u8ACB\": \"\u8BF7\",\n  \"\u8ACD\": \"\u8BE4\",\n  \"\u8ACF\": \"\u8BF9\",\n  \"\u8AD1\": \"\u8BFC\",\n  \"\u8AD2\": \"\u8C05\",\n  \"\u8AD3\": \"\\ud872\",\n  \"\u8AD6\": \"\u8BBA\",\n  \"\u8AD7\": \"\u8C02\",\n  \"\u8ADB\": \"\u8C00\",\n  \"\u8ADC\": \"\u8C0D\",\n  \"\u8ADD\": \"\u8C1E\",\n  \"\u8ADE\": \"\u8C1D\",\n  \"\u8ADF\": \"\\ud872\",\n  \"\u8AE1\": \"\u8C25\",\n  \"\u8AE2\": \"\u8BE8\",\n  \"\u8AE3\": \"\\ud86c\",\n  \"\u8AE4\": \"\u8C14\",\n  \"\u8AE5\": \"\\ud86c\",\n  \"\u8AE6\": \"\u8C1B\",\n  \"\u8AE7\": \"\u8C10\",\n  \"\u8AEB\": \"\u8C0F\",\n  \"\u8AED\": \"\u8C15\",\n  \"\u8AEE\": \"\u54A8\",\n  \"\u8AEF\": \"\\ud86c\",\n  \"\u8AF0\": \"\\ud86c\",\n  \"\u8AF1\": \"\u8BB3\",\n  \"\u8AF2\": \"\\ud872\",\n  \"\u8AF3\": \"\u8C19\",\n  \"\u8AF4\": \"\\ud86c\",\n  \"\u8AF6\": \"\u8C0C\",\n  \"\u8AF7\": \"\u8BBD\",\n  \"\u8AF8\": \"\u8BF8\",\n  \"\u8AFA\": \"\u8C1A\",\n  \"\u8AFC\": \"\u8C16\",\n  \"\u8AFE\": \"\u8BFA\",\n  \"\u8B00\": \"\u8C0B\",\n  \"\u8B01\": \"\u8C12\",\n  \"\u8B02\": \"\u8C13\",\n  \"\u8B04\": \"\u8A8A\",\n  \"\u8B05\": \"\u8BCC\",\n  \"\u8B06\": \"\\ud86c\",\n  \"\u8B09\": \"\\ud86c\",\n  \"\u8B0A\": \"\u8C0E\",\n  \"\u8B0E\": \"\u8C1C\",\n  \"\u8B0F\": \"\\ud86c\",\n  \"\u8B10\": \"\u8C27\",\n  \"\u8B14\": \"\u8C11\",\n  \"\u8B16\": \"\u8C21\",\n  \"\u8B17\": \"\u8C24\",\n  \"\u8B19\": \"\u8C26\",\n  \"\u8B1A\": \"\u8C25\",\n  \"\u8B1B\": \"\u8BB2\",\n  \"\u8B1D\": \"\u8C22\",\n  \"\u8B20\": \"\u8C23\",\n  \"\u8B21\": \"\u8C23\",\n  \"\u8B28\": \"\u8C1F\",\n  \"\u8B2B\": \"\u8C2A\",\n  \"\u8B2C\": \"\u8C2C\",\n  \"\u8B2D\": \"\u8C2B\",\n  \"\u8B2F\": \"\\ud86c\",\n  \"\u8B31\": \"\\ud86c\",\n  \"\u8B33\": \"\u8BB4\",\n  \"\u8B38\": \"\\ud86c\",\n  \"\u8B39\": \"\u8C28\",\n  \"\u8B3E\": \"\u8C29\",\n  \"\u8B41\": \"\u54D7\",\n  \"\u8B42\": \"\\ud86d\",\n  \"\u8B45\": \"\\ud883\",\n  \"\u8B46\": \"\\ud86c\",\n  \"\u8B49\": \"\u8BC1\",\n  \"\u8B4A\": \"\\ud86c\",\n  \"\u8B4E\": \"\u8C32\",\n  \"\u8B4F\": \"\u8BA5\",\n  \"\u8B51\": \"\\ud86c\",\n  \"\u8B53\": \"\\ud872\",\n  \"\u8B56\": \"\u8C2E\",\n  \"\u8B58\": \"\u8BC6\",\n  \"\u8B59\": \"\u8C2F\",\n  \"\u8B5A\": \"\u8C2D\",\n  \"\u8B5C\": \"\u8C31\",\n  \"\u8B5E\": \"\\ud86c\",\n  \"\u8B5F\": \"\u566A\",\n  \"\u8B68\": \"\\ud86c\",\n  \"\u8B6B\": \"\u8C35\",\n  \"\u8B6D\": \"\u6BC1\",\n  \"\u8B6F\": \"\u8BD1\",\n  \"\u8B70\": \"\u8BAE\",\n  \"\u8B74\": \"\u8C34\",\n  \"\u8B77\": \"\u62A4\",\n  \"\u8B78\": \"\u8BEA\",\n  \"\u8B7D\": \"\u8A89\",\n  \"\u8B7E\": \"\u8C2B\",\n  \"\u8B80\": \"\u8BFB\",\n  \"\u8B85\": \"\u8C09\",\n  \"\u8B8A\": \"\u53D8\",\n  \"\u8B8B\": \"\u8A5F\",\n  \"\u8B8C\": \"\u4729\",\n  \"\u8B8E\": \"\u96E0\",\n  \"\u8B92\": \"\u8C17\",\n  \"\u8B93\": \"\u8BA9\",\n  \"\u8B95\": \"\u8C30\",\n  \"\u8B96\": \"\u8C36\",\n  \"\u8B9A\": \"\u8D5E\",\n  \"\u8B9C\": \"\u8C20\",\n  \"\u8B9E\": \"\u8C33\",\n  \"\u8C48\": \"\u5C82\",\n  \"\u8C4E\": \"\u7AD6\",\n  \"\u8C50\": \"\u4E30\",\n  \"\u8C54\": \"\u8273\",\n  \"\u8C6C\": \"\u732A\",\n  \"\u8C75\": \"\\ud86c\",\n  \"\u8C76\": \"\u8C6E\",\n  \"\u8C93\": \"\u732B\",\n  \"\u8C97\": \"\\ud86c\",\n  \"\u8C99\": \"\u4759\",\n  \"\u8C9D\": \"\u8D1D\",\n  \"\u8C9E\": \"\u8D1E\",\n  \"\u8C9F\": \"\u8D20\",\n  \"\u8CA0\": \"\u8D1F\",\n  \"\u8CA1\": \"\u8D22\",\n  \"\u8CA2\": \"\u8D21\",\n  \"\u8CA7\": \"\u8D2B\",\n  \"\u8CA8\": \"\u8D27\",\n  \"\u8CA9\": \"\u8D29\",\n  \"\u8CAA\": \"\u8D2A\",\n  \"\u8CAB\": \"\u8D2F\",\n  \"\u8CAC\": \"\u8D23\",\n  \"\u8CAF\": \"\u8D2E\",\n  \"\u8CB0\": \"\u8D33\",\n  \"\u8CB2\": \"\u8D40\",\n  \"\u8CB3\": \"\u8D30\",\n  \"\u8CB4\": \"\u8D35\",\n  \"\u8CB6\": \"\u8D2C\",\n  \"\u8CB7\": \"\u4E70\",\n  \"\u8CB8\": \"\u8D37\",\n  \"\u8CBA\": \"\u8D36\",\n  \"\u8CBB\": \"\u8D39\",\n  \"\u8CBC\": \"\u8D34\",\n  \"\u8CBD\": \"\u8D3B\",\n  \"\u8CBF\": \"\u8D38\",\n  \"\u8CC0\": \"\u8D3A\",\n  \"\u8CC1\": \"\u8D32\",\n  \"\u8CC2\": \"\u8D42\",\n  \"\u8CC3\": \"\u8D41\",\n  \"\u8CC4\": \"\u8D3F\",\n  \"\u8CC5\": \"\u8D45\",\n  \"\u8CC7\": \"\u8D44\",\n  \"\u8CC8\": \"\u8D3E\",\n  \"\u8CCA\": \"\u8D3C\",\n  \"\u8CD1\": \"\u8D48\",\n  \"\u8CD2\": \"\u8D4A\",\n  \"\u8CD3\": \"\u5BBE\",\n  \"\u8CD5\": \"\u8D47\",\n  \"\u8CD9\": \"\u8D52\",\n  \"\u8CDA\": \"\u8D49\",\n  \"\u8CDC\": \"\u8D50\",\n  \"\u8CDD\": \"\\ud86c\",\n  \"\u8CDE\": \"\u8D4F\",\n  \"\u8CDF\": \"\\ud85f\",\n  \"\u8CE0\": \"\u8D54\",\n  \"\u8CE1\": \"\u8D53\",\n  \"\u8CE2\": \"\u8D24\",\n  \"\u8CE3\": \"\u5356\",\n  \"\u8CE4\": \"\u8D31\",\n  \"\u8CE6\": \"\u8D4B\",\n  \"\u8CE7\": \"\u8D55\",\n  \"\u8CEA\": \"\u8D28\",\n  \"\u8CEB\": \"\u8D4D\",\n  \"\u8CEC\": \"\u8D26\",\n  \"\u8CED\": \"\u8D4C\",\n  \"\u8CF0\": \"\u4790\",\n  \"\u8CF4\": \"\u8D56\",\n  \"\u8CF5\": \"\u8D57\",\n  \"\u8CFA\": \"\u8D5A\",\n  \"\u8CFB\": \"\u8D59\",\n  \"\u8CFC\": \"\u8D2D\",\n  \"\u8CFD\": \"\u8D5B\",\n  \"\u8CFE\": \"\u8D5C\",\n  \"\u8D03\": \"\\ud85f\",\n  \"\u8D04\": \"\u8D3D\",\n  \"\u8D05\": \"\u8D58\",\n  \"\u8D07\": \"\u8D5F\",\n  \"\u8D08\": \"\u8D60\",\n  \"\u8D09\": \"\\ud86c\",\n  \"\u8D0A\": \"\u8D5E\",\n  \"\u8D0B\": \"\u8D5D\",\n  \"\u8D0D\": \"\u8D61\",\n  \"\u8D0F\": \"\u8D62\",\n  \"\u8D10\": \"\u8D46\",\n  \"\u8D11\": \"\\ud86c\",\n  \"\u8D13\": \"\u8D43\",\n  \"\u8D14\": \"\u8D51\",\n  \"\u8D16\": \"\u8D4E\",\n  \"\u8D17\": \"\u8D5D\",\n  \"\u8D1A\": \"\\ud86c\",\n  \"\u8D1B\": \"\u8D63\",\n  \"\u8D1C\": \"\u8D43\",\n  \"\u8D6C\": \"\u8D6A\",\n  \"\u8D95\": \"\u8D76\",\n  \"\u8D99\": \"\u8D75\",\n  \"\u8DA8\": \"\u8D8B\",\n  \"\u8DB2\": \"\u8DB1\",\n  \"\u8DE1\": \"\u8FF9\",\n  \"\u8E10\": \"\u8DF5\",\n  \"\u8E30\": \"\u903E\",\n  \"\u8E34\": \"\u8E0A\",\n  \"\u8E4C\": \"\u8DC4\",\n  \"\u8E54\": \"\\ud86c\",\n  \"\u8E55\": \"\u8DF8\",\n  \"\u8E5F\": \"\u8FF9\",\n  \"\u8E60\": \"\u8DD6\",\n  \"\u8E63\": \"\u8E52\",\n  \"\u8E64\": \"\u8E2A\",\n  \"\u8E73\": \"\\ud86c\",\n  \"\u8E7A\": \"\u8DF7\",\n  \"\u8E7B\": \"\\ud86c\",\n  \"\u8E82\": \"\u8DF6\",\n  \"\u8E89\": \"\u8DB8\",\n  \"\u8E8A\": \"\u8E0C\",\n  \"\u8E8B\": \"\u8DFB\",\n  \"\u8E8D\": \"\u8DC3\",\n  \"\u8E8E\": \"\u47E2\",\n  \"\u8E91\": \"\u8E2F\",\n  \"\u8E92\": \"\u8DDE\",\n  \"\u8E93\": \"\u8E2C\",\n  \"\u8E95\": \"\u8E70\",\n  \"\u8E98\": \"\\ud860\",\n  \"\u8E9A\": \"\u8DF9\",\n  \"\u8E9D\": \"\\ud860\",\n  \"\u8EA1\": \"\u8E51\",\n  \"\u8EA5\": \"\u8E7F\",\n  \"\u8EA6\": \"\u8E9C\",\n  \"\u8EAA\": \"\u8E8F\",\n  \"\u8EC0\": \"\u8EAF\",\n  \"\u8EC9\": \"\\ud860\",\n  \"\u8ECA\": \"\u8F66\",\n  \"\u8ECB\": \"\u8F67\",\n  \"\u8ECC\": \"\u8F68\",\n  \"\u8ECD\": \"\u519B\",\n  \"\u8ECF\": \"\\ud86d\",\n  \"\u8ED1\": \"\u8F6A\",\n  \"\u8ED2\": \"\u8F69\",\n  \"\u8ED4\": \"\u8F6B\",\n  \"\u8ED5\": \"\\ud86d\",\n  \"\u8ED7\": \"\\ud861\",\n  \"\u8EDB\": \"\u8F6D\",\n  \"\u8EDC\": \"\\ud86d\",\n  \"\u8EDD\": \"\\ud872\",\n  \"\u8EDF\": \"\u8F6F\",\n  \"\u8EE4\": \"\u8F77\",\n  \"\u8EE8\": \"\\ud86d\",\n  \"\u8EEB\": \"\u8F78\",\n  \"\u8EEC\": \"\\ud86d\",\n  \"\u8EF2\": \"\u8F71\",\n  \"\u8EF7\": \"\\ud86d\",\n  \"\u8EF8\": \"\u8F74\",\n  \"\u8EF9\": \"\u8F75\",\n  \"\u8EFA\": \"\u8F7A\",\n  \"\u8EFB\": \"\u8F72\",\n  \"\u8EFC\": \"\u8F76\",\n  \"\u8EFE\": \"\u8F7C\",\n  \"\u8EFF\": \"\\ud86d\",\n  \"\u8F03\": \"\u8F83\",\n  \"\u8F04\": \"\\ud861\",\n  \"\u8F05\": \"\u8F82\",\n  \"\u8F07\": \"\u8F81\",\n  \"\u8F08\": \"\u8F80\",\n  \"\u8F09\": \"\u8F7D\",\n  \"\u8F0A\": \"\u8F7E\",\n  \"\u8F0B\": \"\\ud86a\",\n  \"\u8F12\": \"\u8F84\",\n  \"\u8F13\": \"\u633D\",\n  \"\u8F14\": \"\u8F85\",\n  \"\u8F15\": \"\u8F7B\",\n  \"\u8F16\": \"\\ud86d\",\n  \"\u8F17\": \"\\ud86d\",\n  \"\u8F1B\": \"\u8F86\",\n  \"\u8F1C\": \"\u8F8E\",\n  \"\u8F1D\": \"\u8F89\",\n  \"\u8F1E\": \"\u8F8B\",\n  \"\u8F1F\": \"\u8F8D\",\n  \"\u8F22\": \"\\ud86d\",\n  \"\u8F25\": \"\u8F8A\",\n  \"\u8F26\": \"\u8F87\",\n  \"\u8F28\": \"\\ud86d\",\n  \"\u8F29\": \"\u8F88\",\n  \"\u8F2A\": \"\u8F6E\",\n  \"\u8F2C\": \"\u8F8C\",\n  \"\u8F2E\": \"\\ud86d\",\n  \"\u8F2F\": \"\u8F91\",\n  \"\u8F33\": \"\u8F8F\",\n  \"\u8F36\": \"\\ud872\",\n  \"\u8F37\": \"\\ud86d\",\n  \"\u8F38\": \"\u8F93\",\n  \"\u8F3B\": \"\u8F90\",\n  \"\u8F3C\": \"\u8F92\",\n  \"\u8F3E\": \"\u8F97\",\n  \"\u8F3F\": \"\u8206\",\n  \"\u8F40\": \"\u8F92\",\n  \"\u8F42\": \"\u6BC2\",\n  \"\u8F44\": \"\u8F96\",\n  \"\u8F45\": \"\u8F95\",\n  \"\u8F46\": \"\u8F98\",\n  \"\u8F47\": \"\\ud86d\",\n  \"\u8F49\": \"\u8F6C\",\n  \"\u8F4A\": \"\\ud86d\",\n  \"\u8F4D\": \"\u8F99\",\n  \"\u8F4E\": \"\u8F7F\",\n  \"\u8F50\": \"\\ud86d\",\n  \"\u8F54\": \"\u8F9A\",\n  \"\u8F57\": \"\\ud86d\",\n  \"\u8F5F\": \"\u8F70\",\n  \"\u8F60\": \"\\ud86d\",\n  \"\u8F61\": \"\u8F94\",\n  \"\u8F62\": \"\u8F79\",\n  \"\u8F63\": \"\\ud86d\",\n  \"\u8F64\": \"\u8F73\",\n  \"\u8FA6\": \"\u529E\",\n  \"\u8FAD\": \"\u8F9E\",\n  \"\u8FAE\": \"\u8FAB\",\n  \"\u8FAF\": \"\u8FA9\",\n  \"\u8FB2\": \"\u519C\",\n  \"\u8FF4\": \"\u56DE\",\n  \"\u9015\": \"\u8FF3\",\n  \"\u9019\": \"\u8FD9\",\n  \"\u9023\": \"\u8FDE\",\n  \"\u9031\": \"\u5468\",\n  \"\u9032\": \"\u8FDB\",\n  \"\u904A\": \"\u6E38\",\n  \"\u904B\": \"\u8FD0\",\n  \"\u904E\": \"\u8FC7\",\n  \"\u9054\": \"\u8FBE\",\n  \"\u9055\": \"\u8FDD\",\n  \"\u9059\": \"\u9065\",\n  \"\u905C\": \"\u900A\",\n  \"\u905E\": \"\u9012\",\n  \"\u9060\": \"\u8FDC\",\n  \"\u9061\": \"\u6EAF\",\n  \"\u9069\": \"\u9002\",\n  \"\u9071\": \"\\ud86d\",\n  \"\u9072\": \"\u8FDF\",\n  \"\u9077\": \"\u8FC1\",\n  \"\u9078\": \"\u9009\",\n  \"\u907A\": \"\u9057\",\n  \"\u907C\": \"\u8FBD\",\n  \"\u9081\": \"\u8FC8\",\n  \"\u9084\": \"\u8FD8\",\n  \"\u9087\": \"\u8FE9\",\n  \"\u908A\": \"\u8FB9\",\n  \"\u908F\": \"\u903B\",\n  \"\u9090\": \"\u9026\",\n  \"\u90DF\": \"\u90CF\",\n  \"\u90F5\": \"\u90AE\",\n  \"\u9106\": \"\u90D3\",\n  \"\u9109\": \"\u4E61\",\n  \"\u9112\": \"\u90B9\",\n  \"\u9114\": \"\u90AC\",\n  \"\u9116\": \"\u90E7\",\n  \"\u911F\": \"\\ud86d\",\n  \"\u9127\": \"\u9093\",\n  \"\u9129\": \"\\ud872\",\n  \"\u912D\": \"\u90D1\",\n  \"\u9130\": \"\u90BB\",\n  \"\u9132\": \"\u90F8\",\n  \"\u9133\": \"\\ud86d\",\n  \"\u9134\": \"\u90BA\",\n  \"\u9136\": \"\u90D0\",\n  \"\u913A\": \"\u909D\",\n  \"\u9147\": \"\u9142\",\n  \"\u9148\": \"\u90E6\",\n  \"\u9183\": \"\u814C\",\n  \"\u9196\": \"\u915D\",\n  \"\u919C\": \"\u4E11\",\n  \"\u919E\": \"\u915D\",\n  \"\u919F\": \"\u848F\",\n  \"\u91A3\": \"\u7CD6\",\n  \"\u91AB\": \"\u533B\",\n  \"\u91AC\": \"\u9171\",\n  \"\u91B1\": \"\u9166\",\n  \"\u91B2\": \"\\ud872\",\n  \"\u91B6\": \"\\ud86d\",\n  \"\u91C0\": \"\u917F\",\n  \"\u91C1\": \"\u8845\",\n  \"\u91C3\": \"\u917E\",\n  \"\u91C5\": \"\u917D\",\n  \"\u91CB\": \"\u91CA\",\n  \"\u91D0\": \"\u5398\",\n  \"\u91D2\": \"\u9485\",\n  \"\u91D3\": \"\u9486\",\n  \"\u91D4\": \"\u9487\",\n  \"\u91D5\": \"\u948C\",\n  \"\u91D7\": \"\u948A\",\n  \"\u91D8\": \"\u9489\",\n  \"\u91D9\": \"\u948B\",\n  \"\u91DA\": \"\\ud86d\",\n  \"\u91DD\": \"\u9488\",\n  \"\u91DF\": \"\\ud86d\",\n  \"\u91E3\": \"\u9493\",\n  \"\u91E4\": \"\u9490\",\n  \"\u91E6\": \"\u6263\",\n  \"\u91E7\": \"\u948F\",\n  \"\u91E8\": \"\\ud86d\",\n  \"\u91E9\": \"\u9492\",\n  \"\u91F2\": \"\\ud86d\",\n  \"\u91F3\": \"\\ud863\",\n  \"\u91F4\": \"\\ud872\",\n  \"\u91F5\": \"\u9497\",\n  \"\u91F7\": \"\u948D\",\n  \"\u91F9\": \"\u9495\",\n  \"\u91FA\": \"\u948E\",\n  \"\u91FE\": \"\u497A\",\n  \"\u91FF\": \"\\ud872\",\n  \"\u9200\": \"\u94AF\",\n  \"\u9201\": \"\u94AB\",\n  \"\u9203\": \"\u9498\",\n  \"\u9204\": \"\u94AD\",\n  \"\u9205\": \"\u94A5\",\n  \"\u9206\": \"\\ud86d\",\n  \"\u9207\": \"\\ud86d\",\n  \"\u9208\": \"\u949A\",\n  \"\u9209\": \"\u94A0\",\n  \"\u920B\": \"\\ud863\",\n  \"\u920D\": \"\u949D\",\n  \"\u920E\": \"\u94A9\",\n  \"\u9210\": \"\u94A4\",\n  \"\u9211\": \"\u94A3\",\n  \"\u9212\": \"\u9491\",\n  \"\u9214\": \"\u949E\",\n  \"\u9215\": \"\u94AE\",\n  \"\u9216\": \"\\ud86d\",\n  \"\u9217\": \"\\ud86d\",\n  \"\u921B\": \"\\ud86d\",\n  \"\u921E\": \"\u94A7\",\n  \"\u9220\": \"\\ud863\",\n  \"\u9221\": \"\u949F\",\n  \"\u9223\": \"\u9499\",\n  \"\u9225\": \"\u94AC\",\n  \"\u9226\": \"\u949B\",\n  \"\u9227\": \"\u94AA\",\n  \"\u922E\": \"\u94CC\",\n  \"\u922F\": \"\\ud863\",\n  \"\u9230\": \"\u94C8\",\n  \"\u9232\": \"\\ud863\",\n  \"\u9233\": \"\u94B6\",\n  \"\u9234\": \"\u94C3\",\n  \"\u9237\": \"\u94B4\",\n  \"\u9238\": \"\u94B9\",\n  \"\u9239\": \"\u94CD\",\n  \"\u923A\": \"\u94B0\",\n  \"\u923D\": \"\u94B8\",\n  \"\u923E\": \"\u94C0\",\n  \"\u923F\": \"\u94BF\",\n  \"\u9240\": \"\u94BE\",\n  \"\u9241\": \"\\ud863\",\n  \"\u9245\": \"\u5DE8\",\n  \"\u9246\": \"\u94BB\",\n  \"\u9248\": \"\u94CA\",\n  \"\u9249\": \"\u94C9\",\n  \"\u924A\": \"\\ud872\",\n  \"\u924B\": \"\u94C7\",\n  \"\u924D\": \"\u94CB\",\n  \"\u9251\": \"\u94C2\",\n  \"\u9254\": \"\\ud86d\",\n  \"\u9255\": \"\u94B7\",\n  \"\u9257\": \"\u94B3\",\n  \"\u925A\": \"\u94C6\",\n  \"\u925B\": \"\u94C5\",\n  \"\u925D\": \"\\ud86d\",\n  \"\u925E\": \"\u94BA\",\n  \"\u9260\": \"\\ud86d\",\n  \"\u9262\": \"\u94B5\",\n  \"\u9264\": \"\u94A9\",\n  \"\u9265\": \"\\ud872\",\n  \"\u9266\": \"\u94B2\",\n  \"\u9267\": \"\\ud872\",\n  \"\u926C\": \"\u94BC\",\n  \"\u926D\": \"\u94BD\",\n  \"\u926E\": \"\\ud872\",\n  \"\u9273\": \"\u952B\",\n  \"\u9276\": \"\u94CF\",\n  \"\u9277\": \"\\ud86d\",\n  \"\u9278\": \"\u94F0\",\n  \"\u927A\": \"\u94D2\",\n  \"\u927B\": \"\u94EC\",\n  \"\u927D\": \"\\ud86d\",\n  \"\u927E\": \"\\ud86d\",\n  \"\u927F\": \"\u94EA\",\n  \"\u9280\": \"\u94F6\",\n  \"\u9281\": \"\\ud86d\",\n  \"\u9282\": \"\\ud86d\",\n  \"\u9283\": \"\u94F3\",\n  \"\u9285\": \"\u94DC\",\n  \"\u9288\": \"\\ud86d\",\n  \"\u928A\": \"\\ud86d\",\n  \"\u928D\": \"\u94DA\",\n  \"\u928F\": \"\\ud86d\",\n  \"\u9291\": \"\u94E3\",\n  \"\u9293\": \"\u94E8\",\n  \"\u9296\": \"\u94E2\",\n  \"\u9298\": \"\u94ED\",\n  \"\u929A\": \"\u94EB\",\n  \"\u929B\": \"\u94E6\",\n  \"\u929C\": \"\u8854\",\n  \"\u92A0\": \"\u94D1\",\n  \"\u92A3\": \"\u94F7\",\n  \"\u92A5\": \"\u94F1\",\n  \"\u92A6\": \"\u94DF\",\n  \"\u92A8\": \"\u94F5\",\n  \"\u92A9\": \"\u94E5\",\n  \"\u92AA\": \"\u94D5\",\n  \"\u92AB\": \"\u94EF\",\n  \"\u92AC\": \"\u94D0\",\n  \"\u92B1\": \"\u94DE\",\n  \"\u92B3\": \"\u9510\",\n  \"\u92B6\": \"\\ud863\",\n  \"\u92B7\": \"\u9500\",\n  \"\u92B9\": \"\u9508\",\n  \"\u92BB\": \"\u9511\",\n  \"\u92BC\": \"\u9509\",\n  \"\u92C1\": \"\u94DD\",\n  \"\u92C2\": \"\\ud883\",\n  \"\u92C3\": \"\u9512\",\n  \"\u92C5\": \"\u950C\",\n  \"\u92C7\": \"\u94A1\",\n  \"\u92C9\": \"\\ud863\",\n  \"\u92CC\": \"\u94E4\",\n  \"\u92CF\": \"\u94D7\",\n  \"\u92D0\": \"\\ud872\",\n  \"\u92D2\": \"\u950B\",\n  \"\u92D7\": \"\\ud86d\",\n  \"\u92D9\": \"\u94FB\",\n  \"\u92DD\": \"\u950A\",\n  \"\u92DF\": \"\u9513\",\n  \"\u92E0\": \"\\ud86d\",\n  \"\u92E3\": \"\u94D8\",\n  \"\u92E4\": \"\u9504\",\n  \"\u92E5\": \"\u9503\",\n  \"\u92E6\": \"\u9514\",\n  \"\u92E8\": \"\u9507\",\n  \"\u92E9\": \"\u94D3\",\n  \"\u92EA\": \"\u94FA\",\n  \"\u92ED\": \"\u9510\",\n  \"\u92EE\": \"\u94D6\",\n  \"\u92EF\": \"\u9506\",\n  \"\u92F0\": \"\u9502\",\n  \"\u92F1\": \"\u94FD\",\n  \"\u92F6\": \"\u950D\",\n  \"\u92F8\": \"\u952F\",\n  \"\u92F9\": \"\\ud872\",\n  \"\u92FC\": \"\u94A2\",\n  \"\u9300\": \"\\ud872\",\n  \"\u9301\": \"\u951E\",\n  \"\u9302\": \"\\ud863\",\n  \"\u9304\": \"\u5F55\",\n  \"\u9306\": \"\u9516\",\n  \"\u9307\": \"\u952B\",\n  \"\u9308\": \"\u9529\",\n  \"\u930F\": \"\u94D4\",\n  \"\u9310\": \"\u9525\",\n  \"\u9312\": \"\u9515\",\n  \"\u9315\": \"\u951F\",\n  \"\u9318\": \"\u9524\",\n  \"\u9319\": \"\u9531\",\n  \"\u931A\": \"\u94EE\",\n  \"\u931B\": \"\u951B\",\n  \"\u931C\": \"\\ud86d\",\n  \"\u931D\": \"\\ud86d\",\n  \"\u931E\": \"\\ud872\",\n  \"\u931F\": \"\u952C\",\n  \"\u9320\": \"\u952D\",\n  \"\u9321\": \"\u951C\",\n  \"\u9322\": \"\u94B1\",\n  \"\u9324\": \"\\ud86d\",\n  \"\u9325\": \"\\ud86d\",\n  \"\u9326\": \"\u9526\",\n  \"\u9328\": \"\u951A\",\n  \"\u9329\": \"\u9520\",\n  \"\u932B\": \"\u9521\",\n  \"\u932E\": \"\u9522\",\n  \"\u932F\": \"\u9519\",\n  \"\u9332\": \"\u5F55\",\n  \"\u9333\": \"\u9530\",\n  \"\u9336\": \"\u8868\",\n  \"\u9338\": \"\u94FC\",\n  \"\u933C\": \"\u954E\",\n  \"\u933D\": \"\\ud86d\",\n  \"\u9340\": \"\u951D\",\n  \"\u9341\": \"\u9528\",\n  \"\u9343\": \"\u952A\",\n  \"\u9344\": \"\\ud863\",\n  \"\u9345\": \"\u94AB\",\n  \"\u9346\": \"\u9494\",\n  \"\u9347\": \"\u9534\",\n  \"\u9348\": \"\u9533\",\n  \"\u9349\": \"\\ud86d\",\n  \"\u934A\": \"\u70BC\",\n  \"\u934B\": \"\u9505\",\n  \"\u934D\": \"\u9540\",\n  \"\u9352\": \"\\ud86d\",\n  \"\u9354\": \"\u9537\",\n  \"\u9358\": \"\u94E1\",\n  \"\u935A\": \"\u9496\",\n  \"\u935B\": \"\u953B\",\n  \"\u9360\": \"\u953D\",\n  \"\u9364\": \"\u9538\",\n  \"\u9365\": \"\u9532\",\n  \"\u9369\": \"\u9518\",\n  \"\u936C\": \"\u9539\",\n  \"\u936D\": \"\\ud872\",\n  \"\u936E\": \"\\ud863\",\n  \"\u9370\": \"\u953E\",\n  \"\u9375\": \"\u952E\",\n  \"\u9376\": \"\u9536\",\n  \"\u937A\": \"\u9517\",\n  \"\u937C\": \"\u9488\",\n  \"\u937E\": \"\u949F\",\n  \"\u9382\": \"\u9541\",\n  \"\u9384\": \"\u953F\",\n  \"\u9387\": \"\u9545\",\n  \"\u9388\": \"\\ud86d\",\n  \"\u938A\": \"\u9551\",\n  \"\u938C\": \"\u9570\",\n  \"\u938D\": \"\\ud86d\",\n  \"\u9393\": \"\\ud872\",\n  \"\u9394\": \"\u9555\",\n  \"\u9396\": \"\u9501\",\n  \"\u9398\": \"\u9549\",\n  \"\u9399\": \"\\ud86d\",\n  \"\u939A\": \"\u9524\",\n  \"\u939B\": \"\u9548\",\n  \"\u939D\": \"\\ud863\",\n  \"\u939E\": \"\\ud86d\",\n  \"\u93A1\": \"\u9543\",\n  \"\u93A2\": \"\u94A8\",\n  \"\u93A3\": \"\u84E5\",\n  \"\u93A6\": \"\u954F\",\n  \"\u93A7\": \"\u94E0\",\n  \"\u93A9\": \"\u94E9\",\n  \"\u93AA\": \"\u953C\",\n  \"\u93AC\": \"\u9550\",\n  \"\u93AD\": \"\u9547\",\n  \"\u93AE\": \"\u9547\",\n  \"\u93AF\": \"\\ud863\",\n  \"\u93B0\": \"\u9552\",\n  \"\u93B2\": \"\u954B\",\n  \"\u93B3\": \"\u954D\",\n  \"\u93B5\": \"\u9553\",\n  \"\u93B6\": \"\u9FD4\",\n  \"\u93B7\": \"\\ud863\",\n  \"\u93B8\": \"\u954C\",\n  \"\u93BF\": \"\u954E\",\n  \"\u93C3\": \"\u955E\",\n  \"\u93C6\": \"\\ud863\",\n  \"\u93C7\": \"\u65CB\",\n  \"\u93C8\": \"\u94FE\",\n  \"\u93C9\": \"\\ud863\",\n  \"\u93CC\": \"\u9546\",\n  \"\u93CD\": \"\u9559\",\n  \"\u93CF\": \"\\ud872\",\n  \"\u93D0\": \"\u9560\",\n  \"\u93D1\": \"\u955D\",\n  \"\u93D7\": \"\u94FF\",\n  \"\u93D8\": \"\u9535\",\n  \"\u93DA\": \"\\ud872\",\n  \"\u93DC\": \"\u9557\",\n  \"\u93DD\": \"\u9558\",\n  \"\u93DE\": \"\u955B\",\n  \"\u93DF\": \"\u94F2\",\n  \"\u93E1\": \"\u955C\",\n  \"\u93E2\": \"\u9556\",\n  \"\u93E4\": \"\u9542\",\n  \"\u93E5\": \"\\ud86d\",\n  \"\u93E6\": \"\\ud86d\",\n  \"\u93E8\": \"\u933E\",\n  \"\u93F0\": \"\u955A\",\n  \"\u93F5\": \"\u94E7\",\n  \"\u93F7\": \"\u9564\",\n  \"\u93F9\": \"\u956A\",\n  \"\u93FA\": \"\u497D\",\n  \"\u93FB\": \"\\ud872\",\n  \"\u93FD\": \"\u9508\",\n  \"\u93FE\": \"\\ud86d\",\n  \"\u9403\": \"\u94D9\",\n  \"\u9404\": \"\\ud863\",\n  \"\u9407\": \"\\ud86d\",\n  \"\u9408\": \"\\ud86d\",\n  \"\u940B\": \"\u94F4\",\n  \"\u940D\": \"\\ud86d\",\n  \"\u940E\": \"\\ud863\",\n  \"\u940F\": \"\\ud863\",\n  \"\u9410\": \"\u9563\",\n  \"\u9412\": \"\u94F9\",\n  \"\u9413\": \"\u9566\",\n  \"\u9414\": \"\u9561\",\n  \"\u9418\": \"\u949F\",\n  \"\u9419\": \"\u956B\",\n  \"\u941D\": \"\u9562\",\n  \"\u9420\": \"\u9568\",\n  \"\u9425\": \"\u4985\",\n  \"\u9426\": \"\u950E\",\n  \"\u9427\": \"\u950F\",\n  \"\u9428\": \"\u9544\",\n  \"\u9429\": \"\\ud872\",\n  \"\u942A\": \"\\ud86d\",\n  \"\u942B\": \"\u954C\",\n  \"\u942E\": \"\u9570\",\n  \"\u942F\": \"\u4983\",\n  \"\u9432\": \"\u956F\",\n  \"\u9433\": \"\u956D\",\n  \"\u9435\": \"\u94C1\",\n  \"\u9436\": \"\u956E\",\n  \"\u9438\": \"\u94CE\",\n  \"\u943A\": \"\u94DB\",\n  \"\u943C\": \"\\ud86d\",\n  \"\u943D\": \"\\ud86d\",\n  \"\u943F\": \"\u9571\",\n  \"\u9440\": \"\\ud883\",\n  \"\u9444\": \"\u94F8\",\n  \"\u9449\": \"\\ud86e\",\n  \"\u944A\": \"\u956C\",\n  \"\u944C\": \"\u9554\",\n  \"\u9451\": \"\u9274\",\n  \"\u9452\": \"\u9274\",\n  \"\u9454\": \"\u9572\",\n  \"\u9455\": \"\u9527\",\n  \"\u945E\": \"\u9574\",\n  \"\u9460\": \"\u94C4\",\n  \"\u9463\": \"\u9573\",\n  \"\u9465\": \"\u9565\",\n  \"\u946A\": \"\\ud872\",\n  \"\u946D\": \"\u9567\",\n  \"\u9470\": \"\u94A5\",\n  \"\u9471\": \"\u9575\",\n  \"\u9472\": \"\u9576\",\n  \"\u9474\": \"\\ud86d\",\n  \"\u9477\": \"\u954A\",\n  \"\u9479\": \"\u9569\",\n  \"\u947C\": \"\u9523\",\n  \"\u947D\": \"\u94BB\",\n  \"\u947E\": \"\u92AE\",\n  \"\u947F\": \"\u51FF\",\n  \"\u9481\": \"\u9562\",\n  \"\u9482\": \"\u954B\",\n  \"\u9577\": \"\u957F\",\n  \"\u9580\": \"\u95E8\",\n  \"\u9582\": \"\u95E9\",\n  \"\u9583\": \"\u95EA\",\n  \"\u9586\": \"\u95EB\",\n  \"\u9588\": \"\u95EC\",\n  \"\u9589\": \"\u95ED\",\n  \"\u958B\": \"\u5F00\",\n  \"\u958C\": \"\u95F6\",\n  \"\u958D\": \"\\ud863\",\n  \"\u958E\": \"\u95F3\",\n  \"\u958F\": \"\u95F0\",\n  \"\u9590\": \"\\ud863\",\n  \"\u9591\": \"\u95F2\",\n  \"\u9592\": \"\u95F2\",\n  \"\u9593\": \"\u95F4\",\n  \"\u9594\": \"\u95F5\",\n  \"\u9597\": \"\\ud86d\",\n  \"\u9598\": \"\u95F8\",\n  \"\u959D\": \"\\ud86e\",\n  \"\u959E\": \"\\ud86d\",\n  \"\u95A1\": \"\u9602\",\n  \"\u95A3\": \"\u9601\",\n  \"\u95A4\": \"\u5408\",\n  \"\u95A5\": \"\u9600\",\n  \"\u95A8\": \"\u95FA\",\n  \"\u95A9\": \"\u95FD\",\n  \"\u95AB\": \"\u9603\",\n  \"\u95AC\": \"\u9606\",\n  \"\u95AD\": \"\u95FE\",\n  \"\u95B1\": \"\u9605\",\n  \"\u95B2\": \"\u9605\",\n  \"\u95B5\": \"\\ud86d\",\n  \"\u95B6\": \"\u960A\",\n  \"\u95B9\": \"\u9609\",\n  \"\u95BB\": \"\u960E\",\n  \"\u95BC\": \"\u960F\",\n  \"\u95BD\": \"\u960D\",\n  \"\u95BE\": \"\u9608\",\n  \"\u95BF\": \"\u960C\",\n  \"\u95C3\": \"\u9612\",\n  \"\u95C6\": \"\u677F\",\n  \"\u95C7\": \"\u6697\",\n  \"\u95C8\": \"\u95F1\",\n  \"\u95C9\": \"\\ud872\",\n  \"\u95CA\": \"\u9614\",\n  \"\u95CB\": \"\u9615\",\n  \"\u95CC\": \"\u9611\",\n  \"\u95CD\": \"\u9607\",\n  \"\u95D0\": \"\u9617\",\n  \"\u95D1\": \"\\ud86d\",\n  \"\u95D2\": \"\u9618\",\n  \"\u95D3\": \"\u95FF\",\n  \"\u95D4\": \"\u9616\",\n  \"\u95D5\": \"\u9619\",\n  \"\u95D6\": \"\u95EF\",\n  \"\u95DC\": \"\u5173\",\n  \"\u95DE\": \"\u961A\",\n  \"\u95E0\": \"\u9613\",\n  \"\u95E1\": \"\u9610\",\n  \"\u95E2\": \"\u8F9F\",\n  \"\u95E4\": \"\u961B\",\n  \"\u95E5\": \"\u95FC\",\n  \"\u962A\": \"\u962A\",\n  \"\u9658\": \"\u9649\",\n  \"\u965D\": \"\u9655\",\n  \"\u965E\": \"\u5347\",\n  \"\u9663\": \"\u9635\",\n  \"\u9670\": \"\u9634\",\n  \"\u9673\": \"\u9648\",\n  \"\u9678\": \"\u9646\",\n  \"\u967D\": \"\u9633\",\n  \"\u9689\": \"\u9667\",\n  \"\u968A\": \"\u961F\",\n  \"\u968E\": \"\u9636\",\n  \"\u9691\": \"\\ud872\",\n  \"\u9695\": \"\u9668\",\n  \"\u969B\": \"\u9645\",\n  \"\u96A4\": \"\\ud872\",\n  \"\u96A8\": \"\u968F\",\n  \"\u96AA\": \"\u9669\",\n  \"\u96AE\": \"\\ud872\",\n  \"\u96AF\": \"\u9666\",\n  \"\u96B1\": \"\u9690\",\n  \"\u96B4\": \"\u9647\",\n  \"\u96B8\": \"\u96B6\",\n  \"\u96BB\": \"\u53EA\",\n  \"\u96CB\": \"\u96BD\",\n  \"\u96D6\": \"\u867D\",\n  \"\u96D9\": \"\u53CC\",\n  \"\u96DB\": \"\u96CF\",\n  \"\u96DC\": \"\u6742\",\n  \"\u96DE\": \"\u9E21\",\n  \"\u96E2\": \"\u79BB\",\n  \"\u96E3\": \"\u96BE\",\n  \"\u96F2\": \"\u4E91\",\n  \"\u96FB\": \"\u7535\",\n  \"\u9711\": \"\u6CBE\",\n  \"\u9722\": \"\u9721\",\n  \"\u9723\": \"\\ud86d\",\n  \"\u9727\": \"\u96FE\",\n  \"\u973C\": \"\\ud86b\",\n  \"\u973D\": \"\u9701\",\n  \"\u9742\": \"\u96F3\",\n  \"\u9744\": \"\u972D\",\n  \"\u9746\": \"\u53C7\",\n  \"\u9748\": \"\u7075\",\n  \"\u9749\": \"\u53C6\",\n  \"\u975A\": \"\u9753\",\n  \"\u975C\": \"\u9759\",\n  \"\u975D\": \"\u9754\",\n  \"\u9766\": \"\u817C\",\n  \"\u9767\": \"\\ud86d\",\n  \"\u9768\": \"\u9765\",\n  \"\u978F\": \"\u5DE9\",\n  \"\u979D\": \"\u7EF1\",\n  \"\u97A6\": \"\u79CB\",\n  \"\u97BD\": \"\u9792\",\n  \"\u97BE\": \"\\ud86d\",\n  \"\u97C1\": \"\u7F30\",\n  \"\u97C3\": \"\u9791\",\n  \"\u97C6\": \"\u5343\",\n  \"\u97C9\": \"\u97AF\",\n  \"\u97CB\": \"\u97E6\",\n  \"\u97CC\": \"\u97E7\",\n  \"\u97CD\": \"\u97E8\",\n  \"\u97D3\": \"\u97E9\",\n  \"\u97D9\": \"\u97EA\",\n  \"\u97DA\": \"\\ud86e\",\n  \"\u97DB\": \"\\ud86d\",\n  \"\u97DC\": \"\u97EC\",\n  \"\u97DD\": \"\u97B2\",\n  \"\u97DE\": \"\u97EB\",\n  \"\u97E0\": \"\\ud86d\",\n  \"\u97FB\": \"\u97F5\",\n  \"\u97FF\": \"\u54CD\",\n  \"\u9801\": \"\u9875\",\n  \"\u9802\": \"\u9876\",\n  \"\u9803\": \"\u9877\",\n  \"\u9805\": \"\u9879\",\n  \"\u9806\": \"\u987A\",\n  \"\u9807\": \"\u9878\",\n  \"\u9808\": \"\u987B\",\n  \"\u980A\": \"\u987C\",\n  \"\u980C\": \"\u9882\",\n  \"\u980D\": \"\\ud86e\",\n  \"\u980E\": \"\u9880\",\n  \"\u980F\": \"\u9883\",\n  \"\u9810\": \"\u9884\",\n  \"\u9811\": \"\u987D\",\n  \"\u9812\": \"\u9881\",\n  \"\u9813\": \"\u987F\",\n  \"\u9814\": \"\\ud873\",\n  \"\u9817\": \"\u9887\",\n  \"\u9818\": \"\u9886\",\n  \"\u981C\": \"\u988C\",\n  \"\u9820\": \"\\ud873\",\n  \"\u9821\": \"\u9889\",\n  \"\u9824\": \"\u9890\",\n  \"\u9826\": \"\u988F\",\n  \"\u982B\": \"\\ud86d\",\n  \"\u982D\": \"\u5934\",\n  \"\u982E\": \"\u9892\",\n  \"\u9830\": \"\u988A\",\n  \"\u9832\": \"\u988B\",\n  \"\u9834\": \"\u9895\",\n  \"\u9835\": \"\\ud86d\",\n  \"\u9837\": \"\u9894\",\n  \"\u9838\": \"\u9888\",\n  \"\u9839\": \"\u9893\",\n  \"\u983B\": \"\u9891\",\n  \"\u983D\": \"\u9893\",\n  \"\u9842\": \"\\ud865\",\n  \"\u9843\": \"\\ud865\",\n  \"\u9845\": \"\\ud86d\",\n  \"\u9846\": \"\u9897\",\n  \"\u984C\": \"\u9898\",\n  \"\u984D\": \"\u989D\",\n  \"\u984E\": \"\u989A\",\n  \"\u984F\": \"\u989C\",\n  \"\u9852\": \"\u9899\",\n  \"\u9853\": \"\u989B\",\n  \"\u9854\": \"\u989C\",\n  \"\u9857\": \"\\ud86d\",\n  \"\u9858\": \"\u613F\",\n  \"\u9859\": \"\u98A1\",\n  \"\u985B\": \"\u98A0\",\n  \"\u985E\": \"\u7C7B\",\n  \"\u9862\": \"\u989F\",\n  \"\u9863\": \"\\ud86d\",\n  \"\u9865\": \"\u98A2\",\n  \"\u9867\": \"\u987E\",\n  \"\u986B\": \"\u98A4\",\n  \"\u986C\": \"\u98A5\",\n  \"\u986F\": \"\u663E\",\n  \"\u9870\": \"\u98A6\",\n  \"\u9871\": \"\u9885\",\n  \"\u9873\": \"\u989E\",\n  \"\u9874\": \"\u98A7\",\n  \"\u98A8\": \"\u98CE\",\n  \"\u98AD\": \"\u98D0\",\n  \"\u98AE\": \"\u98D1\",\n  \"\u98AF\": \"\u98D2\",\n  \"\u98B0\": \"\\ud865\",\n  \"\u98B1\": \"\u53F0\",\n  \"\u98B3\": \"\u522E\",\n  \"\u98B6\": \"\u98D3\",\n  \"\u98B7\": \"\\ud865\",\n  \"\u98B8\": \"\u98D4\",\n  \"\u98BA\": \"\u98CF\",\n  \"\u98BB\": \"\u98D6\",\n  \"\u98BC\": \"\u98D5\",\n  \"\u98BE\": \"\\ud865\",\n  \"\u98C0\": \"\u98D7\",\n  \"\u98C4\": \"\u98D8\",\n  \"\u98C6\": \"\u98D9\",\n  \"\u98C8\": \"\u98DA\",\n  \"\u98CB\": \"\\ud86d\",\n  \"\u98DB\": \"\u98DE\",\n  \"\u98E0\": \"\u9963\",\n  \"\u98E2\": \"\u9965\",\n  \"\u98E3\": \"\u9964\",\n  \"\u98E5\": \"\u9966\",\n  \"\u98E6\": \"\\ud86d\",\n  \"\u98E9\": \"\u9968\",\n  \"\u98EA\": \"\u996A\",\n  \"\u98EB\": \"\u996B\",\n  \"\u98ED\": \"\u996C\",\n  \"\u98EF\": \"\u996D\",\n  \"\u98F1\": \"\u98E7\",\n  \"\u98F2\": \"\u996E\",\n  \"\u98F4\": \"\u9974\",\n  \"\u98F5\": \"\\ud86d\",\n  \"\u98F6\": \"\\ud86d\",\n  \"\u98FC\": \"\u9972\",\n  \"\u98FD\": \"\u9971\",\n  \"\u98FE\": \"\u9970\",\n  \"\u98FF\": \"\u9973\",\n  \"\u9903\": \"\u997A\",\n  \"\u9904\": \"\u9978\",\n  \"\u9905\": \"\u997C\",\n  \"\u9908\": \"\u7CCD\",\n  \"\u9909\": \"\u9977\",\n  \"\u990A\": \"\u517B\",\n  \"\u990C\": \"\u9975\",\n  \"\u990E\": \"\u9979\",\n  \"\u990F\": \"\u997B\",\n  \"\u9911\": \"\u997D\",\n  \"\u9912\": \"\u9981\",\n  \"\u9913\": \"\u997F\",\n  \"\u9914\": \"\\ud86d\",\n  \"\u9915\": \"\u9982\",\n  \"\u9916\": \"\u997E\",\n  \"\u9917\": \"\\ud86d\",\n  \"\u9918\": \"\u4F59\",\n  \"\u991A\": \"\u80B4\",\n  \"\u991B\": \"\u9984\",\n  \"\u991C\": \"\u9983\",\n  \"\u991E\": \"\u996F\",\n  \"\u9921\": \"\u9985\",\n  \"\u9926\": \"\\ud86d\",\n  \"\u9927\": \"\\ud86d\",\n  \"\u9928\": \"\u9986\",\n  \"\u992A\": \"\\ud86d\",\n  \"\u992B\": \"\\ud86d\",\n  \"\u992C\": \"\u7CCA\",\n  \"\u992D\": \"\\ud86d\",\n  \"\u9931\": \"\u7CC7\",\n  \"\u9933\": \"\u9967\",\n  \"\u9935\": \"\u5582\",\n  \"\u9936\": \"\u9989\",\n  \"\u9937\": \"\u9987\",\n  \"\u9938\": \"\\ud866\",\n  \"\u993A\": \"\u998E\",\n  \"\u993C\": \"\u9969\",\n  \"\u993E\": \"\u998F\",\n  \"\u993F\": \"\u998A\",\n  \"\u9941\": \"\u998C\",\n  \"\u9943\": \"\u998D\",\n  \"\u9945\": \"\u9992\",\n  \"\u9948\": \"\u9990\",\n  \"\u9949\": \"\u9991\",\n  \"\u994A\": \"\u9993\",\n  \"\u994B\": \"\u9988\",\n  \"\u994C\": \"\u9994\",\n  \"\u9951\": \"\u9965\",\n  \"\u9952\": \"\u9976\",\n  \"\u9957\": \"\u98E8\",\n  \"\u9958\": \"\\ud86d\",\n  \"\u995C\": \"\u990D\",\n  \"\u995E\": \"\u998B\",\n  \"\u995F\": \"\\ud86d\",\n  \"\u9960\": \"\\ud86d\",\n  \"\u9962\": \"\u9995\",\n  \"\u99AC\": \"\u9A6C\",\n  \"\u99AD\": \"\u9A6D\",\n  \"\u99AE\": \"\u51AF\",\n  \"\u99AF\": \"\\ud86d\",\n  \"\u99B1\": \"\u9A6E\",\n  \"\u99B3\": \"\u9A70\",\n  \"\u99B4\": \"\u9A6F\",\n  \"\u99B9\": \"\u9A72\",\n  \"\u99BC\": \"\\ud86d\",\n  \"\u99C1\": \"\u9A73\",\n  \"\u99C3\": \"\\ud86d\",\n  \"\u99C9\": \"\\ud873\",\n  \"\u99CA\": \"\\ud86d\",\n  \"\u99CE\": \"\\ud866\",\n  \"\u99D0\": \"\u9A7B\",\n  \"\u99D1\": \"\u9A7D\",\n  \"\u99D2\": \"\u9A79\",\n  \"\u99D3\": \"\\ud873\",\n  \"\u99D4\": \"\u9A75\",\n  \"\u99D5\": \"\u9A7E\",\n  \"\u99D8\": \"\u9A80\",\n  \"\u99D9\": \"\u9A78\",\n  \"\u99DA\": \"\\ud866\",\n  \"\u99DB\": \"\u9A76\",\n  \"\u99DD\": \"\u9A7C\",\n  \"\u99DE\": \"\\ud86d\",\n  \"\u99DF\": \"\u9A77\",\n  \"\u99E1\": \"\u9A82\",\n  \"\u99E2\": \"\u9A88\",\n  \"\u99E4\": \"\\ud86d\",\n  \"\u99E7\": \"\\ud866\",\n  \"\u99E9\": \"\\ud866\",\n  \"\u99EA\": \"\\ud873\",\n  \"\u99EB\": \"\\ud86d\",\n  \"\u99ED\": \"\u9A87\",\n  \"\u99F0\": \"\u9A83\",\n  \"\u99F1\": \"\u9A86\",\n  \"\u99F6\": \"\\ud866\",\n  \"\u99F8\": \"\u9A8E\",\n  \"\u99FB\": \"\\ud86d\",\n  \"\u99FC\": \"\\ud873\",\n  \"\u99FF\": \"\u9A8F\",\n  \"\u9A01\": \"\u9A8B\",\n  \"\u9A02\": \"\u9A8D\",\n  \"\u9A03\": \"\\ud86d\",\n  \"\u9A04\": \"\\ud86d\",\n  \"\u9A05\": \"\u9A93\",\n  \"\u9A09\": \"\\ud86d\",\n  \"\u9A0A\": \"\\ud86d\",\n  \"\u9A0C\": \"\u9A94\",\n  \"\u9A0D\": \"\u9A92\",\n  \"\u9A0E\": \"\u9A91\",\n  \"\u9A0F\": \"\u9A90\",\n  \"\u9A11\": \"\\ud873\",\n  \"\u9A14\": \"\\ud866\",\n  \"\u9A16\": \"\u9A9B\",\n  \"\u9A19\": \"\u9A97\",\n  \"\u9A1A\": \"\\ud866\",\n  \"\u9A1C\": \"\\ud86d\",\n  \"\u9A1D\": \"\\ud866\",\n  \"\u9A1E\": \"\\ud873\",\n  \"\u9A1F\": \"\\ud866\",\n  \"\u9A20\": \"\\ud86d\",\n  \"\u9A24\": \"\u9A99\",\n  \"\u9A27\": \"\u4BC4\",\n  \"\u9A2A\": \"\\ud866\",\n  \"\u9A2B\": \"\u9A9E\",\n  \"\u9A2D\": \"\u9A98\",\n  \"\u9A2E\": \"\u9A9D\",\n  \"\u9A30\": \"\u817E\",\n  \"\u9A31\": \"\\ud86d\",\n  \"\u9A34\": \"\\ud86d\",\n  \"\u9A35\": \"\\ud86d\",\n  \"\u9A36\": \"\u9A7A\",\n  \"\u9A37\": \"\u9A9A\",\n  \"\u9A38\": \"\u9A9F\",\n  \"\u9A3B\": \"\\ud86d\",\n  \"\u9A3C\": \"\\ud86e\",\n  \"\u9A3E\": \"\u9AA1\",\n  \"\u9A40\": \"\u84E6\",\n  \"\u9A41\": \"\u9A9C\",\n  \"\u9A42\": \"\u9A96\",\n  \"\u9A43\": \"\u9AA0\",\n  \"\u9A44\": \"\u9AA2\",\n  \"\u9A45\": \"\u9A71\",\n  \"\u9A4A\": \"\u9A85\",\n  \"\u9A4B\": \"\\ud866\",\n  \"\u9A4C\": \"\u9A95\",\n  \"\u9A4D\": \"\u9A81\",\n  \"\u9A4E\": \"\\ud873\",\n  \"\u9A4F\": \"\u9AA3\",\n  \"\u9A53\": \"\\ud86d\",\n  \"\u9A55\": \"\u9A84\",\n  \"\u9A57\": \"\u9A8C\",\n  \"\u9A59\": \"\\ud86d\",\n  \"\u9A5A\": \"\u60CA\",\n  \"\u9A5B\": \"\u9A7F\",\n  \"\u9A5F\": \"\u9AA4\",\n  \"\u9A62\": \"\u9A74\",\n  \"\u9A64\": \"\u9AA7\",\n  \"\u9A65\": \"\u9AA5\",\n  \"\u9A66\": \"\u9AA6\",\n  \"\u9A68\": \"\\ud86d\",\n  \"\u9A6A\": \"\u9A8A\",\n  \"\u9A6B\": \"\u9A89\",\n  \"\u9AAF\": \"\u80AE\",\n  \"\u9ACF\": \"\u9AC5\",\n  \"\u9AD2\": \"\u810F\",\n  \"\u9AD4\": \"\u4F53\",\n  \"\u9AD5\": \"\u9ACC\",\n  \"\u9AD6\": \"\u9ACB\",\n  \"\u9AEE\": \"\u53D1\",\n  \"\u9B06\": \"\u677E\",\n  \"\u9B0D\": \"\u80E1\",\n  \"\u9B16\": \"\\ud866\",\n  \"\u9B1A\": \"\u987B\",\n  \"\u9B20\": \"\\ud86d\",\n  \"\u9B22\": \"\u9B13\",\n  \"\u9B25\": \"\u6597\",\n  \"\u9B27\": \"\u95F9\",\n  \"\u9B28\": \"\u54C4\",\n  \"\u9B29\": \"\u960B\",\n  \"\u9B2E\": \"\u9604\",\n  \"\u9B31\": \"\u90C1\",\n  \"\u9B39\": \"\u9B36\",\n  \"\u9B4E\": \"\u9B49\",\n  \"\u9B58\": \"\u9B47\",\n  \"\u9B5A\": \"\u9C7C\",\n  \"\u9B5B\": \"\u9C7D\",\n  \"\u9B5F\": \"\\ud86d\",\n  \"\u9B62\": \"\u9C7E\",\n  \"\u9B65\": \"\\ud867\",\n  \"\u9B66\": \"\\ud86d\",\n  \"\u9B68\": \"\u9C80\",\n  \"\u9B6F\": \"\u9C81\",\n  \"\u9B74\": \"\u9C82\",\n  \"\u9B75\": \"\\ud86d\",\n  \"\u9B77\": \"\u9C7F\",\n  \"\u9B7A\": \"\u9C84\",\n  \"\u9B7D\": \"\\ud86e\",\n  \"\u9B80\": \"\\ud873\",\n  \"\u9B81\": \"\u9C85\",\n  \"\u9B83\": \"\u9C86\",\n  \"\u9B84\": \"\\ud86d\",\n  \"\u9B85\": \"\\ud86d\",\n  \"\u9B86\": \"\\ud86d\",\n  \"\u9B88\": \"\\ud873\",\n  \"\u9B8A\": \"\u9C8C\",\n  \"\u9B8B\": \"\u9C89\",\n  \"\u9B8D\": \"\u9C8F\",\n  \"\u9B8E\": \"\u9C87\",\n  \"\u9B90\": \"\u9C90\",\n  \"\u9B91\": \"\u9C8D\",\n  \"\u9B92\": \"\u9C8B\",\n  \"\u9B93\": \"\u9C8A\",\n  \"\u9B9A\": \"\u9C92\",\n  \"\u9B9C\": \"\u9C98\",\n  \"\u9B9D\": \"\u9C9E\",\n  \"\u9B9E\": \"\u9C95\",\n  \"\u9B9F\": \"\\ud867\",\n  \"\u9BA0\": \"\\ud873\",\n  \"\u9BA1\": \"\\ud873\",\n  \"\u9BA3\": \"\u4C9F\",\n  \"\u9BA4\": \"\\ud86d\",\n  \"\u9BA6\": \"\u9C96\",\n  \"\u9BAA\": \"\u9C94\",\n  \"\u9BAB\": \"\u9C9B\",\n  \"\u9BAD\": \"\u9C91\",\n  \"\u9BAE\": \"\u9C9C\",\n  \"\u9BAF\": \"\\ud86d\",\n  \"\u9BB0\": \"\\ud86d\",\n  \"\u9BB3\": \"\u9C93\",\n  \"\u9BB5\": \"\\ud86d\",\n  \"\u9BB6\": \"\u9CAA\",\n  \"\u9BB8\": \"\\ud867\",\n  \"\u9BBA\": \"\u9C9D\",\n  \"\u9BBF\": \"\\ud86d\",\n  \"\u9BC0\": \"\u9CA7\",\n  \"\u9BC1\": \"\u9CA0\",\n  \"\u9BC4\": \"\\ud867\",\n  \"\u9BC6\": \"\\ud86d\",\n  \"\u9BC7\": \"\u9CA9\",\n  \"\u9BC9\": \"\u9CA4\",\n  \"\u9BCA\": \"\u9CA8\",\n  \"\u9BD2\": \"\u9CAC\",\n  \"\u9BD4\": \"\u9CBB\",\n  \"\u9BD5\": \"\u9CAF\",\n  \"\u9BD6\": \"\u9CAD\",\n  \"\u9BD7\": \"\u9C9E\",\n  \"\u9BDB\": \"\u9CB7\",\n  \"\u9BDD\": \"\u9CB4\",\n  \"\u9BDE\": \"\\ud86d\",\n  \"\u9BE1\": \"\u9CB1\",\n  \"\u9BE2\": \"\u9CB5\",\n  \"\u9BE4\": \"\u9CB2\",\n  \"\u9BE7\": \"\u9CB3\",\n  \"\u9BE8\": \"\u9CB8\",\n  \"\u9BEA\": \"\u9CAE\",\n  \"\u9BEB\": \"\u9CB0\",\n  \"\u9BEC\": \"\\ud86d\",\n  \"\u9BF0\": \"\u9CB6\",\n  \"\u9BF1\": \"\\ud867\",\n  \"\u9BF4\": \"\u9CBA\",\n  \"\u9BF6\": \"\\ud867\",\n  \"\u9BF7\": \"\u9CC0\",\n  \"\u9BFB\": \"\\ud873\",\n  \"\u9BFD\": \"\u9CAB\",\n  \"\u9BFE\": \"\\ud86d\",\n  \"\u9BFF\": \"\u9CCA\",\n  \"\u9C01\": \"\u9CC8\",\n  \"\u9C02\": \"\u9C97\",\n  \"\u9C03\": \"\u9CC2\",\n  \"\u9C06\": \"\u4CA0\",\n  \"\u9C08\": \"\u9CBD\",\n  \"\u9C09\": \"\u9CC7\",\n  \"\u9C0A\": \"\\ud873\",\n  \"\u9C0B\": \"\\ud86d\",\n  \"\u9C0C\": \"\u4CA1\",\n  \"\u9C0D\": \"\u9CC5\",\n  \"\u9C0F\": \"\u9CBE\",\n  \"\u9C10\": \"\u9CC4\",\n  \"\u9C11\": \"\\ud86d\",\n  \"\u9C12\": \"\u9CC6\",\n  \"\u9C13\": \"\u9CC3\",\n  \"\u9C15\": \"\\ud86d\",\n  \"\u9C1B\": \"\u9CC1\",\n  \"\u9C1C\": \"\u9CD2\",\n  \"\u9C1F\": \"\u9CD1\",\n  \"\u9C20\": \"\u9CCB\",\n  \"\u9C23\": \"\u9CA5\",\n  \"\u9C24\": \"\\ud86d\",\n  \"\u9C25\": \"\u9CCF\",\n  \"\u9C26\": \"\\ud86d\",\n  \"\u9C27\": \"\u4CA2\",\n  \"\u9C28\": \"\u9CCE\",\n  \"\u9C29\": \"\u9CD0\",\n  \"\u9C2B\": \"\\ud86d\",\n  \"\u9C2D\": \"\u9CCD\",\n  \"\u9C2E\": \"\u9CC1\",\n  \"\u9C31\": \"\u9CA2\",\n  \"\u9C32\": \"\u9CCC\",\n  \"\u9C33\": \"\u9CD3\",\n  \"\u9C35\": \"\u9CD8\",\n  \"\u9C36\": \"\\ud873\",\n  \"\u9C37\": \"\u9CA6\",\n  \"\u9C39\": \"\u9CA3\",\n  \"\u9C3A\": \"\u9CB9\",\n  \"\u9C3B\": \"\u9CD7\",\n  \"\u9C3C\": \"\u9CDB\",\n  \"\u9C3D\": \"\\ud86d\",\n  \"\u9C3E\": \"\u9CD4\",\n  \"\u9C40\": \"\\ud873\",\n  \"\u9C42\": \"\u9CC9\",\n  \"\u9C44\": \"\\ud86d\",\n  \"\u9C45\": \"\u9CD9\",\n  \"\u9C46\": \"\\ud86e\",\n  \"\u9C47\": \"\\ud867\",\n  \"\u9C48\": \"\u9CD5\",\n  \"\u9C49\": \"\u9CD6\",\n  \"\u9C4A\": \"\\ud86d\",\n  \"\u9C52\": \"\u9CDF\",\n  \"\u9C54\": \"\u9CDD\",\n  \"\u9C56\": \"\u9CDC\",\n  \"\u9C57\": \"\u9CDE\",\n  \"\u9C58\": \"\u9C9F\",\n  \"\u9C5A\": \"\\ud873\",\n  \"\u9C5D\": \"\u9CBC\",\n  \"\u9C5F\": \"\u9C8E\",\n  \"\u9C60\": \"\u9C99\",\n  \"\u9C62\": \"\\ud86d\",\n  \"\u9C63\": \"\u9CE3\",\n  \"\u9C64\": \"\u9CE1\",\n  \"\u9C67\": \"\u9CE2\",\n  \"\u9C68\": \"\u9CBF\",\n  \"\u9C6D\": \"\u9C9A\",\n  \"\u9C6E\": \"\\ud86d\",\n  \"\u9C6F\": \"\u9CE0\",\n  \"\u9C72\": \"\\ud86d\",\n  \"\u9C77\": \"\u9CC4\",\n  \"\u9C78\": \"\u9C88\",\n  \"\u9C7A\": \"\u9CA1\",\n  \"\u9CE5\": \"\u9E1F\",\n  \"\u9CE7\": \"\u51EB\",\n  \"\u9CE9\": \"\u9E20\",\n  \"\u9CEC\": \"\u51EB\",\n  \"\u9CF2\": \"\u9E24\",\n  \"\u9CF3\": \"\u51E4\",\n  \"\u9CF4\": \"\u9E23\",\n  \"\u9CF6\": \"\u9E22\",\n  \"\u9CF7\": \"\\ud86d\",\n  \"\u9CFC\": \"\\ud868\",\n  \"\u9CFD\": \"\\ud86d\",\n  \"\u9CFE\": \"\u4D13\",\n  \"\u9D00\": \"\\ud86d\",\n  \"\u9D03\": \"\\ud86d\",\n  \"\u9D05\": \"\\ud86d\",\n  \"\u9D06\": \"\u9E29\",\n  \"\u9D07\": \"\u9E28\",\n  \"\u9D09\": \"\u9E26\",\n  \"\u9D10\": \"\\ud86d\",\n  \"\u9D12\": \"\u9E30\",\n  \"\u9D14\": \"\\ud86d\",\n  \"\u9D15\": \"\u9E35\",\n  \"\u9D17\": \"\\ud86c\",\n  \"\u9D1B\": \"\u9E33\",\n  \"\u9D1C\": \"\\ud868\",\n  \"\u9D1D\": \"\u9E32\",\n  \"\u9D1E\": \"\u9E2E\",\n  \"\u9D1F\": \"\u9E31\",\n  \"\u9D23\": \"\u9E2A\",\n  \"\u9D25\": \"\\ud86d\",\n  \"\u9D26\": \"\u9E2F\",\n  \"\u9D28\": \"\u9E2D\",\n  \"\u9D2E\": \"\\ud86d\",\n  \"\u9D2F\": \"\u9E38\",\n  \"\u9D30\": \"\u9E39\",\n  \"\u9D32\": \"\\ud868\",\n  \"\u9D33\": \"\\ud86d\",\n  \"\u9D34\": \"\u9E3B\",\n  \"\u9D37\": \"\u4D15\",\n  \"\u9D3B\": \"\u9E3F\",\n  \"\u9D3D\": \"\\ud86d\",\n  \"\u9D3F\": \"\u9E3D\",\n  \"\u9D41\": \"\u4D14\",\n  \"\u9D42\": \"\u9E3A\",\n  \"\u9D43\": \"\u9E3C\",\n  \"\u9D4A\": \"\\ud86d\",\n  \"\u9D4F\": \"\\ud873\",\n  \"\u9D50\": \"\u9E40\",\n  \"\u9D51\": \"\u9E43\",\n  \"\u9D52\": \"\u9E46\",\n  \"\u9D53\": \"\u9E41\",\n  \"\u9D5A\": \"\\ud868\",\n  \"\u9D5C\": \"\u9E48\",\n  \"\u9D5D\": \"\u9E45\",\n  \"\u9D5F\": \"\\ud86d\",\n  \"\u9D60\": \"\u9E44\",\n  \"\u9D61\": \"\u9E49\",\n  \"\u9D67\": \"\\ud86d\",\n  \"\u9D69\": \"\\ud86d\",\n  \"\u9D6A\": \"\u9E4C\",\n  \"\u9D6B\": \"\\ud86d\",\n  \"\u9D6C\": \"\u9E4F\",\n  \"\u9D6E\": \"\u9E50\",\n  \"\u9D6F\": \"\u9E4E\",\n  \"\u9D70\": \"\u96D5\",\n  \"\u9D72\": \"\u9E4A\",\n  \"\u9D77\": \"\u9E53\",\n  \"\u9D7E\": \"\u9E4D\",\n  \"\u9D84\": \"\u4D16\",\n  \"\u9D87\": \"\u9E2B\",\n  \"\u9D89\": \"\u9E51\",\n  \"\u9D8A\": \"\u9E52\",\n  \"\u9D8C\": \"\\ud86d\",\n  \"\u9D92\": \"\\ud86d\",\n  \"\u9D93\": \"\u9E4B\",\n  \"\u9D96\": \"\u9E59\",\n  \"\u9D97\": \"\\ud86d\",\n  \"\u9D98\": \"\u9E55\",\n  \"\u9D9A\": \"\u9E57\",\n  \"\u9DA0\": \"\\ud873\",\n  \"\u9DA1\": \"\u9E56\",\n  \"\u9DA5\": \"\u9E5B\",\n  \"\u9DA6\": \"\\ud86d\",\n  \"\u9DA9\": \"\u9E5C\",\n  \"\u9DAA\": \"\u4D17\",\n  \"\u9DAC\": \"\u9E27\",\n  \"\u9DAD\": \"\\ud86d\",\n  \"\u9DAF\": \"\u83BA\",\n  \"\u9DB0\": \"\\ud86d\",\n  \"\u9DB1\": \"\\ud873\",\n  \"\u9DB2\": \"\u9E5F\",\n  \"\u9DB4\": \"\u9E64\",\n  \"\u9DB9\": \"\u9E60\",\n  \"\u9DBA\": \"\u9E61\",\n  \"\u9DBB\": \"\u9E58\",\n  \"\u9DBC\": \"\u9E63\",\n  \"\u9DBF\": \"\u9E5A\",\n  \"\u9DC0\": \"\u9E5A\",\n  \"\u9DC1\": \"\u9E62\",\n  \"\u9DC2\": \"\u9E5E\",\n  \"\u9DC4\": \"\u9E21\",\n  \"\u9DC5\": \"\\ud86d\",\n  \"\u9DC9\": \"\u4D18\",\n  \"\u9DCA\": \"\u9E5D\",\n  \"\u9DD0\": \"\\ud86d\",\n  \"\u9DD3\": \"\u9E67\",\n  \"\u9DD4\": \"\\ud868\",\n  \"\u9DD6\": \"\u9E65\",\n  \"\u9DD7\": \"\u9E25\",\n  \"\u9DD9\": \"\u9E37\",\n  \"\u9DDA\": \"\u9E68\",\n  \"\u9DDF\": \"\\ud873\",\n  \"\u9DE3\": \"\\ud86d\",\n  \"\u9DE4\": \"\\ud86d\",\n  \"\u9DE5\": \"\u9E36\",\n  \"\u9DE6\": \"\u9E6A\",\n  \"\u9DE8\": \"\\ud868\",\n  \"\u9DE9\": \"\\ud86d\",\n  \"\u9DEB\": \"\u9E54\",\n  \"\u9DED\": \"\\ud873\",\n  \"\u9DEF\": \"\u9E69\",\n  \"\u9DF2\": \"\u9E6B\",\n  \"\u9DF3\": \"\u9E47\",\n  \"\u9DF4\": \"\u9E47\",\n  \"\u9DF7\": \"\\ud86d\",\n  \"\u9DF8\": \"\u9E6C\",\n  \"\u9DF9\": \"\u9E70\",\n  \"\u9DFA\": \"\u9E6D\",\n  \"\u9DFD\": \"\u9E34\",\n  \"\u9DFF\": \"\\ud873\",\n  \"\u9E02\": \"\u3D89\",\n  \"\u9E07\": \"\u9E6F\",\n  \"\u9E0A\": \"\u4D19\",\n  \"\u9E0B\": \"\\ud86d\",\n  \"\u9E0C\": \"\u9E71\",\n  \"\u9E0F\": \"\u9E72\",\n  \"\u9E11\": \"\\ud873\",\n  \"\u9E15\": \"\u9E2C\",\n  \"\u9E17\": \"\\ud86d\",\n  \"\u9E18\": \"\u9E74\",\n  \"\u9E1A\": \"\u9E66\",\n  \"\u9E1B\": \"\u9E73\",\n  \"\u9E1D\": \"\u9E42\",\n  \"\u9E1E\": \"\u9E3E\",\n  \"\u9E75\": \"\u5364\",\n  \"\u9E79\": \"\u54B8\",\n  \"\u9E7A\": \"\u9E7E\",\n  \"\u9E7C\": \"\u78B1\",\n  \"\u9E7D\": \"\u76D0\",\n  \"\u9E97\": \"\u4E3D\",\n  \"\u9EA5\": \"\u9EA6\",\n  \"\u9EA8\": \"\\ud868\",\n  \"\u9EA9\": \"\u9EB8\",\n  \"\u9EAA\": \"\u9762\",\n  \"\u9EAB\": \"\u9762\",\n  \"\u9EAC\": \"\\ud853\",\n  \"\u9EAF\": \"\u66F2\",\n  \"\u9EB2\": \"\\ud868\",\n  \"\u9EB3\": \"\\ud868\",\n  \"\u9EB4\": \"\u66F2\",\n  \"\u9EB5\": \"\u9762\",\n  \"\u9EB7\": \"\\ud86d\",\n  \"\u9EBC\": \"\u4E48\",\n  \"\u9EBD\": \"\u4E48\",\n  \"\u9EC3\": \"\u9EC4\",\n  \"\u9ECC\": \"\u9EC9\",\n  \"\u9EDE\": \"\u70B9\",\n  \"\u9EE8\": \"\u515A\",\n  \"\u9EF2\": \"\u9EEA\",\n  \"\u9EF4\": \"\u9709\",\n  \"\u9EF6\": \"\u9EE1\",\n  \"\u9EF7\": \"\u9EE9\",\n  \"\u9EFD\": \"\u9EFE\",\n  \"\u9EFF\": \"\u9F0B\",\n  \"\u9F02\": \"\u9F0C\",\n  \"\u9F09\": \"\u9F0D\",\n  \"\u9F15\": \"\u51AC\",\n  \"\u9F34\": \"\u9F39\",\n  \"\u9F4A\": \"\u9F50\",\n  \"\u9F4B\": \"\u658B\",\n  \"\u9F4E\": \"\u8D4D\",\n  \"\u9F4F\": \"\u9F51\",\n  \"\u9F52\": \"\u9F7F\",\n  \"\u9F54\": \"\u9F80\",\n  \"\u9F55\": \"\u9F81\",\n  \"\u9F57\": \"\u9F82\",\n  \"\u9F58\": \"\\ud873\",\n  \"\u9F59\": \"\u9F85\",\n  \"\u9F5C\": \"\u9F87\",\n  \"\u9F5F\": \"\u9F83\",\n  \"\u9F60\": \"\u9F86\",\n  \"\u9F61\": \"\u9F84\",\n  \"\u9F63\": \"\u51FA\",\n  \"\u9F66\": \"\u9F88\",\n  \"\u9F67\": \"\u556E\",\n  \"\u9F69\": \"\\ud86d\",\n  \"\u9F6A\": \"\u9F8A\",\n  \"\u9F6C\": \"\u9F89\",\n  \"\u9F6D\": \"\\ud86d\",\n  \"\u9F6E\": \"\\ud873\",\n  \"\u9F6F\": \"\\ud86e\",\n  \"\u9F70\": \"\\ud86d\",\n  \"\u9F72\": \"\u9F8B\",\n  \"\u9F74\": \"\\ud86d\",\n  \"\u9F76\": \"\u816D\",\n  \"\u9F77\": \"\u9F8C\",\n  \"\u9F7C\": \"\\ud873\",\n  \"\u9F7E\": \"\\ud86d\",\n  \"\u9F8D\": \"\u9F99\",\n  \"\u9F8E\": \"\u5390\",\n  \"\u9F90\": \"\u5E9E\",\n  \"\u9F91\": \"\u4DAE\",\n  \"\u9F93\": \"\\ud86d\",\n  \"\u9F94\": \"\u9F9A\",\n  \"\u9F95\": \"\u9F9B\",\n  \"\u9F9C\": \"\u9F9F\",\n  \"\u9FAD\": \"\\ud866\",\n  \"\u9FAF\": \"\\ud863\",\n  \"\u9FC1\": \"\u4724\",\n  \"\u9FD3\": \"\u9FD2\",\n  \"\uD840\uDC5E\": \"\\ud840\",\n  \"\uD840\uDF25\": \"\\ud840\",\n  \"\uD840\uDFE2\": \"\\ud840\",\n  \"\uD841\uDC0A\": \"\\ud86d\",\n  \"\uD841\uDDE3\": \"\u34C6\",\n  \"\uD841\uDF86\": \"\\ud841\",\n  \"\uD842\uDC0E\": \"\\ud841\",\n  \"\uD842\uDF19\": \"\\ud86a\",\n  \"\uD843\uDF43\": \"\\ud86a\",\n  \"\uD843\uDFD5\": \"\\ud869\",\n  \"\uD844\uDCA1\": \"\\ud86a\",\n  \"\uD844\uDCC4\": \"\\ud86a\",\n  \"\uD844\uDCD5\": \"\\ud843\",\n  \"\uD844\uDCE4\": \"\\ud86a\",\n  \"\uD844\uDD14\": \"\\ud843\",\n  \"\uD844\uDD23\": \"\\ud843\",\n  \"\uD844\uDD4F\": \"\\ud843\",\n  \"\uD844\uDD6F\": \"\\ud86a\",\n  \"\uD845\uDC4D\": \"\\ud86e\",\n  \"\uD845\uDC6D\": \"\\ud844\",\n  \"\uD845\uDCC1\": \"\\ud86a\",\n  \"\uD845\uDCFE\": \"\\ud844\",\n  \"\uD845\uDD16\": \"\\ud844\",\n  \"\uD845\uDFB5\": \"\u36DF\",\n  \"\uD845\uDFEB\": \"\\ud86d\",\n  \"\uD846\uDC39\": \"\u36FF\",\n  \"\uD846\uDC83\": \"\u36E0\",\n  \"\uD846\uDF89\": \"\\ud846\",\n  \"\uD846\uDFA3\": \"\\ud846\",\n  \"\uD847\uDCF3\": \"\\ud847\",\n  \"\uD847\uDE17\": \"\\ud86a\",\n  \"\uD847\uDE6C\": \"\\ud86a\",\n  \"\uD847\uDED5\": \"\u5C81\",\n  \"\uD847\uDF57\": \"\\ud847\",\n  \"\uD847\uDFB1\": \"\u37DC\",\n  \"\uD847\uDFD6\": \"\\ud86a\",\n  \"\uD848\uDF70\": \"\\ud86a\",\n  \"\uD84A\uDC3C\": \"\\ud849\",\n  \"\uD84A\uDCD0\": \"\\ud86a\",\n  \"\uD84A\uDCDA\": \"\\ud849\",\n  \"\uD84A\uDCED\": \"\\ud849\",\n  \"\uD84A\uDD29\": \"\\ud86a\",\n  \"\uD84A\uDD31\": \"\\ud849\",\n  \"\uD84A\uDD3F\": \"\\ud86a\",\n  \"\uD84A\uDFF7\": \"\\ud86a\",\n  \"\uD84B\uDD92\": \"\\ud86a\",\n  \"\uD84B\uDDAB\": \"\\ud84a\",\n  \"\uD84B\uDDEE\": \"\\ud84a\",\n  \"\uD84B\uDE7F\": \"\\ud84a\",\n  \"\uD84B\uDEB3\": \"\\ud86a\",\n  \"\uD84C\uDE36\": \"\u6685\",\n  \"\uD84C\uDECB\": \"\\ud84c\",\n  \"\uD84C\uDF50\": \"\\ud86e\",\n  \"\uD84D\uDE4E\": \"\u3B63\",\n  \"\uD84D\uDF2C\": \"\\ud86b\",\n  \"\uD84D\uDF55\": \"\\ud84d\",\n  \"\uD84D\uDFBB\": \"\\ud84d\",\n  \"\uD84E\uDC29\": \"\\ud84d\",\n  \"\uD84E\uDC32\": \"\\ud84d\",\n  \"\uD84E\uDFE9\": \"\\ud84e\",\n  \"\uD84E\uDFF4\": \"\\ud84e\",\n  \"\uD84E\uDFF6\": \"\u6BF6\",\n  \"\uD84F\uDF4F\": \"\\ud86b\",\n  \"\uD84F\uDFB7\": \"\u3CE2\",\n  \"\uD84F\uDFC9\": \"\\ud84f\",\n  \"\uD850\uDC63\": \"\\ud84f\",\n  \"\uD850\uDD37\": \"\\ud86b\",\n  \"\uD850\uDD76\": \"\\ud84f\",\n  \"\uD851\uDC73\": \"\\ud850\",\n  \"\uD851\uDC79\": \"\\ud86b\",\n  \"\uD851\uDC8E\": \"\\ud850\",\n  \"\uD851\uDCBB\": \"\\ud86b\",\n  \"\uD851\uDCCC\": \"\\ud86b\",\n  \"\uD851\uDCCE\": \"\\ud850\",\n  \"\uD851\uDCE9\": \"\\ud850\",\n  \"\uD851\uDE00\": \"\\ud86b\",\n  \"\uD851\uDEEE\": \"\\ud851\",\n  \"\uD851\uDEF1\": \"\\ud86d\",\n  \"\uD851\uDF06\": \"\\ud86b\",\n  \"\uD852\uDC2E\": \"\\ud86b\",\n  \"\uD852\uDC9F\": \"\\ud851\",\n  \"\uD852\uDCBB\": \"\\ud84a\",\n  \"\uD852\uDE42\": \"\\ud86d\",\n  \"\uD852\uDEBA\": \"\u3ED8\",\n  \"\uD852\uDEE9\": \"\u3ECF\",\n  \"\uD852\uDF05\": \"\\ud86b\",\n  \"\uD853\uDCF7\": \"\\ud86b\",\n  \"\uD853\uDCF8\": \"\\ud853\",\n  \"\uD853\uDDC3\": \"\\ud86b\",\n  \"\uD853\uDE2B\": \"\\ud853\",\n  \"\uD853\uDE94\": \"\\ud86b\",\n  \"\uD854\uDE9D\": \"\\ud854\",\n  \"\uD854\uDF03\": \"\\ud854\",\n  \"\uD854\uDFDD\": \"\\ud86b\",\n  \"\uD855\uDD65\": \"\\ud855\",\n  \"\uD855\uDD85\": \"\\ud855\",\n  \"\uD855\uDDB2\": \"\\ud86b\",\n  \"\uD855\uDDC7\": \"\\ud86b\",\n  \"\uD855\uDDFD\": \"\\ud871\",\n  \"\uD855\uDF10\": \"\\ud86c\",\n  \"\uD855\uDF30\": \"\\ud86c\",\n  \"\uD855\uDFB5\": \"\\ud855\",\n  \"\uD856\uDCA2\": \"\u416A\",\n  \"\uD856\uDCB6\": \"\\ud86d\",\n  \"\uD856\uDCB7\": \"\\ud86c\",\n  \"\uD856\uDE10\": \"\\ud856\",\n  \"\uD856\uDE82\": \"\\ud856\",\n  \"\uD856\uDFE4\": \"\\ud86c\",\n  \"\uD857\uDD28\": \"\\ud86c\",\n  \"\uD857\uDD3C\": \"\\ud86c\",\n  \"\uD857\uDD43\": \"\\ud857\",\n  \"\uD857\uDD4A\": \"\\ud856\",\n  \"\uD857\uDDBD\": \"\\ud86c\",\n  \"\uD857\uDE20\": \"\\ud856\",\n  \"\uD857\uDEE6\": \"\\ud86c\",\n  \"\uD857\uDF3D\": \"\\ud857\",\n  \"\uD857\uDF56\": \"\\ud857\",\n  \"\uD857\uDFAF\": \"\\ud86c\",\n  \"\uD857\uDFCA\": \"\\ud858\",\n  \"\uD858\uDC16\": \"\\ud86c\",\n  \"\uD858\uDC85\": \"\\ud858\",\n  \"\uD858\uDCC4\": \"\\ud858\",\n  \"\uD858\uDCE9\": \"\\ud86c\",\n  \"\uD858\uDD47\": \"\\ud86c\",\n  \"\uD858\uDD48\": \"\\ud86c\",\n  \"\uD858\uDDB2\": \"\\ud86d\",\n  \"\uD859\uDC80\": \"\\ud86c\",\n  \"\uD859\uDD16\": \"\\ud86c\",\n  \"\uD859\uDE27\": \"\\ud847\",\n  \"\uD859\uDFFC\": \"\\ud86c\",\n  \"\uD85A\uDC05\": \"\\ud86d\",\n  \"\uD85A\uDC5D\": \"\\ud86c\",\n  \"\uD85A\uDC88\": \"\\ud84c\",\n  \"\uD85A\uDCCE\": \"\\ud859\",\n  \"\uD85A\uDDFA\": \"\\ud86c\",\n  \"\uD85A\uDE99\": \"\u447D\",\n  \"\uD85A\uDEBD\": \"\\ud85a\",\n  \"\uD85B\uDC4C\": \"\\ud86c\",\n  \"\uD85B\uDF9F\": \"\\ud85b\",\n  \"\uD85C\uDF88\": \"\\ud85c\",\n  \"\uD85D\uDCAF\": \"\\ud86c\",\n  \"\uD85D\uDD25\": \"\\ud85d\",\n  \"\uD85D\uDD5F\": \"\\ud85c\",\n  \"\uD85D\uDF17\": \"\u461E\",\n  \"\uD85D\uDF35\": \"\u464A\",\n  \"\uD85D\uDF5E\": \"\u461B\",\n  \"\uD85D\uDFAB\": \"\\ud86c\",\n  \"\uD85D\uDFC0\": \"\\ud85d\",\n  \"\uD85E\uDC74\": \"\\ud86c\",\n  \"\uD85E\uDC84\": \"\\ud86c\",\n  \"\uD85E\uDD9D\": \"\\ud86c\",\n  \"\uD85E\uDDA7\": \"\\ud86c\",\n  \"\uD85E\uDE55\": \"\\ud86c\",\n  \"\uD85E\uDE59\": \"\u4725\",\n  \"\uD85E\uDE7C\": \"\\ud86c\",\n  \"\uD85E\uDEDD\": \"\\ud86c\",\n  \"\uD85E\uDF24\": \"\\ud86c\",\n  \"\uD85E\uDF48\": \"\\ud86c\",\n  \"\uD85E\uDF79\": \"\\ud86c\",\n  \"\uD85F\uDCDF\": \"\\ud85f\",\n  \"\uD85F\uDD73\": \"\u478C\",\n  \"\uD85F\uDD94\": \"\\ud85f\",\n  \"\uD85F\uDDA7\": \"\u478E\",\n  \"\uD85F\uDDCE\": \"\\ud86a\",\n  \"\uD85F\uDE18\": \"\\ud86c\",\n  \"\uD85F\uDE48\": \"\\ud86a\",\n  \"\uD85F\uDF6F\": \"\\ud86c\",\n  \"\uD860\uDC90\": \"\\ud86c\",\n  \"\uD860\uDD23\": \"\\ud860\",\n  \"\uD860\uDD4D\": \"\\ud860\",\n  \"\uD860\uDDAA\": \"\\ud86c\",\n  \"\uD860\uDDC1\": \"\\ud85f\",\n  \"\uD860\uDDDE\": \"\\ud860\",\n  \"\uD860\uDDE4\": \"\\ud86c\",\n  \"\uD860\uDDF0\": \"\\ud86c\",\n  \"\uD860\uDDFD\": \"\\ud86c\",\n  \"\uD860\uDE0A\": \"\\ud860\",\n  \"\uD860\uDE0C\": \"\\ud860\",\n  \"\uD860\uDEB0\": \"\u4880\",\n  \"\uD860\uDEB8\": \"\u4881\",\n  \"\uD860\uDEBB\": \"\\ud861\",\n  \"\uD860\uDEE2\": \"\u4882\",\n  \"\uD860\uDF08\": \"\\ud86d\",\n  \"\uD860\uDF70\": \"\\ud86d\",\n  \"\uD860\uDF8C\": \"\\ud86d\",\n  \"\uD860\uDFAE\": \"\\ud861\",\n  \"\uD860\uDFE0\": \"\\ud861\",\n  \"\uD860\uDFE5\": \"\\ud861\",\n  \"\uD861\uDFBA\": \"\\ud86d\",\n  \"\uD861\uDFCA\": \"\\ud86d\",\n  \"\uD862\uDCBF\": \"\\ud862\",\n  \"\uD862\uDCC8\": \"\\ud862\",\n  \"\uD862\uDCDE\": \"\\ud861\",\n  \"\uD862\uDCE7\": \"\\ud862\",\n  \"\uD862\uDD3B\": \"\\ud862\",\n  \"\uD862\uDD5B\": \"\\ud863\",\n  \"\uD862\uDD5F\": \"\\ud86d\",\n  \"\uD862\uDDAB\": \"\u4980\",\n  \"\uD862\uDDC0\": \"\\ud872\",\n  \"\uD862\uDDDC\": \"\u4981\",\n  \"\uD862\uDDF0\": \"\\ud86d\",\n  \"\uD862\uDDF1\": \"\\ud863\",\n  \"\uD862\uDE0F\": \"\\ud872\",\n  \"\uD862\uDE1B\": \"\\ud86d\",\n  \"\uD862\uDE22\": \"\\ud86d\",\n  \"\uD862\uDE70\": \"\\ud86d\",\n  \"\uD862\uDE95\": \"\\ud86d\",\n  \"\uD862\uDED2\": \"\\ud863\",\n  \"\uD862\uDF16\": \"\\ud86d\",\n  \"\uD862\uDF46\": \"\\ud872\",\n  \"\uD862\uDF4E\": \"\\ud872\",\n  \"\uD862\uDF56\": \"\\ud86d\",\n  \"\uD862\uDF78\": \"\\ud86d\",\n  \"\uD862\uDF82\": \"\\ud863\",\n  \"\uD862\uDFB3\": \"\\ud86d\",\n  \"\uD862\uDFC5\": \"\u497F\",\n  \"\uD862\uDFDF\": \"\\ud86d\",\n  \"\uD863\uDC03\": \"\\ud86d\",\n  \"\uD863\uDC0B\": \"\\ud86d\",\n  \"\uD863\uDC25\": \"\\ud86d\",\n  \"\uD863\uDC32\": \"\\ud86d\",\n  \"\uD863\uDCB3\": \"\\ud86d\",\n  \"\uD863\uDCD1\": \"\\ud863\",\n  \"\uD863\uDCD5\": \"\\ud863\",\n  \"\uD863\uDD17\": \"\\ud863\",\n  \"\uD863\uDD39\": \"\\ud86d\",\n  \"\uD863\uDD69\": \"\\ud863\",\n  \"\uD863\uDD78\": \"\\ud863\",\n  \"\uD863\uDD80\": \"\\ud863\",\n  \"\uD863\uDD8F\": \"\\ud863\",\n  \"\uD863\uDDAE\": \"\\ud863\",\n  \"\uD863\uDDB2\": \"\\ud863\",\n  \"\uD863\uDDF2\": \"\\ud863\",\n  \"\uD863\uDF33\": \"\\ud86d\",\n  \"\uD863\uDF4F\": \"\\ud863\",\n  \"\uD864\uDC28\": \"\\ud86d\",\n  \"\uD864\uDD59\": \"\\ud86d\",\n  \"\uD864\uDF96\": \"\\ud86d\",\n  \"\uD864\uDFA2\": \"\\ud864\",\n  \"\uD864\uDFC2\": \"\\ud86d\",\n  \"\uD864\uDFE0\": \"\\ud86d\",\n  \"\uD864\uDFEA\": \"\\ud864\",\n  \"\uD864\uDFF7\": \"\\ud86c\",\n  \"\uD865\uDC54\": \"\\ud86d\",\n  \"\uD865\uDC8E\": \"\\ud86d\",\n  \"\uD865\uDCE3\": \"\\ud865\",\n  \"\uD865\uDCE5\": \"\\ud86d\",\n  \"\uD865\uDD11\": \"\\ud86d\",\n  \"\uD865\uDD33\": \"\\ud86d\",\n  \"\uD865\uDDB0\": \"\\ud86e\",\n  \"\uD865\uDDC0\": \"\\ud865\",\n  \"\uD865\uDDD3\": \"\\ud86d\",\n  \"\uD865\uDDF4\": \"\\ud86d\",\n  \"\uD865\uDE00\": \"\\ud865\",\n  \"\uD865\uDE1D\": \"\\ud865\",\n  \"\uD865\uDE39\": \"\\ud865\",\n  \"\uD865\uDE3A\": \"\\ud865\",\n  \"\uD865\uDE48\": \"\\ud865\",\n  \"\uD865\uDE9B\": \"\\ud865\",\n  \"\uD865\uDEA5\": \"\\ud866\",\n  \"\uD865\uDEA9\": \"\\ud86d\",\n  \"\uD865\uDEB5\": \"\\ud866\",\n  \"\uD865\uDEC6\": \"\\ud866\",\n  \"\uD865\uDECC\": \"\\ud86d\",\n  \"\uD865\uDEE1\": \"\\ud86d\",\n  \"\uD865\uDEE9\": \"\\ud866\",\n  \"\uD865\uDF07\": \"\\ud866\",\n  \"\uD865\uDF26\": \"\\ud866\",\n  \"\uD865\uDF35\": \"\\ud866\",\n  \"\uD865\uDF54\": \"\\ud866\",\n  \"\uD865\uDF7D\": \"\\ud86d\",\n  \"\uD865\uDF84\": \"\\ud866\",\n  \"\uD865\uDFA6\": \"\\ud866\",\n  \"\uD865\uDFAF\": \"\u4B6A\",\n  \"\uD865\uDFD0\": \"\\ud866\",\n  \"\uD865\uDFD7\": \"\\ud86d\",\n  \"\uD866\uDC34\": \"\\ud866\",\n  \"\uD866\uDC63\": \"\\ud866\",\n  \"\uD866\uDC7A\": \"\\ud866\",\n  \"\uD866\uDCA1\": \"\\ud866\",\n  \"\uD866\uDCB4\": \"\\ud866\",\n  \"\uD866\uDCB8\": \"\\ud866\",\n  \"\uD866\uDCBE\": \"\\ud866\",\n  \"\uD866\uDCCF\": \"\\ud866\",\n  \"\uD866\uDCD1\": \"\u4BC3\",\n  \"\uD866\uDCEB\": \"\\ud866\",\n  \"\uD866\uDCF5\": \"\\ud866\",\n  \"\uD866\uDCFA\": \"\\ud866\",\n  \"\uD866\uDD0A\": \"\\ud866\",\n  \"\uD866\uDD19\": \"\\ud866\",\n  \"\uD866\uDD32\": \"\\ud866\",\n  \"\uD866\uDD38\": \"\\ud866\",\n  \"\uD866\uDD44\": \"\\ud866\",\n  \"\uD866\uDD47\": \"\\ud866\",\n  \"\uD866\uDD49\": \"\\ud866\",\n  \"\uD866\uDD51\": \"\\ud866\",\n  \"\uD866\uDDA0\": \"\\ud86e\",\n  \"\uD866\uDDC6\": \"\\ud866\",\n  \"\uD866\uDF59\": \"\\ud866\",\n  \"\uD866\uDFC1\": \"\\ud86d\",\n  \"\uD866\uDFF3\": \"\\ud866\",\n  \"\uD867\uDC00\": \"\\ud866\",\n  \"\uD867\uDC39\": \"\\ud867\",\n  \"\uD867\uDCE4\": \"\\ud867\",\n  \"\uD867\uDD35\": \"\\ud867\",\n  \"\uD867\uDD66\": \"\\ud86e\",\n  \"\uD867\uDD69\": \"\\ud867\",\n  \"\uD867\uDD79\": \"\\ud867\",\n  \"\uD867\uDD81\": \"\\ud86d\",\n  \"\uD867\uDD98\": \"\u4C9E\",\n  \"\uD867\uDDB0\": \"\\ud867\",\n  \"\uD867\uDDB1\": \"\\ud867\",\n  \"\uD867\uDDF0\": \"\\ud867\",\n  \"\uD867\uDE03\": \"\\ud867\",\n  \"\uD867\uDE04\": \"\\ud86d\",\n  \"\uD867\uDE21\": \"\\ud86d\",\n  \"\uD867\uDE26\": \"\\ud867\",\n  \"\uD867\uDED7\": \"\\ud86d\",\n  \"\uD867\uDEEC\": \"\\ud86d\",\n  \"\uD867\uDEEE\": \"\\ud86d\",\n  \"\uD867\uDF36\": \"\\ud86d\",\n  \"\uD867\uDF47\": \"\\ud867\",\n  \"\uD867\uDFC5\": \"\\ud86e\",\n  \"\uD867\uDFE4\": \"\\ud86d\",\n  \"\uD867\uDFEA\": \"\\ud868\",\n  \"\uD868\uDC16\": \"\\ud86d\",\n  \"\uD868\uDC26\": \"\\ud868\",\n  \"\uD868\uDC3E\": \"\\ud868\",\n  \"\uD868\uDC48\": \"\\ud868\",\n  \"\uD868\uDC56\": \"\\ud868\",\n  \"\uD868\uDC86\": \"\\ud868\",\n  \"\uD868\uDCCD\": \"\\ud868\",\n  \"\uD868\uDCCF\": \"\\ud868\",\n  \"\uD868\uDCD2\": \"\\ud86d\",\n  \"\uD868\uDCE7\": \"\\ud86d\",\n  \"\uD868\uDD06\": \"\\ud868\",\n  \"\uD868\uDD15\": \"\\ud868\",\n  \"\uD868\uDD42\": \"\\ud86d\",\n  \"\uD868\uDDB7\": \"\\ud86d\",\n  \"\uD868\uDDF3\": \"\\ud868\",\n  \"\uD868\uDE3C\": \"\\ud884\",\n  \"\uD868\uDE78\": \"\\ud86d\",\n  \"\uD868\uDEFF\": \"\\ud86e\",\n  \"\uD868\uDF2D\": \"\\ud86d\",\n  \"\uD868\uDF60\": \"\\ud86d\",\n  \"\uD869\uDCF0\": \"\\ud86d\",\n  \"\uD869\uDD35\": \"\\ud869\",\n  \"\uD869\uDE00\": \"\\ud869\",\n  \"\uD869\uDE2F\": \"\\ud869\",\n  \"\uD869\uDE4F\": \"\\ud86d\",\n  \"\uD869\uDFD6\": \"\\ud841\",\n  \"\uD86B\uDDD3\": \"\\ud84f\",\n  \"\uD86D\uDCA1\": \"\\ud86d\",\n  \"\uD86D\uDF26\": \"\\ud86d\"\n}", "import ChineseMap from './chinese-conv.json'\n\nexport const tify = (text: string) => {\n    return text.split('').map(char => (ChineseMap as any)[char] || char).join('')\n}\n\nexport const sify = (text: string) => {\n    const reverseMap: Record<string, string> = {}\n    for (const [s, t] of Object.entries(ChineseMap)) {\n        reverseMap[t] = s\n    }\n    return text.split('').map(char => reverseMap[char] || char).join('')\n}\n", "import { Llama3CppCtodService } from './index'\nimport { flow, Once } from 'power-helper'\nimport { tify, sify } from '../../utils/chinese-conv'\nimport { Template } from '@huggingface/jinja'\n\ntype Message = {\n    role: string\n    content: string\n}\n\ntype Options = any\n\nexport type Config = {\n    baseUrl: string\n    headers: Record<string, string>\n    autoConvertTraditionalChinese: boolean\n}\n\ntype Stream = {\n    onMessage: (message: string) => void\n    onEnd?: () => void\n    onWarn?: (error: any) => void\n    onError?: (error: any) => void\n}\n\nclass Requester {\n    private core: Llama3CppCompletion\n    private streamAbortControllers: {\n        id: string\n        controller: AbortController\n    }[] = []\n\n    constructor(core: Llama3CppCompletion) {\n        this.core = core\n    }\n\n    private createAbortController() {\n        const streamAbortController = new AbortController()\n        const streamAbortControllerId = flow.createUuid()\n        this.streamAbortControllers.push({\n            id: streamAbortControllerId,\n            controller: streamAbortController\n        })\n        return {\n            signal: streamAbortController.signal,\n            controllerId: streamAbortControllerId\n        }\n    }\n\n    private removeAbortController(streamAbortControllerId: string) {\n        this.streamAbortControllers = this.streamAbortControllers.filter(e => e.id !== streamAbortControllerId)\n    }\n\n    async stream(params: {\n        path: string\n        data: Record<string, any> | (() => Promise<any>)\n        onMessage: (data: any) => void\n        onEnd: () => void\n        onWarn: (error: any) => void\n        onError: (error: any) => void\n    }) {\n        const { signal, controllerId } = this.createAbortController()\n        const end = () => {\n            this.removeAbortController(controllerId)\n            params.onEnd()\n        }\n        const reader = async(response: Response) => {\n            if (response.body) {\n                let reader = response.body.getReader()\n                let done = false\n                let chunk = ''\n                while (!done) {\n                    const { value, done: readerDone } = await reader.read()\n                    if (value) {\n                        chunk += new TextDecoder('utf-8').decode(value)\n                        const payloads = chunk.split('\\n\\n')\n                        chunk = payloads.pop() || ''\n                        payloads.forEach(payload => {\n                            if (payload.includes('[DONE]')) {\n                                done = true\n                            }\n                            if (payload.startsWith('data:')) {\n                                try {\n                                    const data = JSON.parse(payload.replace('data: ', ''))\n                                    params.onMessage(data)\n                                } catch (error) {\n                                    params.onWarn(error)\n                                }\n                            }\n                        })\n                    }\n                    if (readerDone) {\n                        done = true\n                    }\n                }\n                end()\n            } else {\n                params.onError(new Error('Body not found.'))\n            }\n        }\n        fetch(`${this.core.config.baseUrl}/${params.path}`, {\n            method: 'POST',\n            body: JSON.stringify(typeof params.data === 'function' ? (await params.data()) : params.data),\n            signal,\n            headers: {\n                'Content-Type': 'application/json',\n                ...this.core.config.headers\n            }\n        })\n            .then(reader)\n            .catch(error => {\n                if (error instanceof Error && error.message.includes('The user aborted a request')) {\n                    end()\n                } else {\n                    params.onError(error)\n                }\n            })\n    }\n\n    async fetch(params: {\n        path: string\n        data: any\n    }) {\n        const { signal, controllerId } = this.createAbortController()\n        try {\n            const result = await this.core.core._axios.post(`${this.core.config.baseUrl}/${params.path}`, params.data, {\n                signal,\n                headers: {\n                    'Content-Type': 'application/json',\n                    ...this.core.config.headers\n                }\n            })\n            return {\n                data: result.data\n            }\n        } finally {\n            this.removeAbortController(controllerId)\n        }\n    }\n\n    cancel() {\n        this.streamAbortControllers.forEach(e => e.controller.abort())\n        this.streamAbortControllers = []\n    }\n\n    export() {\n        return {\n            cancel: this.cancel.bind(this)\n        }\n    }\n}\n\nexport class Llama3CppCompletion {\n    private getProp = new Once({\n        handler: async() => {\n            const url = `${this.config.baseUrl}/props`\n            const { data: props } = await this.core._axios.get<{\n                chat_template: string\n                bos_token: string\n                eos_token: string\n            }>(url, {})\n            return props\n        }\n    })\n\n    core: Llama3CppCtodService\n    config: Config = {\n        baseUrl: '',\n        headers: {},\n        autoConvertTraditionalChinese: true\n    }\n\n    constructor(core: Llama3CppCtodService) {\n        this.core = core\n    }\n\n    setConfig(config: Partial<Config>) {\n        this.config = {\n            ...this.config,\n            ...config\n        }\n    }\n\n    completion(params: {\n        options?: Options\n        messages: Message[]\n    }) {\n        const lastMessage = params.messages.at(-1) || ''\n        const requester = new Requester(this)\n        return {\n            ...requester.export(),\n            run: async(): Promise<{\n                message: string\n                fullMessage: string\n            }> => {\n                const props = await this.getProp.run()\n                const template = new Template(props.chat_template)\n                const prompt = template.render({\n                    bos_token: props.bos_token,\n                    messages: params.messages\n                }).slice(0, props.eos_token.length * -1 - 1)\n                const result = await requester.fetch({\n                    path: 'completion',\n                    data: {\n                        ...(params.options || {}),\n                        prompt: this.config.autoConvertTraditionalChinese ? sify(prompt) : prompt\n                    }\n                })\n                const message = this.config.autoConvertTraditionalChinese ? tify(result.data.content) : result.data.content\n                return {\n                    message,\n                    fullMessage: `${lastMessage}${message}`\n                }\n            }\n        }\n    }\n\n    completionStream(params: Stream & {\n        messages: Message[]\n        options?: Options\n    }) {\n        const requester = new Requester(this)\n        requester.stream({\n            path: 'completion',\n            onEnd: params.onEnd || (() => null),\n            onMessage: e => {\n                const message = this.config.autoConvertTraditionalChinese ? tify(e.content) : e.content\n                params.onMessage(message)\n            },\n            onWarn: params.onWarn || (() => null),\n            onError: params.onError || (() => null),\n            data: async() => {\n                const props = await this.getProp.run()\n                const template = new Template(props.chat_template)\n                const prompt = template.render({\n                    bos_token: props.bos_token,\n                    messages: params.messages\n                }).slice(0, props.eos_token.length * -1 - 1)\n                return {\n                    ...(params.options || {}),\n                    prompt: this.config.autoConvertTraditionalChinese ? sify(prompt) : prompt,\n                    stream: true\n                }\n            }\n        })\n        return requester.export()\n    }\n\n    talk(params: {\n        options?: Options\n        messages: Message[]\n        response_format?: {\n            type: 'json_object'\n            schema: any\n        }\n    }) {\n        const requester = new Requester(this)\n        return {\n            ...requester.export(),\n            run: async(): Promise<{\n                message: string\n            }> => {\n                const result = await requester.fetch({\n                    path: 'v1/chat/completions',\n                    data: {\n                        ...(params.options || {}),\n                        response_format: params.response_format,\n                        messages: params.messages.map(e => {\n                            return {\n                                role: e.role,\n                                content: this.config.autoConvertTraditionalChinese ? sify(e.content) : e.content\n                            }\n                        })\n                    }\n                })\n                const content = result.data.choices[0].message.content || ''\n                return {\n                    message: this.config.autoConvertTraditionalChinese ? tify(content) : content\n                }\n            }\n        }\n    }\n\n    talkStream(params: Stream & {\n        options?: Options\n        messages: Message[]\n    }) {\n        const requester = new Requester(this)\n        requester.stream({\n            path: 'v1/chat/completions',\n            onEnd: params.onEnd || (() => null),\n            onMessage: e => {\n                let content = e.choices[0].delta.content\n                if (content) {\n                    const message = this.config.autoConvertTraditionalChinese ? tify(content) : content\n                    params.onMessage(message)\n                }\n            },\n            onWarn: params.onWarn || (() => null),\n            onError: params.onError || (() => null),\n            data: {\n                ...(params.options || {}),\n                stream: true,\n                messages: params.messages.map(e => {\n                    return {\n                        role: e.role,\n                        content: this.config.autoConvertTraditionalChinese ? sify(e.content) : e.content\n                    }\n                })\n            }\n        })\n        return requester.export()\n    }\n}\n", "import { json } from 'power-helper'\nimport { GoogleCtodService } from './index'\nimport { PromiseResponseType } from '../../types'\n\n/**\n *  if data:\n *  data: base64 string,\n *  mimeType: image/jpeg,\n */\n\ntype Part = {\n    text: string\n} | {\n    inlineData: {\n        data: string\n        mimeType: string\n    }\n}\n\nexport type GoogleMessage = {\n    role: 'model' | 'user'\n    parts: Part[]\n}\n\nexport type Config = {\n    /**\n     * @zh \u9078\u64C7\u904B\u884C\u7684\u6A21\u578B\u3002\n     * @en What model to use.\n     */\n    model: string\n}\n\nexport class GoogleChat {\n    google: GoogleCtodService\n    config: Config = {\n        model: 'gemini-1.5-flash'\n    }\n\n    constructor(google: GoogleCtodService) {\n        this.google = google\n    }\n\n    /**\n     * @zh \u6539\u8B8A\u5C0D\u8A71\u7684\u4E00\u4E9B\u8A2D\u5B9A\n     * @en Change some settings of the conversation\n     */\n\n    setConfig(options: Partial<Config>) {\n        Object.assign(this.config, options)\n    }\n\n    /**\n     * @zh \u9032\u884C\u5C0D\u8A71\n     * @en Talk to the AI\n     */\n\n    async talk(messages: GoogleMessage[] = []) {\n        const newMessages = json.jpjs(messages)\n        const model = this.google.generativeAI.getGenerativeModel({\n            model: this.config.model\n        })\n        const result = await model.generateContent({\n            contents: newMessages\n        })\n        const text = result.response.text()\n        return {\n            text,\n            newMessages: [\n                ...newMessages,\n                {\n                    role: 'model',\n                    parts: [\n                        {\n                            text\n                        }\n                    ]\n                }\n            ]\n        }\n    }\n\n    /**\n     * @zh \u9032\u884C\u5C0D\u8A71\uFF0C\u4E26\u4E14\u4EE5\u4E32\u6D41\u7684\u65B9\u5F0F\u8F38\u51FA\n     * @en Talk to the AI and output in a streaming way\n     */\n\n    talkStream(params: {\n        messages: GoogleMessage[]\n        onMessage: (_message: string) => void\n        onEnd: () => void\n        onWarn: (_warn: any) => void\n        onError: (_error: any) => void\n    }) {\n        const state = {\n            controller: new AbortController()\n        }\n        const model = this.google.generativeAI.getGenerativeModel({\n            model: this.config.model\n        })\n        const context = {\n            contents: params.messages\n        }\n        model\n            .generateContentStream(context, {\n                signal: state.controller.signal\n            })\n            .then(async({ stream }) => {\n                try {\n                    for await (const chunk of stream) {\n                        const chunkText = chunk.text()\n                        params.onMessage(chunkText)\n                    }\n                    params.onEnd()\n                } catch (error) {\n                    if (state.controller.signal.aborted) {\n                        params.onEnd()\n                    } else {\n                        throw error\n                    }\n                }\n            })\n            .catch((error) => {\n                params.onError(error)\n            })\n        return {\n            cancel: () => {\n                state.controller.abort()\n            }\n        }\n    }\n}\n\nexport type GoogleChatTalkResponse = PromiseResponseType<GoogleChat['talk']>\n", "import { validateToJsonSchema } from '../../utils/validate'\nimport { GoogleMessage, GoogleChat } from './chat'\nimport type { GoogleGenerativeAI } from '@google/generative-ai'\n\ntype GPTContent = {\n    type: 'image_url' | 'text'\n    text?: string\n    image_url?: {\n        url: string\n        detail?: string\n    }\n}\n\ntype GPTMessage = {\n    role: 'system' | 'user' | 'assistant'\n    content: string | GPTContent[]\n}\n\nexport class GoogleCtodService {\n    generativeAI: GoogleGenerativeAI\n\n    constructor(generativeAI: any) {\n        this.generativeAI = generativeAI\n    }\n\n    static chatGPTMessageToGoogleChatMessage(messages: GPTMessage[]): GoogleMessage[] {\n        const contentToParts = (content: string | GPTMessage['content']): GoogleMessage['parts'] => {\n            if (typeof content === 'string') {\n                return [\n                    {\n                        text: content\n                    }\n                ]\n            } else if (Array.isArray(content)) {\n                return content.map(({ type, image_url, text }): GoogleMessage['parts'][number] => {\n                    if (type === 'image_url') {\n                        // base64\n                        const url = image_url?.url || ''\n                        const mimeType = url.includes('data:image/png') ? 'image/png' : 'image/jpeg'\n                        return {\n                            inlineData: {\n                                data: url.split('base64,')[1] || '',\n                                mimeType\n                            }\n                        }\n                    } else {\n                        return {\n                            text: text || ''\n                        }\n                    }\n                })\n            }\n            return []\n        }\n        return messages.map((message) => {\n            if (message.role === 'user' || message.role === 'system') {\n                return {\n                    role: 'user',\n                    parts: contentToParts(message.content)\n                }\n            } else {\n                return {\n                    role: 'model',\n                    parts: contentToParts(message.content)\n                }\n            }\n        })\n    }\n\n    static createChatRequestWithJsonSchema(params: {\n        googleGenerativeAI: any\n        model: string\n    }) {\n        const removeAdditionalProperties = (schema: any) => {\n            if (schema.type === 'object') {\n                delete schema.additionalProperties\n                Object.keys(schema.properties).forEach((key) => {\n                    removeAdditionalProperties(schema.properties[key])\n                })\n            } else if (schema.type === 'array') {\n                removeAdditionalProperties(schema.items)\n            }\n            return schema\n        }\n        return async (messages: any[], { schema }: any) => {\n            const responseSchema = removeAdditionalProperties(validateToJsonSchema(schema.output))\n            const model = params.googleGenerativeAI.getGenerativeModel({\n                model: params.model,\n                generationConfig: {\n                    responseMimeType: 'application/json',\n                    responseSchema\n                }\n            })\n            const result = await model.generateContent({\n                contents: GoogleCtodService.chatGPTMessageToGoogleChatMessage(messages)\n            })\n            return result.response.text()\n        }\n    }\n\n    createChat() {\n        return new GoogleChat(this)\n    }\n}\n", "import { AnthropicCtodService } from './index'\nimport { PromiseResponseType } from '../../types'\n\nexport type Message = {\n    role: string\n    content: string\n}\n\nexport type Config = {\n    /**\n     * @zh \u9078\u64C7\u904B\u884C\u7684\u6A21\u578B\u3002\n     * @en What model to use.\n     */\n    model: string\n    maxTokens: number\n}\n\nexport class AnthropicChat {\n    anthropic: AnthropicCtodService\n    config: Config = {\n        model: 'claude-3-5-haiku-latest',\n        maxTokens: 8192\n    }\n\n    constructor(anthropic: AnthropicCtodService) {\n        this.anthropic = anthropic\n    }\n\n    /**\n     * @zh \u6539\u8B8A\u5C0D\u8A71\u7684\u4E00\u4E9B\u8A2D\u5B9A\n     * @en Change some settings of the conversation\n     */\n\n    setConfig(options: Partial<Config>) {\n        Object.assign(this.config, options)\n    }\n\n    /**\n     * \u79FB\u9664 system \u8A0A\u606F\n     */\n\n    private translateMessages(messages: any[]) {\n        return {\n            system: messages.find(e => e.role === 'system')?.content,\n            messages: messages.filter(e => e.role !== 'system')\n        }\n    }\n\n    /**\n     * @zh \u9032\u884C\u5C0D\u8A71\uFF0C\u4E26\u4E14\u4EE5\u7D50\u69CB\u5316\u7684\u65B9\u5F0F\u8F38\u51FA\n     * @en Talk to the AI and output in a structured way\n     */\n\n    async chatAndStructure(messages: Message[], jsonSchema: any) {\n        const anthropic = this.anthropic.anthropicSdk\n        const translateMessages = this.translateMessages(messages)\n        const msg = await anthropic.messages.create({\n            model: this.config.model,\n            max_tokens: this.config.maxTokens,\n            system: translateMessages.system,\n            messages: translateMessages.messages,\n            tools: [\n                {\n                    name: 'data',\n                    description: 'Response Data',\n                    input_schema: jsonSchema\n                }\n            ],\n            tool_choice: {\n                type: 'tool',\n                name: 'data'\n            }\n        })\n        let toolUseContent: any = msg.content.find(e => e.type === 'tool_use')\n        let response = toolUseContent?.input || null\n        if (response == null) {\n            return 'null'\n        }\n        return JSON.stringify(response)\n    }\n\n    /**\n     * @zh \u9032\u884C\u5C0D\u8A71\n     * @en Talk to the AI\n     */\n\n    async talk(messages: Message[] = []) {\n        const anthropic = this.anthropic.anthropicSdk\n        const newMessages = this.translateMessages(messages)\n        const msg = await anthropic.messages.create({\n            model: this.config.model,\n            max_tokens: this.config.maxTokens,\n            system: newMessages.system,\n            messages: newMessages.messages\n        })\n        let output = ''\n        let textContent: any = msg.content.find(e => e.type === 'text')\n        if (textContent) {\n            output = textContent.text\n        }\n        return output\n    }\n\n    /**\n     * @zh \u9032\u884C\u5C0D\u8A71\uFF0C\u4E26\u4E14\u4EE5\u4E32\u6D41\u7684\u65B9\u5F0F\u8F38\u51FA\n     * @en Talk to the AI and output in a streaming way\n     */\n\n    talkStream(params: {\n        messages: Message[]\n        onMessage: (_message: string) => void\n        onEnd: () => void\n        onWarn: (_warn: any) => void\n        onError: (_error: any) => void\n    }) {\n        let stream: Extract<Awaited<ReturnType<typeof anthropic.messages.create>>, { controller: any }> | null = null\n        const anthropic = this.anthropic.anthropicSdk\n        const { onMessage, onEnd, onError } = params\n        const { messages, system } = this.translateMessages(params.messages)\n        const performStreamedChat = async () => {\n            try {\n                stream = await anthropic.messages.create({\n                    model: this.config.model,\n                    max_tokens: this.config.maxTokens,\n                    system: system,\n                    stream: true,\n                    messages\n                })\n                for await (const messageStream of stream) {\n                    if (messageStream.type === 'content_block_delta') {\n                        const deltaText = 'text' in messageStream.delta ? messageStream.delta.text : ''\n                        onMessage(deltaText)\n                    }\n                }\n                onEnd()\n            } catch (error) {\n                onError(error)\n            }\n        }\n        performStreamedChat()\n        return {\n            cancel: () => {\n                const int = setInterval(() => {\n                    if (stream && stream.controller) {\n                        stream.controller.abort()\n                        clearInterval(int)\n                    }\n                }, 10)\n            }\n        }\n    }\n}\n\nexport type AnthropicChatTalkResponse = PromiseResponseType<AnthropicChat['talk']>\n", "import { validateToJsonSchema } from '../../utils/validate'\nimport { Config, AnthropicChat } from './chat'\nimport type { Anthropic } from '@anthropic-ai/sdk'\n\ntype GPTContent = {\n    type: 'image_url' | 'text'\n    text?: string\n    image_url?: {\n        url: string\n        detail?: string\n    }\n}\n\ntype GPTMessage = {\n    role: string\n    content: string | GPTContent[]\n}\nexport class AnthropicCtodService {\n    anthropicSdk: Anthropic\n\n    constructor(anthropicSdk: any) {\n        this.anthropicSdk = anthropicSdk\n    }\n\n    static chatGPTMessageToAnthropicChatMessage(messages: GPTMessage[]): any[] {\n        const newMessage = messages.map(e => {\n            return {\n                role: e.role,\n                content: typeof e.content === 'string'\n                    ? e.content\n                    : e.content.map((content) => {\n                        if (content.type === 'image_url') {\n                            const url = content.image_url?.url || ''\n                            return {\n                                type: 'image',\n                                source: {\n                                    type: 'base64',\n                                    media_type: url.slice(5).split(';')[0],\n                                    data: url.split(',')[1]\n                                }\n                            }\n                        }\n                        return {\n                            type: 'text',\n                            text: content.text\n                        }\n                    })\n            }\n        })\n        return newMessage\n    }\n\n    static createChatRequestWithJsonSchema(params: {\n        anthropicSdk: any\n        config?: Partial<Config>\n    }) {\n        const anthropic = new AnthropicCtodService(params.anthropicSdk)\n        const chat = anthropic.createChat()\n        chat.setConfig(params.config || {})\n        return async (messages: any[], { schema }: any) => {\n            const jsonSchema = validateToJsonSchema(schema.output)\n            const content = await chat.chatAndStructure(messages, jsonSchema)\n            return content\n        }\n    }\n\n    createChat() {\n        return new AnthropicChat(this)\n    }\n}\n", "import axios from 'axios'\nimport { XChat, Config } from './chat'\nimport { XImagesGeneration } from './images-generation'\nimport { validateToJsonSchema } from '../../utils/validate'\n\nexport class XCtodService {\n    _axios = axios.create()\n    _apiKey = ''\n\n    static createChatRequest(\n        apiKey: string | (() => Promise<string>),\n        config: Partial<Config> | (() => Promise<Partial<Config>>) = {},\n        options?: {\n            axios?: any\n        }\n    ) {\n        return async(messages: any[], { onCancel }: any) => {\n            const xAi = new XCtodService(typeof apiKey === 'string' ? apiKey : await apiKey())\n            const chat = xAi.createChat()\n            const abortController = new AbortController()\n            if (options && options.axios) {\n                xAi.setAxios(options.axios)\n            }\n            chat.setConfig(typeof config === 'function' ? await config() : config)\n            onCancel(() => abortController.abort())\n            const { text } = await chat.talk(messages, {\n                abortController\n            })\n            return text\n        }\n    }\n\n    static createChatRequestWithJsonSchema(params: {\n        axios?: any\n        apiKey: string | (() => Promise<string>)\n        config?: Partial<Pick<Config, 'model' | 'temperature'>> | (() => Promise<Partial<Pick<Config, 'model' | 'temperature'>>>)\n    }) {\n        return async(messages: any[], { schema, onCancel }: any) => {\n            const xAi = new XCtodService(typeof params.apiKey === 'string' ? params.apiKey : await params.apiKey())\n            const chat = xAi.createChat()\n            const abortController = new AbortController()\n            if (params.config) {\n                chat.setConfig(typeof params.config === 'function' ? await params.config() : params.config)\n            }\n            if (params.axios) {\n                xAi.setAxios(params.axios)\n            }\n            onCancel(() => abortController.abort())\n            const jsonSchema = validateToJsonSchema(schema.output)\n            const { text } = await chat.talk(messages, {\n                abortController,\n                jsonSchema: {\n                    name: 'data',\n                    strict: true,\n                    schema: jsonSchema\n                }\n            })\n            return text\n        }\n    }\n\n    constructor(apiKey = '') {\n        this._apiKey = apiKey\n    }\n\n    /**\n     * @zh \u5982\u679C\u4F60\u6709\u9700\u8981\u7279\u5225\u8A2D\u5B9A axios\uFF0C\u8ACB\u4F7F\u7528\u9019\u65B9\u6CD5\u3002\n     * @en If you need to set axios, please use this method.\n     */\n\n    setAxios(axios: any) {\n        this._axios = axios\n    }\n\n    /**\n     * @zh \u8A2D\u5B9A api key\u3002\n     * @en Set api key.\n     */\n\n    setConfiguration(apiKey: string) {\n        this._apiKey = apiKey\n    }\n\n    createChat() {\n        return new XChat(this)\n    }\n\n    createImagesGeneration() {\n        return new XImagesGeneration(this)\n    }\n}\n", "import { json } from 'power-helper'\nimport { XCtodService } from './index'\n\nexport type XMessage = {\n    role: 'system' | 'user' | 'assistant'\n    name?: string\n    content: string\n}\n\ntype ApiResponse = {\n    id: string\n    object: string\n    created: number\n    choices: Array<{\n        index: number\n        finish_reason: string\n        message: {\n            role: 'system' | 'user' | 'assistant'\n            name?: string\n            content: string\n        }\n    }>\n    usage: {\n        prompt_tokens: number\n        completion_tokens: number\n        total_tokens: number\n    }\n}\n\nexport type Config = {\n    /**\n     * @zh \u4E00\u6B21\u56DE\u61C9\u6578\u91CF\n     * @en How many chat completion choices to generate for each input message.\n     */\n    n: number\n    /**\n     * @zh \u9078\u64C7\u904B\u884C\u7684\u6A21\u578B'\n     * @en The model to use for this chat completion.\n     */\n    model: string\n    /**\n     * @zh \u5192\u96AA\u6307\u6578\uFF0C\u6578\u503C\u7531 0 ~ 2 \u4E4B\u9593\uFF0C\u8D8A\u4F4E\u56DE\u61C9\u8D8A\u7A69\u5B9A\u3002\n     * @en What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.\n     */\n    temperature: number\n    /**\n     * @zh \u662F\u5426\u5F37\u5236\u8981\u56DE\u50B3 JSON \u683C\u5F0F\u7684\u8CC7\u6599\n     * @en Whether to force the return of JSON format data\n     */\n    forceJsonFormat: boolean\n    /**\n     * @zh \u6BCF\u6B21\u5C0D\u8A71\u6700\u591A\u7522\u751F\u5E7E\u500B tokens\u3002\n     * @en How many tokens to complete to.\n     */\n    maxTokens?: number\n}\n\nexport class XChat {\n    xAi: XCtodService\n    config: Config = {\n        n: 1,\n        model: 'grok-3',\n        temperature: 1,\n        maxTokens: undefined,\n        forceJsonFormat: true\n    }\n\n    constructor(xAi: XCtodService) {\n        this.xAi = xAi\n    }\n\n    /**\n     * @zh \u6539\u8B8A\u5C0D\u8A71\u7684\u4E00\u4E9B\u8A2D\u5B9A\n     * @en Change some settings of the conversation\n     */\n\n    setConfig(options: Partial<Config>) {\n        Object.assign(this.config, options)\n    }\n\n    /**\n     * @zh \u9032\u884C\u5C0D\u8A71\n     * @en Talk to the AI\n     */\n\n    async talk(messages: XMessage[] = [], options?: {\n        /** \u8981 forceJsonFormat \u70BA true \u624D\u6703\u751F\u6548 */\n        jsonSchema?: any\n        abortController?: AbortController\n    }) {\n        const newMessages = json.jpjs(messages)\n        let response_format: any = undefined\n        if (this.config.forceJsonFormat) {\n            response_format = {\n                type: 'json_object'\n            }\n        }\n        if (this.config.forceJsonFormat && options?.jsonSchema) {\n            response_format = {\n                type: 'json_schema',\n                json_schema: options.jsonSchema\n            }\n        }\n        const result = await this.xAi._axios.post<ApiResponse>('https://api.x.ai/v1/chat/completions', {\n            model: this.config.model,\n            n: this.config.n,\n            messages: newMessages,\n            response_format,\n            temperature: this.config.temperature\n        }, {\n            signal: options?.abortController?.signal,\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${this.xAi._apiKey}`\n            }\n        })\n        const choices = result.data.choices || []\n        const message = choices[0]?.message || {\n            role: 'assistant',\n            content: ''\n        }\n        newMessages.push(message)\n        return {\n            id: result?.data.id as string,\n            text: message.content as string,\n            newMessages,\n            isDone: choices[0]?.finish_reason === 'stop',\n            apiResponse: result.data\n        }\n    }\n\n    talkStream(params: {\n        messages: any[]\n        onMessage: (_message: string) => void\n        onEnd: () => void\n        onWarn: (_warn: any) => void\n        onError: (_error: any) => void\n    }) {\n        const controller = new AbortController()\n        fetch('https://api.x.ai/v1/chat/completions', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${this.xAi._apiKey}`\n            },\n            body: JSON.stringify({\n                model: this.config.model,\n                stream: true,\n                messages: params.messages\n            }),\n            signal: controller.signal\n        }).then(async response => {\n            if (!response.ok) {\n                const errorText = await response.text()\n                throw new Error(`Error: ${errorText}`)\n            }\n            const reader = response.body?.pipeThrough(new TextDecoderStream()).getReader()\n            if (!reader) {\n                throw new Error('Can not get reader')\n            }\n            while (true) {\n                const { value, done } = await reader.read()\n                if (done) {\n                    break\n                }\n                const items = value.split('\\n')\n                for (let item of items) {\n                    if (item.length === 0) {\n                        continue\n                    }\n                    if (item.startsWith(':')) {\n                        continue\n                    }\n                    if (item === 'data: [DONE]') {\n                        params.onEnd()\n                        break\n                    }\n                    try {\n                        const result = JSON.parse(item.substring(6))\n                        const content = result.choices[0].delta.content\n                        params.onMessage(content)\n                    } catch (error) {\n                        params.onWarn(error)\n                    }\n                }\n            }\n        }).catch(error => {\n            if (error.name === 'AbortError') {\n                params.onEnd()\n            } else {\n                params.onError(error)\n            }\n        })\n        return {\n            cancel: () => controller.abort()\n        }\n    }\n\n    /**\n     * @zh \u958B\u555F\u6301\u7E8C\u6027\u5C0D\u8A71\n     */\n\n    async keepTalk(prompt: string | string[], oldMessages: XMessage[] = []) {\n        const result = await this.talk([\n            ...oldMessages,\n            {\n                role: 'user',\n                content: Array.isArray(prompt) ? prompt.join('\\n') : prompt\n            }\n        ])\n        return {\n            result,\n            nextTalk: (prompt: string | string[]) => this.keepTalk(prompt, result.newMessages)\n        }\n    }\n}\n", "import { XCtodService } from './index'\n\ntype ApiResponse = {\n    created: string\n    data: {\n        b64_json: string\n    }[]\n}\n\ntype Config = {\n    /**\n     * @zh \u6A21\u578B\uFF0C\u652F\u63F4 grok-2-image\n     * @en Model, support grok-2-image\n     */\n    model: 'grok-2-image'\n}\n\nexport class XImagesGeneration {\n    private xAi: XCtodService\n    private config: Config = {\n        model: 'grok-2-image'\n    }\n\n    constructor(xAi: XCtodService) {\n        this.xAi = xAi\n    }\n\n    /**\n     * @zh \u6539\u8B8A\u5C0D\u8A71\u7684\u4E00\u4E9B\u8A2D\u5B9A\n     * @en Change some settings of the conversation\n     */\n\n    setConfig(options: Partial<Config>) {\n        Object.assign(this.config, options)\n    }\n\n    /**\n     * @zh \u7522\u751F\u5716\u7247\n     * @en Generate image\n     */\n\n    async create(prompt: string) {\n        const result = await this.xAi._axios.post<ApiResponse>('https://api.x.ai/v1/images/generations', {\n            prompt,\n            n: 1,\n            model: this.config.model,\n            response_format: 'b64_json'\n        }, {\n            timeout: 1000 * 60 * 5,\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${this.xAi._apiKey}`\n            }\n        })\n        return result.data\n    }\n}\n"],
  "mappings": "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",
  "names": ["plugins_exports", "__export", "LimiterPlugin", "LimiterPluginGlobState", "PrintLogPlugin", "RetryPlugin", "RolePlugin", "Event", "ChatBrokerPlugin", "params", "__publicField", "Event", "data", "callback", "retry_default", "ChatBrokerPlugin", "yup", "log", "attach", "params", "count", "retry", "messages", "changeMessages", "print_log_default", "ChatBrokerPlugin", "yup", "params", "log", "attach", "lastUserMessage", "messages", "parseText", "output", "Event", "flow", "Schedule", "config", "state", "limiter_default", "ChatBrokerPlugin", "attach", "now", "time", "nextId", "uid", "resolve", "id", "off", "role_default", "ChatBrokerPlugin", "yup", "attach", "params", "messages", "changeMessages", "PrintLogPlugin", "print_log_default", "RetryPlugin", "retry_default", "LimiterPlugin", "limiter_default", "LimiterPluginGlobState", "RolePlugin", "role_default", "templates_exports", "__export", "requireJsonResponse", "requireJsonResponseWithHandlebars", "requireJsonResponseWithJsonSchema", "Handlebars", "record", "question", "format", "key", "value", "handlebars", "JSON5", "TextParser", "_TextParser", "params", "__publicField", "text", "jsonRegex", "matchedText", "JSON5", "Event", "flow", "Hook", "Log", "Yup", "convertSchema", "validate", "target", "schemaCallback", "Yup", "defineYupSchema", "cb", "validateToJsonSchema", "removeAllDefault", "schema", "key", "addAllAdditionalProperties", "jsonSchema", "convertSchema", "ParserError", "error", "parserFails", "__publicField", "Translator", "params", "__publicField", "data", "context", "scheme", "validate", "prompt", "schema", "text", "result", "parserName", "parserFails", "parse", "error", "ParserError", "ChatBroker", "params", "__publicField", "Hook", "Event", "Log", "Translator", "TextParser", "context", "key", "requestId", "data", "id", "flow", "waitCancel", "isCancel", "isSending", "listeners", "cancelTrigger", "eventOff", "e", "onCancel", "cb", "request", "schema", "output", "plugins", "metadata", "question", "preMessages", "messages", "ms", "count", "doBreak", "response", "parseText", "retryFlag", "lastUserMessage", "sender", "error", "ParserError", "text", "Yup", "CtoD", "params", "__publicField", "install", "ChatBroker", "context", "id", "plugins", "data", "metadata", "changeMessages", "changeOutputSchema", "schema", "Yup", "messages", "e", "axios", "OpenAIVision", "openai", "__publicField", "options", "messages", "result", "message", "json", "OpenAIChat", "openai", "__publicField", "options", "input", "result", "messages", "newMessages", "json", "isSupportJson", "response_format", "choices", "message", "params", "controller", "response", "reader", "value", "done", "items", "item", "content", "error", "prompt", "oldMessages", "OpenAIImagesGeneration", "openai", "__publicField", "options", "prompt", "OpenAICtodService", "_OpenAICtodService", "apiKey", "__publicField", "axios", "config", "options", "messages", "onCancel", "openai", "chat", "abortController", "text", "params", "schema", "jsonSchema", "validateToJsonSchema", "baseUrl", "OpenAIChat", "OpenAIVision", "OpenAIImagesGeneration", "axios", "chinese_conv_default", "tify", "text", "char", "chinese_conv_default", "sify", "reverseMap", "s", "t", "flow", "Once", "Template", "Requester", "core", "__publicField", "streamAbortController", "streamAbortControllerId", "flow", "e", "params", "signal", "controllerId", "end", "reader", "response", "done", "chunk", "value", "readerDone", "payloads", "payload", "data", "error", "Llama3CppCompletion", "Once", "url", "props", "config", "lastMessage", "requester", "prompt", "Template", "result", "sify", "message", "tify", "content", "Llama3CppCtodService", "_Llama3CppCtodService", "__publicField", "axios", "params", "messages", "schema", "onCancel", "chat", "config", "formatSchema", "validateToJsonSchema", "sify", "run", "cancel", "message", "Llama3CppCompletion", "json", "GoogleChat", "google", "__publicField", "options", "messages", "newMessages", "json", "text", "params", "state", "model", "context", "stream", "chunk", "chunkText", "error", "GoogleCtodService", "_GoogleCtodService", "generativeAI", "__publicField", "messages", "contentToParts", "content", "type", "image_url", "text", "url", "mimeType", "message", "params", "removeAdditionalProperties", "schema", "key", "responseSchema", "validateToJsonSchema", "GoogleChat", "AnthropicChat", "anthropic", "__publicField", "options", "messages", "e", "jsonSchema", "translateMessages", "response", "newMessages", "msg", "output", "textContent", "params", "stream", "onMessage", "onEnd", "onError", "system", "messageStream", "deltaText", "error", "int", "AnthropicCtodService", "_AnthropicCtodService", "anthropicSdk", "__publicField", "messages", "e", "content", "url", "params", "chat", "schema", "jsonSchema", "validateToJsonSchema", "AnthropicChat", "axios", "json", "XChat", "xAi", "__publicField", "options", "messages", "newMessages", "json", "response_format", "result", "choices", "message", "params", "controller", "response", "errorText", "reader", "value", "done", "items", "item", "content", "error", "prompt", "oldMessages", "XImagesGeneration", "xAi", "__publicField", "options", "prompt", "XCtodService", "_XCtodService", "apiKey", "__publicField", "axios", "config", "options", "messages", "onCancel", "xAi", "chat", "abortController", "text", "params", "schema", "jsonSchema", "validateToJsonSchema", "XChat", "XImagesGeneration"]
}
