import * as _plugins from './plugins';
import * as _templates from './templates';
import * as _Translator from './core/translator';
import { ValidateCallback } from './utils/validate';
import { OpenAI as _OpenAI } from './service/openai';
import { TextParser as _TextParser } from './core/parser';
import { ChatBroker as _ChatBroker } from './broker/chat';
import { ChatBrokerPlugin as _ChatBrokerPlugin } from './core/plugin';
export declare type OpenAI = _OpenAI;
export declare type TextParser = _TextParser;
export declare type Translator<S extends ValidateCallback<any>, O extends ValidateCallback<any>> = _Translator.Translator<S, O>;
export declare type TranslatorParams<S extends ValidateCallback<any>, O extends ValidateCallback<any>> = _Translator.TranslatorParams<S, O>;
export declare type ChatBroker<S extends ValidateCallback<any>, O extends ValidateCallback<any>> = _ChatBroker<S, O, any, any>;
export declare type ChatBrokerPlugin<T extends ValidateCallback<any>, R extends ValidateCallback<any>> = _ChatBrokerPlugin<T, R>;
export declare const OpenAI: typeof _OpenAI;
export declare const TextParser: typeof _TextParser;
export declare const Translator: typeof _Translator.Translator;
export declare const ChatBroker: typeof _ChatBroker;
export declare const ChatBrokerPlugin: typeof _ChatBrokerPlugin;
export declare const plugins: typeof _plugins;
export declare const templates: typeof _templates;
export declare const ctod: {
    OpenAI: typeof _OpenAI;
    plugins: typeof _plugins;
    templates: typeof _templates;
    ChatBroker: typeof _ChatBroker;
    Translator: typeof _Translator.Translator;
    TextParser: typeof _TextParser;
    ChatBrokerPlugin: typeof _ChatBrokerPlugin;
};
export default ctod;
